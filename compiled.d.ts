import * as $protobuf from "protobufjs";
export namespace WUProtos {

    namespace Data {

        interface IAnonymizeOptions {
            user_id?: (boolean|null);
            remove?: (boolean|null);
            unknown?: (boolean|null);
        }

        class AnonymizeOptions implements IAnonymizeOptions {
            constructor(properties?: WUProtos.Data.IAnonymizeOptions);
            public user_id: boolean;
            public remove: boolean;
            public unknown: boolean;
            public static encode(message: WUProtos.Data.IAnonymizeOptions, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.AnonymizeOptions;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.AnonymizeOptions;
            public static toObject(message: WUProtos.Data.AnonymizeOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        enum ARMode {
            AR_MODE_UNSET = 0,
            advanced = 1,
            simple = 2,
            park = 3
        }

        interface IAudioParameter {
            param_name?: (string|null);
            param_value?: (number|null);
        }

        class AudioParameter implements IAudioParameter {
            constructor(properties?: WUProtos.Data.IAudioParameter);
            public param_name: string;
            public param_value: number;
            public static encode(message: WUProtos.Data.IAudioParameter, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.AudioParameter;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.AudioParameter;
            public static toObject(message: WUProtos.Data.AudioParameter, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace Buff {

            interface IActiveBuff {
                gmt_buff_id?: (string|null);
                expiration?: (WUProtos.Data.Buff.ActiveBuff.IActiveBuffExpiration|null);
                source?: (WUProtos.Data.Buff.ActiveBuff.IActiveBuffSource|null);
                start_time_ms?: (number|Long|null);
            }

            class ActiveBuff implements IActiveBuff {
                constructor(properties?: WUProtos.Data.Buff.IActiveBuff);
                public gmt_buff_id: string;
                public expiration?: (WUProtos.Data.Buff.ActiveBuff.IActiveBuffExpiration|null);
                public source?: (WUProtos.Data.Buff.ActiveBuff.IActiveBuffSource|null);
                public start_time_ms: (number|Long);
                public static encode(message: WUProtos.Data.Buff.IActiveBuff, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuff;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuff;
                public static toObject(message: WUProtos.Data.Buff.ActiveBuff, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ActiveBuff {

                interface IActiveBuffExpiration {
                    time?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ITimeActiveBuffExpiration|null);
                    charges?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IChargesActiveBuffExpiration|null);
                    profession?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IProfessionBuffExpiration|null);
                    permanent?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IPermanentBuffExpiration|null);
                    challenge?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IChallengeBuffExpiration|null);
                }

                class ActiveBuffExpiration implements IActiveBuffExpiration {
                    constructor(properties?: WUProtos.Data.Buff.ActiveBuff.IActiveBuffExpiration);
                    public time?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ITimeActiveBuffExpiration|null);
                    public charges?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IChargesActiveBuffExpiration|null);
                    public profession?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IProfessionBuffExpiration|null);
                    public permanent?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IPermanentBuffExpiration|null);
                    public challenge?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IChallengeBuffExpiration|null);
                    public Type?: ("time"|"charges"|"profession"|"permanent"|"challenge");
                    public static encode(message: WUProtos.Data.Buff.ActiveBuff.IActiveBuffExpiration, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration;
                    public static toObject(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ActiveBuffExpiration {

                    interface ITimeActiveBuffExpiration {
                        expiry_time_ms?: (number|Long|null);
                    }

                    class TimeActiveBuffExpiration implements ITimeActiveBuffExpiration {
                        constructor(properties?: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ITimeActiveBuffExpiration);
                        public expiry_time_ms: (number|Long);
                        public static encode(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ITimeActiveBuffExpiration, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.TimeActiveBuffExpiration;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.TimeActiveBuffExpiration;
                        public static toObject(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.TimeActiveBuffExpiration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IChargesActiveBuffExpiration {
                        encounter_id?: (Uint8Array|null);
                        remaining_charges?: (number|null);
                    }

                    class ChargesActiveBuffExpiration implements IChargesActiveBuffExpiration {
                        constructor(properties?: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IChargesActiveBuffExpiration);
                        public encounter_id: Uint8Array;
                        public remaining_charges: number;
                        public static encode(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IChargesActiveBuffExpiration, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ChargesActiveBuffExpiration;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ChargesActiveBuffExpiration;
                        public static toObject(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ChargesActiveBuffExpiration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IPermanentBuffExpiration {
                    }

                    class PermanentBuffExpiration implements IPermanentBuffExpiration {
                        constructor(properties?: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IPermanentBuffExpiration);
                        public static encode(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IPermanentBuffExpiration, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.PermanentBuffExpiration;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.PermanentBuffExpiration;
                        public static toObject(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.PermanentBuffExpiration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IChallengeBuffExpiration {
                    }

                    class ChallengeBuffExpiration implements IChallengeBuffExpiration {
                        constructor(properties?: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IChallengeBuffExpiration);
                        public static encode(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IChallengeBuffExpiration, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ChallengeBuffExpiration;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ChallengeBuffExpiration;
                        public static toObject(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ChallengeBuffExpiration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IProfessionBuffExpiration {
                        profession_gmt_id?: (string|null);
                    }

                    class ProfessionBuffExpiration implements IProfessionBuffExpiration {
                        constructor(properties?: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IProfessionBuffExpiration);
                        public profession_gmt_id: string;
                        public static encode(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.IProfessionBuffExpiration, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ProfessionBuffExpiration;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ProfessionBuffExpiration;
                        public static toObject(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffExpiration.ProfessionBuffExpiration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IActiveBuffSource {
                    vault_item?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IVaultItemActiveBuffSource|null);
                    profession?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IProfessionActiveBuffSource|null);
                    map_ability?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IMapAbilityActiveBuffSource|null);
                }

                class ActiveBuffSource implements IActiveBuffSource {
                    constructor(properties?: WUProtos.Data.Buff.ActiveBuff.IActiveBuffSource);
                    public vault_item?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IVaultItemActiveBuffSource|null);
                    public profession?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IProfessionActiveBuffSource|null);
                    public map_ability?: (WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IMapAbilityActiveBuffSource|null);
                    public Type?: ("vault_item"|"profession"|"map_ability");
                    public static encode(message: WUProtos.Data.Buff.ActiveBuff.IActiveBuffSource, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource;
                    public static toObject(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ActiveBuffSource {

                    interface IProfessionActiveBuffSource {
                        profession_gmt_id?: (string|null);
                        profession_gmt_node_id?: (string|null);
                        profession_node_level?: (number|null);
                    }

                    class ProfessionActiveBuffSource implements IProfessionActiveBuffSource {
                        constructor(properties?: WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IProfessionActiveBuffSource);
                        public profession_gmt_id: string;
                        public profession_gmt_node_id: string;
                        public profession_node_level: number;
                        public static encode(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IProfessionActiveBuffSource, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.ProfessionActiveBuffSource;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.ProfessionActiveBuffSource;
                        public static toObject(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.ProfessionActiveBuffSource, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IMapAbilityActiveBuffSource {
                        map_ability_gmt_id?: (string|null);
                        map_ability_level?: (number|null);
                        casting_player_nickname?: (string|null);
                    }

                    class MapAbilityActiveBuffSource implements IMapAbilityActiveBuffSource {
                        constructor(properties?: WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IMapAbilityActiveBuffSource);
                        public map_ability_gmt_id: string;
                        public map_ability_level: number;
                        public casting_player_nickname: string;
                        public static encode(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IMapAbilityActiveBuffSource, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.MapAbilityActiveBuffSource;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.MapAbilityActiveBuffSource;
                        public static toObject(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.MapAbilityActiveBuffSource, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IVaultItemActiveBuffSource {
                        vault_item_gmt_id?: (string|null);
                    }

                    class VaultItemActiveBuffSource implements IVaultItemActiveBuffSource {
                        constructor(properties?: WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IVaultItemActiveBuffSource);
                        public vault_item_gmt_id: string;
                        public static encode(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.IVaultItemActiveBuffSource, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.VaultItemActiveBuffSource;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.VaultItemActiveBuffSource;
                        public static toObject(message: WUProtos.Data.Buff.ActiveBuff.ActiveBuffSource.VaultItemActiveBuffSource, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            interface IActiveBuffList {
                buffs?: (WUProtos.Data.Buff.IActiveBuff[]|null);
            }

            class ActiveBuffList implements IActiveBuffList {
                constructor(properties?: WUProtos.Data.Buff.IActiveBuffList);
                public buffs: WUProtos.Data.Buff.IActiveBuff[];
                public static encode(message: WUProtos.Data.Buff.IActiveBuffList, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Buff.ActiveBuffList;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Buff.ActiveBuffList;
                public static toObject(message: WUProtos.Data.Buff.ActiveBuffList, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        namespace Challenge {

            interface IChallengeBonus {
                id?: (string|null);
                receiver?: (WUProtos.Data.Challenge.ChallengeBonus.BonusReceiver|null);
                target_reward?: (WUProtos.Data.Challenge.ChallengeBonus.BonusTargetReward|null);
                modifier?: (number|null);
                modifier_percentage?: (number|null);
                player_count?: (WUProtos.Data.Challenge.ChallengeBonus.IPlayerCountChallengeBonus|null);
                fast_completion?: (WUProtos.Data.Challenge.ChallengeBonus.IFastCompletionChallengeBonus|null);
                rune_level?: (WUProtos.Data.Challenge.ChallengeBonus.IRuneLevelChallengeBonus|null);
                defeated_mob_count?: (WUProtos.Data.Challenge.ChallengeBonus.IDefeatedMobCountChallengeBonus|null);
                player_ratio?: (WUProtos.Data.Challenge.ChallengeBonus.IPlayerRatioChallengeBonus|null);
                playing_with_friends?: (WUProtos.Data.Challenge.ChallengeBonus.IPlayingWithFriendsBonus|null);
            }

            class ChallengeBonus implements IChallengeBonus {
                constructor(properties?: WUProtos.Data.Challenge.IChallengeBonus);
                public id: string;
                public receiver: WUProtos.Data.Challenge.ChallengeBonus.BonusReceiver;
                public target_reward: WUProtos.Data.Challenge.ChallengeBonus.BonusTargetReward;
                public modifier: number;
                public modifier_percentage: number;
                public player_count?: (WUProtos.Data.Challenge.ChallengeBonus.IPlayerCountChallengeBonus|null);
                public fast_completion?: (WUProtos.Data.Challenge.ChallengeBonus.IFastCompletionChallengeBonus|null);
                public rune_level?: (WUProtos.Data.Challenge.ChallengeBonus.IRuneLevelChallengeBonus|null);
                public defeated_mob_count?: (WUProtos.Data.Challenge.ChallengeBonus.IDefeatedMobCountChallengeBonus|null);
                public player_ratio?: (WUProtos.Data.Challenge.ChallengeBonus.IPlayerRatioChallengeBonus|null);
                public playing_with_friends?: (WUProtos.Data.Challenge.ChallengeBonus.IPlayingWithFriendsBonus|null);
                public BonusKind?: ("player_count"|"fast_completion"|"rune_level"|"defeated_mob_count"|"player_ratio"|"playing_with_friends");
                public static encode(message: WUProtos.Data.Challenge.IChallengeBonus, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Challenge.ChallengeBonus;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Challenge.ChallengeBonus;
                public static toObject(message: WUProtos.Data.Challenge.ChallengeBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ChallengeBonus {

                interface IFastCompletionChallengeBonus {
                    completion_time_sec?: (number|null);
                }

                class FastCompletionChallengeBonus implements IFastCompletionChallengeBonus {
                    constructor(properties?: WUProtos.Data.Challenge.ChallengeBonus.IFastCompletionChallengeBonus);
                    public completion_time_sec: number;
                    public static encode(message: WUProtos.Data.Challenge.ChallengeBonus.IFastCompletionChallengeBonus, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Challenge.ChallengeBonus.FastCompletionChallengeBonus;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Challenge.ChallengeBonus.FastCompletionChallengeBonus;
                    public static toObject(message: WUProtos.Data.Challenge.ChallengeBonus.FastCompletionChallengeBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayingWithFriendsBonus {
                    number_of_friends?: (number|null);
                }

                class PlayingWithFriendsBonus implements IPlayingWithFriendsBonus {
                    constructor(properties?: WUProtos.Data.Challenge.ChallengeBonus.IPlayingWithFriendsBonus);
                    public number_of_friends: number;
                    public static encode(message: WUProtos.Data.Challenge.ChallengeBonus.IPlayingWithFriendsBonus, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Challenge.ChallengeBonus.PlayingWithFriendsBonus;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Challenge.ChallengeBonus.PlayingWithFriendsBonus;
                    public static toObject(message: WUProtos.Data.Challenge.ChallengeBonus.PlayingWithFriendsBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                enum BonusReceiver {
                    BONUS_RECEIVER_UNKNOWN = 0,
                    TEAM = 1,
                    PLAYER = 2
                }

                enum BonusTargetReward {
                    BONUS_TARGET_REWARD_UNKNOWN = 0,
                    CHALLENGE_COLLECTIBLE_SHARDS = 1,
                    CHALLENGE_FAMILY_XP = 2,
                    PROFESSION_SPELLBOOKS = 3,
                    TRACE_FAMILY_COLLECTIBLE_SHARDS = 4,
                    ADVERSARY_COLLECTIBLE_SHARDS = 5
                }

                interface IPlayerCountChallengeBonus {
                    number_of_players?: (number|null);
                }

                class PlayerCountChallengeBonus implements IPlayerCountChallengeBonus {
                    constructor(properties?: WUProtos.Data.Challenge.ChallengeBonus.IPlayerCountChallengeBonus);
                    public number_of_players: number;
                    public static encode(message: WUProtos.Data.Challenge.ChallengeBonus.IPlayerCountChallengeBonus, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Challenge.ChallengeBonus.PlayerCountChallengeBonus;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Challenge.ChallengeBonus.PlayerCountChallengeBonus;
                    public static toObject(message: WUProtos.Data.Challenge.ChallengeBonus.PlayerCountChallengeBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayerRatioChallengeBonus {
                    threshold?: (number|null);
                }

                class PlayerRatioChallengeBonus implements IPlayerRatioChallengeBonus {
                    constructor(properties?: WUProtos.Data.Challenge.ChallengeBonus.IPlayerRatioChallengeBonus);
                    public threshold: number;
                    public static encode(message: WUProtos.Data.Challenge.ChallengeBonus.IPlayerRatioChallengeBonus, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Challenge.ChallengeBonus.PlayerRatioChallengeBonus;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Challenge.ChallengeBonus.PlayerRatioChallengeBonus;
                    public static toObject(message: WUProtos.Data.Challenge.ChallengeBonus.PlayerRatioChallengeBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDefeatedMobCountChallengeBonus {
                    threshold?: (number|null);
                }

                class DefeatedMobCountChallengeBonus implements IDefeatedMobCountChallengeBonus {
                    constructor(properties?: WUProtos.Data.Challenge.ChallengeBonus.IDefeatedMobCountChallengeBonus);
                    public threshold: number;
                    public static encode(message: WUProtos.Data.Challenge.ChallengeBonus.IDefeatedMobCountChallengeBonus, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Challenge.ChallengeBonus.DefeatedMobCountChallengeBonus;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Challenge.ChallengeBonus.DefeatedMobCountChallengeBonus;
                    public static toObject(message: WUProtos.Data.Challenge.ChallengeBonus.DefeatedMobCountChallengeBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IRuneLevelChallengeBonus {
                    rune_lvl?: (number|null);
                }

                class RuneLevelChallengeBonus implements IRuneLevelChallengeBonus {
                    constructor(properties?: WUProtos.Data.Challenge.ChallengeBonus.IRuneLevelChallengeBonus);
                    public rune_lvl: number;
                    public static encode(message: WUProtos.Data.Challenge.ChallengeBonus.IRuneLevelChallengeBonus, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Challenge.ChallengeBonus.RuneLevelChallengeBonus;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Challenge.ChallengeBonus.RuneLevelChallengeBonus;
                    public static toObject(message: WUProtos.Data.Challenge.ChallengeBonus.RuneLevelChallengeBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IChallengeLootTable {
                id?: (string|null);
            }

            class ChallengeLootTable implements IChallengeLootTable {
                constructor(properties?: WUProtos.Data.Challenge.IChallengeLootTable);
                public id: string;
                public static encode(message: WUProtos.Data.Challenge.IChallengeLootTable, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Challenge.ChallengeLootTable;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Challenge.ChallengeLootTable;
                public static toObject(message: WUProtos.Data.Challenge.ChallengeLootTable, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface IChamberState {
            chamber_template_gmt_id?: (string|null);
            player?: (WUProtos.Data.ChamberState.IChamberPlayerState[]|null);
            waiting_to_start?: (WUProtos.Data.ChamberState.IWaitingToStartState|null);
            in_progress?: (WUProtos.Data.ChamberState.IInProgressState|null);
            finished?: (WUProtos.Data.ChamberState.IFinishedState|null);
            timestamp?: (number|Long|null);
        }

        class ChamberState implements IChamberState {
            constructor(properties?: WUProtos.Data.IChamberState);
            public chamber_template_gmt_id: string;
            public player: WUProtos.Data.ChamberState.IChamberPlayerState[];
            public waiting_to_start?: (WUProtos.Data.ChamberState.IWaitingToStartState|null);
            public in_progress?: (WUProtos.Data.ChamberState.IInProgressState|null);
            public finished?: (WUProtos.Data.ChamberState.IFinishedState|null);
            public timestamp: (number|Long);
            public State?: ("waiting_to_start"|"in_progress"|"finished");
            public static encode(message: WUProtos.Data.IChamberState, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState;
            public static toObject(message: WUProtos.Data.ChamberState, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace ChamberState {

            interface IFinishedState {
                finish_status?: (WUProtos.Data.ChamberState.ChallengeFinishStatus|null);
                rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                cooldown_data?: (WUProtos.Data.IFortressCooldownData|null);
            }

            class FinishedState implements IFinishedState {
                constructor(properties?: WUProtos.Data.ChamberState.IFinishedState);
                public finish_status: WUProtos.Data.ChamberState.ChallengeFinishStatus;
                public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public cooldown_data?: (WUProtos.Data.IFortressCooldownData|null);
                public static encode(message: WUProtos.Data.ChamberState.IFinishedState, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.FinishedState;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.FinishedState;
                public static toObject(message: WUProtos.Data.ChamberState.FinishedState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IInProgressState {
                end_time_ms?: (number|Long|null);
                mobs?: (WUProtos.Data.ChamberState.IChamberMobState[]|null);
                used_map_ability?: (WUProtos.Data.ChamberState.IUsedMapAbility[]|null);
                total_mob_count?: (number|null);
            }

            class InProgressState implements IInProgressState {
                constructor(properties?: WUProtos.Data.ChamberState.IInProgressState);
                public end_time_ms: (number|Long);
                public mobs: WUProtos.Data.ChamberState.IChamberMobState[];
                public used_map_ability: WUProtos.Data.ChamberState.IUsedMapAbility[];
                public total_mob_count: number;
                public static encode(message: WUProtos.Data.ChamberState.IInProgressState, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.InProgressState;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.InProgressState;
                public static toObject(message: WUProtos.Data.ChamberState.InProgressState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IUsedMapAbility {
                map_ability_gmt_id?: (string|null);
                caster_id?: (string|null);
                map_coordinate?: (WUProtos.Map.IMapCoordinate|null);
                map_ability_level?: (number|null);
                target_mob_id?: (Uint8Array|null);
                target_player_nickname?: (string|null);
            }

            class UsedMapAbility implements IUsedMapAbility {
                constructor(properties?: WUProtos.Data.ChamberState.IUsedMapAbility);
                public map_ability_gmt_id: string;
                public caster_id: string;
                public map_coordinate?: (WUProtos.Map.IMapCoordinate|null);
                public map_ability_level: number;
                public target_mob_id: Uint8Array;
                public target_player_nickname: string;
                public static encode(message: WUProtos.Data.ChamberState.IUsedMapAbility, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.UsedMapAbility;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.UsedMapAbility;
                public static toObject(message: WUProtos.Data.ChamberState.UsedMapAbility, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IWaitingToStartState {
                start_time_ms?: (number|Long|null);
            }

            class WaitingToStartState implements IWaitingToStartState {
                constructor(properties?: WUProtos.Data.ChamberState.IWaitingToStartState);
                public start_time_ms: (number|Long);
                public static encode(message: WUProtos.Data.ChamberState.IWaitingToStartState, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.WaitingToStartState;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.WaitingToStartState;
                public static toObject(message: WUProtos.Data.ChamberState.WaitingToStartState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            enum ChallengeFinishStatus {
                CHALLENGE_FINISH_STATUS_UNKNOWN = 0,
                CHALLENGE_FINISH_STATUS_PLAYER_WON = 1,
                CHALLENGE_FINISH_STATUS_PLAYER_LOSE = 2
            }

            interface IChamberMobState {
                mob_id?: (Uint8Array|null);
                encounter_gmt_id?: (string|null);
                hp?: (number|Long|null);
                max_hp?: (number|Long|null);
                level?: (number|null);
                encounter_ticket?: (Uint8Array|null);
                x?: (number|null);
                y?: (number|null);
                active_buff_list?: (WUProtos.Data.Buff.IActiveBuffList|null);
                rewards?: (WUProtos.Data.Mob.IMobReward[]|null);
                time_to_spawn?: (number|Long|null);
            }

            class ChamberMobState implements IChamberMobState {
                constructor(properties?: WUProtos.Data.ChamberState.IChamberMobState);
                public mob_id: Uint8Array;
                public encounter_gmt_id: string;
                public hp: (number|Long);
                public max_hp: (number|Long);
                public level: number;
                public encounter_ticket: Uint8Array;
                public x: number;
                public y: number;
                public active_buff_list?: (WUProtos.Data.Buff.IActiveBuffList|null);
                public rewards: WUProtos.Data.Mob.IMobReward[];
                public time_to_spawn: (number|Long);
                public static encode(message: WUProtos.Data.ChamberState.IChamberMobState, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberMobState;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberMobState;
                public static toObject(message: WUProtos.Data.ChamberState.ChamberMobState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IChamberPlayerState {
                nickname?: (string|null);
                runestone_contributions?: ({ [k: string]: (number|Long) }|null);
                waiting?: (WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerWaitingState|null);
                in_progress?: (WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerInProgressState|null);
                finished?: (WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerFinishedState|null);
                profession_info?: (WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerProfessionInfo|null);
                active_buff_list?: (WUProtos.Data.Buff.IActiveBuffList|null);
            }

            class ChamberPlayerState implements IChamberPlayerState {
                constructor(properties?: WUProtos.Data.ChamberState.IChamberPlayerState);
                public nickname: string;
                public runestone_contributions: { [k: string]: (number|Long) };
                public waiting?: (WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerWaitingState|null);
                public in_progress?: (WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerInProgressState|null);
                public finished?: (WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerFinishedState|null);
                public profession_info?: (WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerProfessionInfo|null);
                public active_buff_list?: (WUProtos.Data.Buff.IActiveBuffList|null);
                public State?: ("waiting"|"in_progress"|"finished");
                public static encode(message: WUProtos.Data.ChamberState.IChamberPlayerState, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberPlayerState;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberPlayerState;
                public static toObject(message: WUProtos.Data.ChamberState.ChamberPlayerState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ChamberPlayerState {

                interface IHealthy {
                    hp?: (number|Long|null);
                    engaged_mob_id?: (Uint8Array|null);
                }

                class Healthy implements IHealthy {
                    constructor(properties?: WUProtos.Data.ChamberState.ChamberPlayerState.IHealthy);
                    public hp: (number|Long);
                    public engaged_mob_id: Uint8Array;
                    public static encode(message: WUProtos.Data.ChamberState.ChamberPlayerState.IHealthy, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberPlayerState.Healthy;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberPlayerState.Healthy;
                    public static toObject(message: WUProtos.Data.ChamberState.ChamberPlayerState.Healthy, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IKnockedOut {
                    knockout_time_ms?: (number|Long|null);
                    recovery_time_ms?: (number|Long|null);
                }

                class KnockedOut implements IKnockedOut {
                    constructor(properties?: WUProtos.Data.ChamberState.ChamberPlayerState.IKnockedOut);
                    public knockout_time_ms: (number|Long);
                    public recovery_time_ms: (number|Long);
                    public static encode(message: WUProtos.Data.ChamberState.ChamberPlayerState.IKnockedOut, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberPlayerState.KnockedOut;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberPlayerState.KnockedOut;
                    public static toObject(message: WUProtos.Data.ChamberState.ChamberPlayerState.KnockedOut, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IMapAbility {
                    map_ability_gmt_id?: (string|null);
                    cooldown_ms?: (number|Long|null);
                    map_ability_level?: (number|null);
                }

                class MapAbility implements IMapAbility {
                    constructor(properties?: WUProtos.Data.ChamberState.ChamberPlayerState.IMapAbility);
                    public map_ability_gmt_id: string;
                    public cooldown_ms: (number|Long);
                    public map_ability_level: number;
                    public static encode(message: WUProtos.Data.ChamberState.ChamberPlayerState.IMapAbility, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberPlayerState.MapAbility;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberPlayerState.MapAbility;
                    public static toObject(message: WUProtos.Data.ChamberState.ChamberPlayerState.MapAbility, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayerFinishedState {
                    has_claimed_rewards?: (boolean|null);
                }

                class PlayerFinishedState implements IPlayerFinishedState {
                    constructor(properties?: WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerFinishedState);
                    public has_claimed_rewards: boolean;
                    public static encode(message: WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerFinishedState, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerFinishedState;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerFinishedState;
                    public static toObject(message: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerFinishedState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayerInProgressState {
                    latitude?: (number|null);
                    longitude?: (number|null);
                    max_hp?: (number|Long|null);
                    map_abilities?: (WUProtos.Data.ChamberState.ChamberPlayerState.IMapAbility[]|null);
                    healthy?: (WUProtos.Data.ChamberState.ChamberPlayerState.IHealthy|null);
                    knocked_out?: (WUProtos.Data.ChamberState.ChamberPlayerState.IKnockedOut|null);
                    focus?: (number|null);
                    max_focus?: (number|null);
                }

                class PlayerInProgressState implements IPlayerInProgressState {
                    constructor(properties?: WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerInProgressState);
                    public latitude: number;
                    public longitude: number;
                    public max_hp: (number|Long);
                    public map_abilities: WUProtos.Data.ChamberState.ChamberPlayerState.IMapAbility[];
                    public healthy?: (WUProtos.Data.ChamberState.ChamberPlayerState.IHealthy|null);
                    public knocked_out?: (WUProtos.Data.ChamberState.ChamberPlayerState.IKnockedOut|null);
                    public focus: number;
                    public max_focus: number;
                    public Status?: ("healthy"|"knocked_out");
                    public static encode(message: WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerInProgressState, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState;
                    public static toObject(message: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace PlayerInProgressState {

                    interface IHealthy {
                        hp?: (number|Long|null);
                        engaged_mob_id?: (Uint8Array|null);
                    }

                    class Healthy implements IHealthy {
                        constructor(properties?: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.IHealthy);
                        public hp: (number|Long);
                        public engaged_mob_id: Uint8Array;
                        public static encode(message: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.IHealthy, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.Healthy;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.Healthy;
                        public static toObject(message: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.Healthy, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IKnockedOut {
                        knockout_time_ms?: (number|Long|null);
                        recovery_time_ms?: (number|Long|null);
                    }

                    class KnockedOut implements IKnockedOut {
                        constructor(properties?: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.IKnockedOut);
                        public knockout_time_ms: (number|Long);
                        public recovery_time_ms: (number|Long);
                        public static encode(message: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.IKnockedOut, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.KnockedOut;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.KnockedOut;
                        public static toObject(message: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.KnockedOut, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IMapAbility {
                        map_ability_gmt_id?: (string|null);
                        radius?: (number|null);
                        cooldown_ms?: (number|Long|null);
                        map_ability_level?: (number|null);
                    }

                    class MapAbility implements IMapAbility {
                        constructor(properties?: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.IMapAbility);
                        public map_ability_gmt_id: string;
                        public radius: number;
                        public cooldown_ms: (number|Long);
                        public map_ability_level: number;
                        public static encode(message: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.IMapAbility, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.MapAbility;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.MapAbility;
                        public static toObject(message: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerInProgressState.MapAbility, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IPlayerProfessionInfo {
                    profession_gmt_id?: (string|null);
                }

                class PlayerProfessionInfo implements IPlayerProfessionInfo {
                    constructor(properties?: WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerProfessionInfo);
                    public profession_gmt_id: string;
                    public static encode(message: WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerProfessionInfo, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerProfessionInfo;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerProfessionInfo;
                    public static toObject(message: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerProfessionInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayerWaitingState {
                }

                class PlayerWaitingState implements IPlayerWaitingState {
                    constructor(properties?: WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerWaitingState);
                    public static encode(message: WUProtos.Data.ChamberState.ChamberPlayerState.IPlayerWaitingState, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerWaitingState;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.ChamberState.ChamberPlayerState.PlayerWaitingState;
                    public static toObject(message: WUProtos.Data.ChamberState.ChamberPlayerState.PlayerWaitingState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        namespace Client {

            interface IClientBadge {
                name?: (string|null);
                icon?: (string|null);
                disabled?: (boolean|null);
                show_badge?: (boolean|null);
                visibility_conditions?: (WUProtos.Data.IRequirements|null);
                unlock_conditions?: (WUProtos.Data.IRequirements|null);
            }

            class ClientBadge implements IClientBadge {
                constructor(properties?: WUProtos.Data.Client.IClientBadge);
                public name: string;
                public icon: string;
                public disabled: boolean;
                public show_badge: boolean;
                public visibility_conditions?: (WUProtos.Data.IRequirements|null);
                public unlock_conditions?: (WUProtos.Data.IRequirements|null);
                public static encode(message: WUProtos.Data.Client.IClientBadge, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientBadge;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientBadge;
                public static toObject(message: WUProtos.Data.Client.ClientBadge, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientCauldron {
                id?: (string|null);
            }

            class ClientCauldron implements IClientCauldron {
                constructor(properties?: WUProtos.Data.Client.IClientCauldron);
                public id: string;
                public static encode(message: WUProtos.Data.Client.IClientCauldron, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientCauldron;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientCauldron;
                public static toObject(message: WUProtos.Data.Client.ClientCauldron, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientDarkDetectorAmplifier {
                num_slots?: (number|null);
                active_dark_detectors?: ({ [k: string]: WUProtos.Data.Client.ClientDarkDetectorAmplifier.IClientDarkDetector }|null);
            }

            class ClientDarkDetectorAmplifier implements IClientDarkDetectorAmplifier {
                constructor(properties?: WUProtos.Data.Client.IClientDarkDetectorAmplifier);
                public num_slots: number;
                public active_dark_detectors: { [k: string]: WUProtos.Data.Client.ClientDarkDetectorAmplifier.IClientDarkDetector };
                public static encode(message: WUProtos.Data.Client.IClientDarkDetectorAmplifier, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientDarkDetectorAmplifier;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientDarkDetectorAmplifier;
                public static toObject(message: WUProtos.Data.Client.ClientDarkDetectorAmplifier, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientDarkDetectorAmplifier {

                interface IClientDarkDetector {
                    dark_detector_gmt_id?: (string|null);
                    end_time_ms?: (number|Long|null);
                    deploying_player_id?: (string|null);
                    deploying_player_nickname?: (string|null);
                }

                class ClientDarkDetector implements IClientDarkDetector {
                    constructor(properties?: WUProtos.Data.Client.ClientDarkDetectorAmplifier.IClientDarkDetector);
                    public dark_detector_gmt_id: string;
                    public end_time_ms: (number|Long);
                    public deploying_player_id: string;
                    public deploying_player_nickname: string;
                    public static encode(message: WUProtos.Data.Client.ClientDarkDetectorAmplifier.IClientDarkDetector, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientDarkDetectorAmplifier.ClientDarkDetector;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientDarkDetectorAmplifier.ClientDarkDetector;
                    public static toObject(message: WUProtos.Data.Client.ClientDarkDetectorAmplifier.ClientDarkDetector, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IClientFtueVideoFromAsset {
                asset_name_format?: (string|null);
                fallback_asset_name_format?: (string|null);
            }

            class ClientFtueVideoFromAsset implements IClientFtueVideoFromAsset {
                constructor(properties?: WUProtos.Data.Client.IClientFtueVideoFromAsset);
                public asset_name_format: string;
                public fallback_asset_name_format: string;
                public static encode(message: WUProtos.Data.Client.IClientFtueVideoFromAsset, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientFtueVideoFromAsset;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientFtueVideoFromAsset;
                public static toObject(message: WUProtos.Data.Client.ClientFtueVideoFromAsset, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientFtueVideoFromUrl {
                url_format?: (string|null);
            }

            class ClientFtueVideoFromUrl implements IClientFtueVideoFromUrl {
                constructor(properties?: WUProtos.Data.Client.IClientFtueVideoFromUrl);
                public url_format: string;
                public static encode(message: WUProtos.Data.Client.IClientFtueVideoFromUrl, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientFtueVideoFromUrl;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientFtueVideoFromUrl;
                public static toObject(message: WUProtos.Data.Client.ClientFtueVideoFromUrl, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientGameDataWrapper {
                messages?: (WUProtos.Data.Client.IClientGmTemplate[]|null);
            }

            class ClientGameDataWrapper implements IClientGameDataWrapper {
                constructor(properties?: WUProtos.Data.Client.IClientGameDataWrapper);
                public messages: WUProtos.Data.Client.IClientGmTemplate[];
                public static encode(message: WUProtos.Data.Client.IClientGameDataWrapper, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGameDataWrapper;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGameDataWrapper;
                public static toObject(message: WUProtos.Data.Client.ClientGameDataWrapper, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientGmTemplate {
                collection_family?: (WUProtos.Data.Client.ClientGmTemplate.IClientCollectionFamily|null);
                collection_item?: (WUProtos.Data.Client.ClientGmTemplate.IClientCollectionItem|null);
                walkbox_template?: (WUProtos.Data.Client.ClientGmTemplate.IClientWalkboxTemplate|null);
                encounter?: (WUProtos.Data.Client.ClientGmTemplate.IClientEncounter|null);
                portkey?: (WUProtos.Data.Client.ClientGmTemplate.IClientPortkey|null);
                vault_item?: (WUProtos.Data.Client.ClientGmTemplate.IClientVaultItem|null);
                game_config?: (WUProtos.Data.Client.ClientGmTemplate.IClientGameConfig|null);
                store_pack?: (WUProtos.Data.Client.ClientGmTemplate.IClientStorePack|null);
                spell?: (WUProtos.Data.Client.ClientGmTemplate.IClientSpell|null);
                protego_pattern?: (WUProtos.Data.Client.ClientGmTemplate.IClientProtegoPattern|null);
                chamber_template?: (WUProtos.Data.Client.ClientGmTemplate.IClientChamberTemplate|null);
                collection_page?: (WUProtos.Data.Client.ClientGmTemplate.IClientCollectionPage|null);
                team_control?: (WUProtos.Data.Client.ClientGmTemplate.IClientTeamControl|null);
                store_config?: (WUProtos.Data.Client.ClientGmTemplate.IClientStoreConfig|null);
                store_subcategory?: (WUProtos.Data.Client.ClientGmTemplate.IClientStoreSubcategory|null);
                haptic?: (WUProtos.Data.Client.ClientGmTemplate.IClientHaptic|null);
                profession?: (WUProtos.Data.Client.ClientGmTemplate.IClientProfession|null);
                bonus_category?: (WUProtos.Data.Client.ClientGmTemplate.IClientBonusCategory|null);
                vault_category?: (WUProtos.Data.Client.ClientGmTemplate.IClientVaultCategory|null);
                profile_config?: (WUProtos.Data.Client.IClientProfileConfig|null);
                map_ingredient?: (WUProtos.Data.Client.ClientGmTemplate.IClientMapIngredient|null);
                map_ability?: (WUProtos.Data.Client.ClientGmTemplate.IClientMapAbility|null);
                storyboard?: (WUProtos.Data.Client.ClientGmTemplate.IClientStoryboard|null);
                rpgstat?: (WUProtos.Data.Client.ClientGmTemplate.IClientRpgstat|null);
                rpgstats_block?: (WUProtos.Data.Client.ClientGmTemplate.IClientRpgstatsBlock|null);
                selfie_avatar_asset?: (WUProtos.Data.Client.ClientGmTemplate.IClientSelfieAvatarAsset|null);
                buff?: (WUProtos.Data.Client.ClientGmTemplate.IClientBuff|null);
                outpost_template?: (WUProtos.Data.Client.ClientGmTemplate.IClientOutpostTemplate|null);
                challenge_bonus?: (WUProtos.Data.Client.ClientGmTemplate.IClientChallengeBonus|null);
                recipe?: (WUProtos.Data.Client.ClientGmTemplate.IClientRecipe|null);
                master_note?: (WUProtos.Data.Client.ClientGmTemplate.IClientMasterNote|null);
                quest?: (WUProtos.Data.Client.ClientGmTemplate.IClientQuest|null);
                daily_reward_monthly_schedule?: (WUProtos.Data.Client.ClientGmTemplate.IClientDailyRewardMonthlySchedule|null);
                encounter_type?: (WUProtos.Data.Client.ClientGmTemplate.IClientEncounterType|null);
                event?: (WUProtos.Data.Client.ClientGmTemplate.IClientEvent|null);
            }

            class ClientGmTemplate implements IClientGmTemplate {
                constructor(properties?: WUProtos.Data.Client.IClientGmTemplate);
                public collection_family?: (WUProtos.Data.Client.ClientGmTemplate.IClientCollectionFamily|null);
                public collection_item?: (WUProtos.Data.Client.ClientGmTemplate.IClientCollectionItem|null);
                public walkbox_template?: (WUProtos.Data.Client.ClientGmTemplate.IClientWalkboxTemplate|null);
                public encounter?: (WUProtos.Data.Client.ClientGmTemplate.IClientEncounter|null);
                public portkey?: (WUProtos.Data.Client.ClientGmTemplate.IClientPortkey|null);
                public vault_item?: (WUProtos.Data.Client.ClientGmTemplate.IClientVaultItem|null);
                public game_config?: (WUProtos.Data.Client.ClientGmTemplate.IClientGameConfig|null);
                public store_pack?: (WUProtos.Data.Client.ClientGmTemplate.IClientStorePack|null);
                public spell?: (WUProtos.Data.Client.ClientGmTemplate.IClientSpell|null);
                public protego_pattern?: (WUProtos.Data.Client.ClientGmTemplate.IClientProtegoPattern|null);
                public chamber_template?: (WUProtos.Data.Client.ClientGmTemplate.IClientChamberTemplate|null);
                public collection_page?: (WUProtos.Data.Client.ClientGmTemplate.IClientCollectionPage|null);
                public team_control?: (WUProtos.Data.Client.ClientGmTemplate.IClientTeamControl|null);
                public store_config?: (WUProtos.Data.Client.ClientGmTemplate.IClientStoreConfig|null);
                public store_subcategory?: (WUProtos.Data.Client.ClientGmTemplate.IClientStoreSubcategory|null);
                public haptic?: (WUProtos.Data.Client.ClientGmTemplate.IClientHaptic|null);
                public profession?: (WUProtos.Data.Client.ClientGmTemplate.IClientProfession|null);
                public bonus_category?: (WUProtos.Data.Client.ClientGmTemplate.IClientBonusCategory|null);
                public vault_category?: (WUProtos.Data.Client.ClientGmTemplate.IClientVaultCategory|null);
                public profile_config?: (WUProtos.Data.Client.IClientProfileConfig|null);
                public map_ingredient?: (WUProtos.Data.Client.ClientGmTemplate.IClientMapIngredient|null);
                public map_ability?: (WUProtos.Data.Client.ClientGmTemplate.IClientMapAbility|null);
                public storyboard?: (WUProtos.Data.Client.ClientGmTemplate.IClientStoryboard|null);
                public rpgstat?: (WUProtos.Data.Client.ClientGmTemplate.IClientRpgstat|null);
                public rpgstats_block?: (WUProtos.Data.Client.ClientGmTemplate.IClientRpgstatsBlock|null);
                public selfie_avatar_asset?: (WUProtos.Data.Client.ClientGmTemplate.IClientSelfieAvatarAsset|null);
                public buff?: (WUProtos.Data.Client.ClientGmTemplate.IClientBuff|null);
                public outpost_template?: (WUProtos.Data.Client.ClientGmTemplate.IClientOutpostTemplate|null);
                public challenge_bonus?: (WUProtos.Data.Client.ClientGmTemplate.IClientChallengeBonus|null);
                public recipe?: (WUProtos.Data.Client.ClientGmTemplate.IClientRecipe|null);
                public master_note?: (WUProtos.Data.Client.ClientGmTemplate.IClientMasterNote|null);
                public quest?: (WUProtos.Data.Client.ClientGmTemplate.IClientQuest|null);
                public daily_reward_monthly_schedule?: (WUProtos.Data.Client.ClientGmTemplate.IClientDailyRewardMonthlySchedule|null);
                public encounter_type?: (WUProtos.Data.Client.ClientGmTemplate.IClientEncounterType|null);
                public event?: (WUProtos.Data.Client.ClientGmTemplate.IClientEvent|null);
                public MessageType?: ("collection_family"|"collection_item"|"walkbox_template"|"encounter"|"portkey"|"vault_item"|"game_config"|"store_pack"|"spell"|"protego_pattern"|"chamber_template"|"collection_page"|"team_control"|"store_config"|"store_subcategory"|"haptic"|"profession"|"bonus_category"|"vault_category"|"profile_config"|"map_ingredient"|"map_ability"|"storyboard"|"rpgstat"|"rpgstats_block"|"selfie_avatar_asset"|"buff"|"outpost_template"|"challenge_bonus"|"recipe"|"master_note"|"quest"|"daily_reward_monthly_schedule"|"encounter_type"|"event");
                public static encode(message: WUProtos.Data.Client.IClientGmTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate;
                public static toObject(message: WUProtos.Data.Client.ClientGmTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientGmTemplate {

                interface IClientGameConfig {
                    id?: (string|null);
                    target_glyph_color?: (WUProtos.Data.IColor|null);
                    reticle_glyph_color?: (WUProtos.Data.IColor|null);
                    aligned_glyph_color?: (WUProtos.Data.IColor|null);
                    encounter_angle_of_spawn?: (number|null);
                    time_before_ar_hint_display?: (number|null);
                    max_lock_distance_from_origin?: (number|null);
                    distance_behind_camera_to_spawn_marker?: (number|null);
                    time_before_switch_to_ar_simple?: (number|null);
                    tutorial_encounter_id?: (string|null);
                    encounter_reset_gforce?: (number|null);
                    local_map_update_interval_seconds?: (number|null);
                    floo_network_config?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientFlooNetworkConfig|null);
                    floo_contribution_button_values?: ((number|Long)[]|null);
                    app_background_map?: (number|null);
                    app_background_full?: (number|null);
                    triggerable_cooldown?: (number|null);
                    level_up_trigger_priority?: (number|null);
                    walkbox_trigger_priority?: (number|null);
                    permissions_config?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IPermissionsConfigStaticList|null);
                    swish_game_scoring_thresholds?: (number[]|null);
                    swish_game_scoring_bonuses?: (number[]|null);
                    audio_config?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IAudioConfig|null);
                    audio_initial_banks?: (string[]|null);
                    subfeature_prestige_levels?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ICollectionSubfeaturePrestigeLevels[]|null);
                    bonus_config?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientBonusConfig|null);
                    portkey_wrackspurt_collection_haptic_key?: (string|null);
                    parkmode_bgs?: ({ [k: string]: string }|null);
                    potion_masternote_unlock_treshold?: (number|null);
                    subfeature_family_orders?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ICollectionSubfeatureFamilyOrders[]|null);
                    battery_saver_profiles?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IBatterySaverProfile[]|null);
                    rate_app_min_player_level?: (number|null);
                    rate_app_cooldown_days?: (number|null);
                    too_fast_cooldown?: (number|null);
                    encounter_banks?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IEncounterSoundBanks[]|null);
                    daily_reward_popup_trigger_priority?: (number|null);
                    rate_app_trigger_priority?: (number|null);
                    ftue_video?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientFtueVideoConfig|null);
                    tutorial_potion_brew?: (string|null);
                    generic_trace_spell_fail_sfx?: (string|null);
                    tracing_spell_glyph_sfx?: (string|null);
                    tracing_complete_sfx?: (string|null);
                    spell_bar_increasing_sfx?: (string|null);
                    bad_spell_cast_sfx?: (string|null);
                    good_spell_cast_sfx?: (string|null);
                    great_spell_cast_sfx?: (string|null);
                    perfect_spell_cast_sfx?: (string|null);
                    registry_sticker_placed_haptic_key?: (string|null);
                    rewards_vessel_by_rarity?: (string[]|null);
                    rewards_sound_banks?: (string[]|null);
                    first_sticker_storyboard_id?: (string|null);
                    first_sticker_collection_id?: (string|null);
                    avatar_default_color?: (WUProtos.Data.IColor|null);
                    lock_on_completion_sfx?: (WUProtos.Data.ISoundConfig|null);
                    lock_on_time_up_sfx?: (WUProtos.Data.ISoundConfig|null);
                    protego_cast_sfx?: (WUProtos.Data.ISoundConfig|null);
                    protego_time_up_sfx?: (WUProtos.Data.ISoundConfig|null);
                    ms_before_final_intensity?: (number|null);
                    ms_before_secondary_intensity?: (number|null);
                    challenge_thirty_seconds_left_stinger?: (WUProtos.Data.IAudioParameter[]|null);
                    challenge_encounter_player_victorious_stinger?: (WUProtos.Data.IAudioParameter[]|null);
                    challenge_encounter_player_defeated_stinger?: (WUProtos.Data.IAudioParameter[]|null);
                    challenge_begin_stinger?: (WUProtos.Data.IAudioParameter[]|null);
                    challenge_finish_victory?: (WUProtos.Data.IAudioParameter[]|null);
                    challenge_finish_defeat?: (WUProtos.Data.IAudioParameter[]|null);
                    challenge_elite_mob_spawns_stinger?: (WUProtos.Data.IAudioParameter[]|null);
                    internet_reachability_check_url?: (string|null);
                    rate_app_max_prompts?: (number|null);
                    rate_app_version?: (number|null);
                    rate_app_trigger_wizarding_challenge?: (number|null);
                    rate_app_trigger_sticker_page_complete?: (number|null);
                    rate_app_trigger_event_quest_line_complete?: (number|null);
                    checks_until_gps_prompt?: (number|null);
                    fortress_sound_banks?: (string[]|null);
                    ten_seconds_left_in_challenge_sfx?: (WUProtos.Data.ISoundConfig|null);
                    long_second_left_in_challenge_sfx?: (WUProtos.Data.ISoundConfig|null);
                    short_half_second_left_in_challenge_sfx?: (WUProtos.Data.ISoundConfig|null);
                    one_minute_warning_sfx?: (WUProtos.Data.ISoundConfig|null);
                    rate_app_trigger_map_enter?: (boolean|null);
                    professions_affinity_advantage_icon?: (string|null);
                    professions_affinity_neutral_icon?: (string|null);
                    professions_affinity_disadvantage_icon?: (string|null);
                    internet_outage_backoff_time?: (number|null);
                    ar_core_storyboard_trigger?: (string|null);
                    voice_over_mappings?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IVoiceOverLanguageMapping[]|null);
                    in_app_message_trigger_priority?: (number|null);
                    internal_fortress_interact_range?: (number|null);
                    low_connectivity_threshold_bytes_per_ms?: (number|null);
                    game_size_in_kb?: (number|null);
                    wc_map_enemy_marker_buff_occupied_image?: (string|null);
                    wc_map_enemy_marker_buff_vacant_image?: (string|null);
                    wc_enemy_look_in_buff_border_image?: (string|null);
                    localization_mappings?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ILocalizationMapping[]|null);
                }

                class ClientGameConfig implements IClientGameConfig {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientGameConfig);
                    public id: string;
                    public target_glyph_color?: (WUProtos.Data.IColor|null);
                    public reticle_glyph_color?: (WUProtos.Data.IColor|null);
                    public aligned_glyph_color?: (WUProtos.Data.IColor|null);
                    public encounter_angle_of_spawn: number;
                    public time_before_ar_hint_display: number;
                    public max_lock_distance_from_origin: number;
                    public distance_behind_camera_to_spawn_marker: number;
                    public time_before_switch_to_ar_simple: number;
                    public tutorial_encounter_id: string;
                    public encounter_reset_gforce: number;
                    public local_map_update_interval_seconds: number;
                    public floo_network_config?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientFlooNetworkConfig|null);
                    public floo_contribution_button_values: (number|Long)[];
                    public app_background_map: number;
                    public app_background_full: number;
                    public triggerable_cooldown: number;
                    public level_up_trigger_priority: number;
                    public walkbox_trigger_priority: number;
                    public permissions_config?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IPermissionsConfigStaticList|null);
                    public swish_game_scoring_thresholds: number[];
                    public swish_game_scoring_bonuses: number[];
                    public audio_config?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IAudioConfig|null);
                    public audio_initial_banks: string[];
                    public subfeature_prestige_levels: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ICollectionSubfeaturePrestigeLevels[];
                    public bonus_config?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientBonusConfig|null);
                    public portkey_wrackspurt_collection_haptic_key: string;
                    public parkmode_bgs: { [k: string]: string };
                    public potion_masternote_unlock_treshold: number;
                    public subfeature_family_orders: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ICollectionSubfeatureFamilyOrders[];
                    public battery_saver_profiles: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IBatterySaverProfile[];
                    public rate_app_min_player_level: number;
                    public rate_app_cooldown_days: number;
                    public too_fast_cooldown: number;
                    public encounter_banks: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IEncounterSoundBanks[];
                    public daily_reward_popup_trigger_priority: number;
                    public rate_app_trigger_priority: number;
                    public ftue_video?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientFtueVideoConfig|null);
                    public tutorial_potion_brew: string;
                    public generic_trace_spell_fail_sfx: string;
                    public tracing_spell_glyph_sfx: string;
                    public tracing_complete_sfx: string;
                    public spell_bar_increasing_sfx: string;
                    public bad_spell_cast_sfx: string;
                    public good_spell_cast_sfx: string;
                    public great_spell_cast_sfx: string;
                    public perfect_spell_cast_sfx: string;
                    public registry_sticker_placed_haptic_key: string;
                    public rewards_vessel_by_rarity: string[];
                    public rewards_sound_banks: string[];
                    public first_sticker_storyboard_id: string;
                    public first_sticker_collection_id: string;
                    public avatar_default_color?: (WUProtos.Data.IColor|null);
                    public lock_on_completion_sfx?: (WUProtos.Data.ISoundConfig|null);
                    public lock_on_time_up_sfx?: (WUProtos.Data.ISoundConfig|null);
                    public protego_cast_sfx?: (WUProtos.Data.ISoundConfig|null);
                    public protego_time_up_sfx?: (WUProtos.Data.ISoundConfig|null);
                    public ms_before_final_intensity: number;
                    public ms_before_secondary_intensity: number;
                    public challenge_thirty_seconds_left_stinger: WUProtos.Data.IAudioParameter[];
                    public challenge_encounter_player_victorious_stinger: WUProtos.Data.IAudioParameter[];
                    public challenge_encounter_player_defeated_stinger: WUProtos.Data.IAudioParameter[];
                    public challenge_begin_stinger: WUProtos.Data.IAudioParameter[];
                    public challenge_finish_victory: WUProtos.Data.IAudioParameter[];
                    public challenge_finish_defeat: WUProtos.Data.IAudioParameter[];
                    public challenge_elite_mob_spawns_stinger: WUProtos.Data.IAudioParameter[];
                    public internet_reachability_check_url: string;
                    public rate_app_max_prompts: number;
                    public rate_app_version: number;
                    public rate_app_trigger_wizarding_challenge: number;
                    public rate_app_trigger_sticker_page_complete: number;
                    public rate_app_trigger_event_quest_line_complete: number;
                    public checks_until_gps_prompt: number;
                    public fortress_sound_banks: string[];
                    public ten_seconds_left_in_challenge_sfx?: (WUProtos.Data.ISoundConfig|null);
                    public long_second_left_in_challenge_sfx?: (WUProtos.Data.ISoundConfig|null);
                    public short_half_second_left_in_challenge_sfx?: (WUProtos.Data.ISoundConfig|null);
                    public one_minute_warning_sfx?: (WUProtos.Data.ISoundConfig|null);
                    public rate_app_trigger_map_enter: boolean;
                    public professions_affinity_advantage_icon: string;
                    public professions_affinity_neutral_icon: string;
                    public professions_affinity_disadvantage_icon: string;
                    public internet_outage_backoff_time: number;
                    public ar_core_storyboard_trigger: string;
                    public voice_over_mappings: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IVoiceOverLanguageMapping[];
                    public in_app_message_trigger_priority: number;
                    public internal_fortress_interact_range: number;
                    public low_connectivity_threshold_bytes_per_ms: number;
                    public game_size_in_kb: number;
                    public wc_map_enemy_marker_buff_occupied_image: string;
                    public wc_map_enemy_marker_buff_vacant_image: string;
                    public wc_enemy_look_in_buff_border_image: string;
                    public localization_mappings: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ILocalizationMapping[];
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientGameConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientGameConfig {

                    interface IClientFtueVideoConfig {
                        from_assets?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoFallbackDefinition|null);
                        from_url?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoNameDefinition|null);
                        quality_buckets?: (string[]|null);
                        quality_mappings?: ({ [k: string]: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoQualityMapping }|null);
                    }

                    class ClientFtueVideoConfig implements IClientFtueVideoConfig {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientFtueVideoConfig);
                        public from_assets?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoFallbackDefinition|null);
                        public from_url?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoNameDefinition|null);
                        public quality_buckets: string[];
                        public quality_mappings: { [k: string]: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoQualityMapping };
                        public VideoSource?: ("from_assets"|"from_url");
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientFtueVideoConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace ClientFtueVideoConfig {

                        interface IClientFtueVideoQualityMapping {
                            measure?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.ClientFtueVideoQualityMapping.Measure|null);
                            lower_bound?: (number|null);
                            upper_bound?: (number|null);
                        }

                        class ClientFtueVideoQualityMapping implements IClientFtueVideoQualityMapping {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoQualityMapping);
                            public measure: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.ClientFtueVideoQualityMapping.Measure;
                            public lower_bound: number;
                            public upper_bound: number;
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoQualityMapping, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.ClientFtueVideoQualityMapping;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.ClientFtueVideoQualityMapping;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.ClientFtueVideoQualityMapping, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        namespace ClientFtueVideoQualityMapping {

                            enum Measure {
                                camera_pixel_width = 0,
                                camera_pixel_height = 1,
                                screen_pixel_width = 2,
                                screen_pixel_height = 3
                            }
                        }

                        interface IClientFtueVideoFallbackDefinition {
                            name_definitions?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoNameDefinition[]|null);
                        }

                        class ClientFtueVideoFallbackDefinition implements IClientFtueVideoFallbackDefinition {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoFallbackDefinition);
                            public name_definitions: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoNameDefinition[];
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoFallbackDefinition, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.ClientFtueVideoFallbackDefinition;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.ClientFtueVideoFallbackDefinition;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.ClientFtueVideoFallbackDefinition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        interface IClientFtueVideoNameDefinition {
                            name_format?: (string|null);
                        }

                        class ClientFtueVideoNameDefinition implements IClientFtueVideoNameDefinition {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoNameDefinition);
                            public name_format: string;
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.IClientFtueVideoNameDefinition, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.ClientFtueVideoNameDefinition;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.ClientFtueVideoNameDefinition;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFtueVideoConfig.ClientFtueVideoNameDefinition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }
                    }

                    interface IClientFlooNetworkConfig {
                        electoral_votes_per_floo_points?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFlooNetworkConfig.IElectoralVotesPerFlooPoints[]|null);
                    }

                    class ClientFlooNetworkConfig implements IClientFlooNetworkConfig {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientFlooNetworkConfig);
                        public electoral_votes_per_floo_points: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFlooNetworkConfig.IElectoralVotesPerFlooPoints[];
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientFlooNetworkConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFlooNetworkConfig;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFlooNetworkConfig;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFlooNetworkConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace ClientFlooNetworkConfig {

                        interface IElectoralVotesPerFlooPoints {
                            fortress_prefabs?: (string[]|null);
                        }

                        class ElectoralVotesPerFlooPoints implements IElectoralVotesPerFlooPoints {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFlooNetworkConfig.IElectoralVotesPerFlooPoints);
                            public fortress_prefabs: string[];
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFlooNetworkConfig.IElectoralVotesPerFlooPoints, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFlooNetworkConfig.ElectoralVotesPerFlooPoints;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFlooNetworkConfig.ElectoralVotesPerFlooPoints;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientFlooNetworkConfig.ElectoralVotesPerFlooPoints, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }
                    }

                    interface IClientBonusConfig {
                        id?: (string|null);
                        accuracy_tier?: (number[]|null);
                        accuracy_tier_bonus_id?: (string[]|null);
                        accuracy_tier_bonus_text?: (string[]|null);
                        first_time_bonus_id?: (string|null);
                        first_time_bonus_text?: (string|null);
                        life_time_bonus_id?: (string|null);
                        life_time_bonus_text?: (string|null);
                    }

                    class ClientBonusConfig implements IClientBonusConfig {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientBonusConfig);
                        public id: string;
                        public accuracy_tier: number[];
                        public accuracy_tier_bonus_id: string[];
                        public accuracy_tier_bonus_text: string[];
                        public first_time_bonus_id: string;
                        public first_time_bonus_text: string;
                        public life_time_bonus_id: string;
                        public life_time_bonus_text: string;
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IClientBonusConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientBonusConfig;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientBonusConfig;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ClientBonusConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface ILocalizationMapping {
                        language_code?: (string|null);
                        loc_string?: (string|null);
                        is_enabled?: (boolean|null);
                    }

                    class LocalizationMapping implements ILocalizationMapping {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ILocalizationMapping);
                        public language_code: string;
                        public loc_string: string;
                        public is_enabled: boolean;
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ILocalizationMapping, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.LocalizationMapping;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.LocalizationMapping;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.LocalizationMapping, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IPermissionsConfigStaticList {
                        list?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.PermissionsConfigStaticList.IPermissionsConfigStaticData[]|null);
                    }

                    class PermissionsConfigStaticList implements IPermissionsConfigStaticList {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IPermissionsConfigStaticList);
                        public list: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.PermissionsConfigStaticList.IPermissionsConfigStaticData[];
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IPermissionsConfigStaticList, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.PermissionsConfigStaticList;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.PermissionsConfigStaticList;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.PermissionsConfigStaticList, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace PermissionsConfigStaticList {

                        interface IPermissionsConfigStaticData {
                            id?: (string|null);
                            initial_prompt?: (string|null);
                            denial_prompt?: (string|null);
                            optional?: (boolean|null);
                            title?: (string|null);
                            begging_enabled?: (boolean|null);
                        }

                        class PermissionsConfigStaticData implements IPermissionsConfigStaticData {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.PermissionsConfigStaticList.IPermissionsConfigStaticData);
                            public id: string;
                            public initial_prompt: string;
                            public denial_prompt: string;
                            public optional: boolean;
                            public title: string;
                            public begging_enabled: boolean;
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.PermissionsConfigStaticList.IPermissionsConfigStaticData, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.PermissionsConfigStaticList.PermissionsConfigStaticData;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.PermissionsConfigStaticList.PermissionsConfigStaticData;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.PermissionsConfigStaticList.PermissionsConfigStaticData, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }
                    }

                    interface IVoiceOverLanguageMapping {
                        language_code?: (string|null);
                        language_folder?: (string|null);
                    }

                    class VoiceOverLanguageMapping implements IVoiceOverLanguageMapping {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IVoiceOverLanguageMapping);
                        public language_code: string;
                        public language_folder: string;
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IVoiceOverLanguageMapping, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.VoiceOverLanguageMapping;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.VoiceOverLanguageMapping;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.VoiceOverLanguageMapping, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IAudioConfig {
                        music_event?: (string|null);
                        music_config?: (WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IMusicConfig[]|null);
                    }

                    class AudioConfig implements IAudioConfig {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IAudioConfig);
                        public music_event: string;
                        public music_config: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IMusicConfig[];
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IAudioConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.AudioConfig;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.AudioConfig;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.AudioConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IBatterySaverProfile {
                        profiles?: (string[]|null);
                        name?: (string|null);
                    }

                    class BatterySaverProfile implements IBatterySaverProfile {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IBatterySaverProfile);
                        public profiles: string[];
                        public name: string;
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IBatterySaverProfile, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.BatterySaverProfile;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.BatterySaverProfile;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.BatterySaverProfile, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface ICollectionSubfeatureFamilyOrders {
                        subfeature?: (WUProtos.Data.Collection.CollectionFamily.SubfeatureType|null);
                        family_ids?: (string[]|null);
                    }

                    class CollectionSubfeatureFamilyOrders implements ICollectionSubfeatureFamilyOrders {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ICollectionSubfeatureFamilyOrders);
                        public subfeature: WUProtos.Data.Collection.CollectionFamily.SubfeatureType;
                        public family_ids: string[];
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ICollectionSubfeatureFamilyOrders, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.CollectionSubfeatureFamilyOrders;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.CollectionSubfeatureFamilyOrders;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.CollectionSubfeatureFamilyOrders, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface ICollectionSubfeaturePrestigeLevels {
                        subfeature?: (WUProtos.Data.Collection.CollectionFamily.SubfeatureType|null);
                        prestige_levels?: (WUProtos.Data.Client.ClientGmTemplate.ICollectionPrestigeLevel[]|null);
                    }

                    class CollectionSubfeaturePrestigeLevels implements ICollectionSubfeaturePrestigeLevels {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ICollectionSubfeaturePrestigeLevels);
                        public subfeature: WUProtos.Data.Collection.CollectionFamily.SubfeatureType;
                        public prestige_levels: WUProtos.Data.Client.ClientGmTemplate.ICollectionPrestigeLevel[];
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.ICollectionSubfeaturePrestigeLevels, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.CollectionSubfeaturePrestigeLevels;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.CollectionSubfeaturePrestigeLevels;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.CollectionSubfeaturePrestigeLevels, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IEncounterSoundBanks {
                        encounter_type?: (string|null);
                        sound_banks?: (string[]|null);
                    }

                    class EncounterSoundBanks implements IEncounterSoundBanks {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IEncounterSoundBanks);
                        public encounter_type: string;
                        public sound_banks: string[];
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IEncounterSoundBanks, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.EncounterSoundBanks;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.EncounterSoundBanks;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.EncounterSoundBanks, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IMusicConfig {
                        music_location?: (number|null);
                        parameters?: (WUProtos.Data.IAudioParameter[]|null);
                    }

                    class MusicConfig implements IMusicConfig {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IMusicConfig);
                        public music_location: number;
                        public parameters: WUProtos.Data.IAudioParameter[];
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.IMusicConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.MusicConfig;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.MusicConfig;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientGameConfig.MusicConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IClientCollectionFamily {
                    id?: (string|null);
                    name?: (string|null);
                    description?: (string|null);
                    icon?: (string|null);
                    landmark_texture?: (string|null);
                    landmark_prefab?: (string|null);
                    landmark_description?: (string|null);
                    show_in_ui?: (boolean|null);
                    landmark_icon?: (string|null);
                    color?: (WUProtos.Data.IColor|null);
                    color_highlight?: (WUProtos.Data.IColor|null);
                    trace_prefab?: (string|null);
                    border_images?: (string[]|null);
                    family_runestone_icon?: (string|null);
                    sound?: (WUProtos.Data.ISoundConfig|null);
                    unarchive_requirements?: (WUProtos.Data.IRequirements|null);
                    trace_rarity_vfx_override?: (string|null);
                    prestige_override?: (WUProtos.Data.Client.ClientGmTemplate.ICollectionPrestigeLevel[]|null);
                    hide_landmark_info_details?: (boolean|null);
                }

                class ClientCollectionFamily implements IClientCollectionFamily {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientCollectionFamily);
                    public id: string;
                    public name: string;
                    public description: string;
                    public icon: string;
                    public landmark_texture: string;
                    public landmark_prefab: string;
                    public landmark_description: string;
                    public show_in_ui: boolean;
                    public landmark_icon: string;
                    public color?: (WUProtos.Data.IColor|null);
                    public color_highlight?: (WUProtos.Data.IColor|null);
                    public trace_prefab: string;
                    public border_images: string[];
                    public family_runestone_icon: string;
                    public sound?: (WUProtos.Data.ISoundConfig|null);
                    public unarchive_requirements?: (WUProtos.Data.IRequirements|null);
                    public trace_rarity_vfx_override: string;
                    public prestige_override: WUProtos.Data.Client.ClientGmTemplate.ICollectionPrestigeLevel[];
                    public hide_landmark_info_details: boolean;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientCollectionFamily, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientCollectionFamily;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientCollectionFamily;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientCollectionFamily, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICollectionPrestigeLevel {
                    border_image?: (string|null);
                    name?: (string|null);
                    color?: (WUProtos.Data.IColor|null);
                    is_metallic?: (boolean|null);
                    frame_mesh?: (string|null);
                    normal_map?: (string|null);
                    albedo_map?: (string|null);
                    roughness?: (number|null);
                }

                class CollectionPrestigeLevel implements ICollectionPrestigeLevel {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ICollectionPrestigeLevel);
                    public border_image: string;
                    public name: string;
                    public color?: (WUProtos.Data.IColor|null);
                    public is_metallic: boolean;
                    public frame_mesh: string;
                    public normal_map: string;
                    public albedo_map: string;
                    public roughness: number;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ICollectionPrestigeLevel, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.CollectionPrestigeLevel;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.CollectionPrestigeLevel;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.CollectionPrestigeLevel, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientVaultItem {
                    id?: (string|null);
                    name?: (string|null);
                    icon?: (string|null);
                    prefab?: (string|null);
                    rarity?: (number|Long|null);
                    description?: (string|null);
                    show_in_vault_item_menu?: (boolean|null);
                    deletable?: (boolean|null);
                    show_in_rewards_flow?: (boolean|null);
                    color?: (WUProtos.Data.IColor|null);
                    background?: (string|null);
                    ordering?: (number|null);
                    reward_sound?: (WUProtos.Data.ISoundConfig|null);
                    reward_sound_priority?: (number|null);
                    spine_animated_icon?: (string|null);
                }

                class ClientVaultItem implements IClientVaultItem {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientVaultItem);
                    public id: string;
                    public name: string;
                    public icon: string;
                    public prefab: string;
                    public rarity: (number|Long);
                    public description: string;
                    public show_in_vault_item_menu: boolean;
                    public deletable: boolean;
                    public show_in_rewards_flow: boolean;
                    public color?: (WUProtos.Data.IColor|null);
                    public background: string;
                    public ordering: number;
                    public reward_sound?: (WUProtos.Data.ISoundConfig|null);
                    public reward_sound_priority: number;
                    public spine_animated_icon: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientVaultItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientVaultItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientVaultItem;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientVaultItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientStoreConfig {
                    id?: (string|null);
                    store_categories?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.IStoreCategory[]|null);
                    store_rarities?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.IStoreRarity[]|null);
                    default_store_pack_icon_path?: (string|null);
                }

                class ClientStoreConfig implements IClientStoreConfig {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientStoreConfig);
                    public id: string;
                    public store_categories: WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.IStoreCategory[];
                    public store_rarities: WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.IStoreRarity[];
                    public default_store_pack_icon_path: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientStoreConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientStoreConfig {

                    interface IStoreRarity {
                        id?: (string|null);
                        text_color?: (WUProtos.Data.IColor|null);
                        title?: (string|null);
                    }

                    class StoreRarity implements IStoreRarity {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.IStoreRarity);
                        public id: string;
                        public text_color?: (WUProtos.Data.IColor|null);
                        public title: string;
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.IStoreRarity, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.StoreRarity;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.StoreRarity;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.StoreRarity, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IStoreCategory {
                        icon_path?: (string|null);
                        title?: (string|null);
                        header?: (string|null);
                        header_color?: (WUProtos.Data.IColor|null);
                        background?: (string|null);
                        background_color?: (WUProtos.Data.IColor|null);
                        store_subcategories?: (string[]|null);
                        header_prefab?: (string|null);
                        item_color?: (WUProtos.Data.IColor|null);
                        enabled?: (boolean|null);
                    }

                    class StoreCategory implements IStoreCategory {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.IStoreCategory);
                        public icon_path: string;
                        public title: string;
                        public header: string;
                        public header_color?: (WUProtos.Data.IColor|null);
                        public background: string;
                        public background_color?: (WUProtos.Data.IColor|null);
                        public store_subcategories: string[];
                        public header_prefab: string;
                        public item_color?: (WUProtos.Data.IColor|null);
                        public enabled: boolean;
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.IStoreCategory, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.StoreCategory;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.StoreCategory;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoreConfig.StoreCategory, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IClientSpell {
                    id?: (string|null);
                    name?: (string|null);
                    charge_up_effect?: (string[]|null);
                    timelines?: ({ [k: string]: string }|null);
                    critical_hits?: ({ [k: string]: string }|null);
                    pattern?: (string|null);
                    glyph_image?: (string|null);
                    protego_player_succeed_tl?: (string|null);
                    protego_player_failed_tl?: (string|null);
                    protego_player_succeed_intro_tl?: (string|null);
                    end_burst_effect?: (string|null);
                    rng_vfx_tl?: (string|null);
                    spell_rng_loop_tl?: (string|null);
                    spell_rng_succeed_tl?: (string|null);
                    spell_rng_fail_tl?: (string|null);
                }

                class ClientSpell implements IClientSpell {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientSpell);
                    public id: string;
                    public name: string;
                    public charge_up_effect: string[];
                    public timelines: { [k: string]: string };
                    public critical_hits: { [k: string]: string };
                    public pattern: string;
                    public glyph_image: string;
                    public protego_player_succeed_tl: string;
                    public protego_player_failed_tl: string;
                    public protego_player_succeed_intro_tl: string;
                    public end_burst_effect: string;
                    public rng_vfx_tl: string;
                    public spell_rng_loop_tl: string;
                    public spell_rng_succeed_tl: string;
                    public spell_rng_fail_tl: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientSpell, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientSpell;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientSpell;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientSpell, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientTeamControl {
                    id?: (string|null);
                    team_name?: (string|null);
                    team_icon?: (string|null);
                    team_color?: (WUProtos.Data.IColor|null);
                    team_header_icon?: (string|null);
                    team_banner?: (string|null);
                    team_flag?: (string|null);
                }

                class ClientTeamControl implements IClientTeamControl {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientTeamControl);
                    public id: string;
                    public team_name: string;
                    public team_icon: string;
                    public team_color?: (WUProtos.Data.IColor|null);
                    public team_header_icon: string;
                    public team_banner: string;
                    public team_flag: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientTeamControl, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientTeamControl;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientTeamControl;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientTeamControl, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientSelfieAvatarAsset {
                    id?: (string|null);
                    unlock_conditions?: (WUProtos.Data.IRequirements[]|null);
                    asset_script_name?: (string|null);
                    icon?: (string|null);
                    asset_type?: (WUProtos.Data.Client.ClientGmTemplate.ClientSelfieAvatarAsset.SelfieAvatarAssetType|null);
                    lens_type?: (WUProtos.Data.Client.ClientGmTemplate.ClientSelfieAvatarAsset.SelfieAvatarLensType|null);
                    visible?: (boolean|null);
                    media_supported_type?: (WUProtos.Data.Client.ClientGmTemplate.ClientSelfieAvatarAsset.SelfieAvatarMediaSupportedType|null);
                    animated?: (boolean|null);
                    store_pack_id?: (string|null);
                    order_id?: (number|null);
                    is_full_body_lens?: (boolean|null);
                    is_empty_asset?: (boolean|null);
                    show_badge?: (boolean|null);
                    visibility_conditions?: (WUProtos.Data.IRequirements|null);
                    stock_asset_name?: (string|null);
                }

                class ClientSelfieAvatarAsset implements IClientSelfieAvatarAsset {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientSelfieAvatarAsset);
                    public id: string;
                    public unlock_conditions: WUProtos.Data.IRequirements[];
                    public asset_script_name: string;
                    public icon: string;
                    public asset_type: WUProtos.Data.Client.ClientGmTemplate.ClientSelfieAvatarAsset.SelfieAvatarAssetType;
                    public lens_type: WUProtos.Data.Client.ClientGmTemplate.ClientSelfieAvatarAsset.SelfieAvatarLensType;
                    public visible: boolean;
                    public media_supported_type: WUProtos.Data.Client.ClientGmTemplate.ClientSelfieAvatarAsset.SelfieAvatarMediaSupportedType;
                    public animated: boolean;
                    public store_pack_id: string;
                    public order_id: number;
                    public is_full_body_lens: boolean;
                    public is_empty_asset: boolean;
                    public show_badge: boolean;
                    public visibility_conditions?: (WUProtos.Data.IRequirements|null);
                    public stock_asset_name: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientSelfieAvatarAsset, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientSelfieAvatarAsset;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientSelfieAvatarAsset;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientSelfieAvatarAsset, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientSelfieAvatarAsset {

                    enum SelfieAvatarAssetType {
                        UNKNOWN_ASSET_TYPE = 0,
                        LENSE = 1,
                        FILTER = 2,
                        FRAME = 3,
                        STICKER = 4,
                        STOCK = 5
                    }

                    enum SelfieAvatarLensType {
                        UNKNOWN_LENS_TYPE = 0,
                        HEAD = 1,
                        FACE = 2,
                        NECK = 3
                    }

                    enum SelfieAvatarMediaSupportedType {
                        UNKNOWN_MEDIA_TYPE = 0,
                        ALL = 1,
                        VIDEO = 2,
                        PHOTO = 3
                    }
                }

                interface IClientRpgstatsBlock {
                    id?: (string|null);
                    relevant_stats?: (string[]|null);
                }

                class ClientRpgstatsBlock implements IClientRpgstatsBlock {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientRpgstatsBlock);
                    public id: string;
                    public relevant_stats: string[];
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientRpgstatsBlock, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientRpgstatsBlock;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientRpgstatsBlock;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientRpgstatsBlock, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientStorePack {
                    id?: (string|null);
                    show_in_inline_buy?: (boolean|null);
                    name?: (string|null);
                    store_pack_config?: (WUProtos.Data.Client.ClientGmTemplate.ClientStorePack.IStorePackConfig[]|null);
                    sku_id?: (string|null);
                    override_title_loc_key?: (string|null);
                    max_reward_item_count?: (number|null);
                }

                class ClientStorePack implements IClientStorePack {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientStorePack);
                    public id: string;
                    public show_in_inline_buy: boolean;
                    public name: string;
                    public store_pack_config: WUProtos.Data.Client.ClientGmTemplate.ClientStorePack.IStorePackConfig[];
                    public sku_id: string;
                    public override_title_loc_key: string;
                    public max_reward_item_count: number;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientStorePack, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStorePack;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStorePack;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStorePack, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientStorePack {

                    interface IStorePackConfig {
                        priority?: (number|null);
                        subcategory_id?: (string|null);
                        icon_path?: (string|null);
                        show_quantity_banner?: (boolean|null);
                        quantity_override?: (string|null);
                        prefab_path?: (string|null);
                        marketing_text?: (string|null);
                        description_text?: (string|null);
                        show_badge?: (boolean|null);
                        bonus_value?: (number|null);
                        rarity_id?: (string|null);
                        pack_size?: (WUProtos.Data.Client.ClientGmTemplate.ClientStorePack.StorePackConfig.StorePackConfigSize|null);
                        show_in_hud?: (boolean|null);
                        hud_priority?: (number|null);
                        hud_icon_path?: (string|null);
                        icon2_path?: (string|null);
                        popup_image_override?: (string|null);
                        hide_pack_on_sold_out?: (boolean|null);
                        hide_pack_on_map_hud_click?: (boolean|null);
                    }

                    class StorePackConfig implements IStorePackConfig {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientStorePack.IStorePackConfig);
                        public priority: number;
                        public subcategory_id: string;
                        public icon_path: string;
                        public show_quantity_banner: boolean;
                        public quantity_override: string;
                        public prefab_path: string;
                        public marketing_text: string;
                        public description_text: string;
                        public show_badge: boolean;
                        public bonus_value: number;
                        public rarity_id: string;
                        public pack_size: WUProtos.Data.Client.ClientGmTemplate.ClientStorePack.StorePackConfig.StorePackConfigSize;
                        public show_in_hud: boolean;
                        public hud_priority: number;
                        public hud_icon_path: string;
                        public icon2_path: string;
                        public popup_image_override: string;
                        public hide_pack_on_sold_out: boolean;
                        public hide_pack_on_map_hud_click: boolean;
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientStorePack.IStorePackConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStorePack.StorePackConfig;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStorePack.StorePackConfig;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStorePack.StorePackConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace StorePackConfig {

                        enum StorePackConfigSize {
                            SIZE_SMALL = 0,
                            SIZE_MEDIUM = 1,
                            SIZE_LARGE = 2
                        }
                    }
                }

                interface IClientStoryboard {
                    id?: (string|null);
                    steps?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.IClientStoryboardStep[]|null);
                    trigger_point?: (string|null);
                    priority?: (number|null);
                }

                class ClientStoryboard implements IClientStoryboard {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientStoryboard);
                    public id: string;
                    public steps: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.IClientStoryboardStep[];
                    public trigger_point: string;
                    public priority: number;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientStoryboard, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientStoryboard {

                    interface IClientStoryboardStep {
                        custom_state?: (string|null);
                        generic_dialog?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardGenericDialogStep|null);
                        pause?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardPauseStep|null);
                        advice_overlay?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardAdviceOverlayStep|null);
                        advice_interjection?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardAdviceInterjectionStep|null);
                        conversation_interjection?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardConversationInterjectionStep|null);
                        call_to_action_asset?: (string|null);
                        call_to_action_button_identifier?: (string|null);
                    }

                    class ClientStoryboardStep implements IClientStoryboardStep {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.IClientStoryboardStep);
                        public custom_state: string;
                        public generic_dialog?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardGenericDialogStep|null);
                        public pause?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardPauseStep|null);
                        public advice_overlay?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardAdviceOverlayStep|null);
                        public advice_interjection?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardAdviceInterjectionStep|null);
                        public conversation_interjection?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardConversationInterjectionStep|null);
                        public call_to_action_asset: string;
                        public call_to_action_button_identifier: string;
                        public Data?: ("generic_dialog"|"pause"|"advice_overlay"|"advice_interjection"|"conversation_interjection");
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.IClientStoryboardStep, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace ClientStoryboardStep {

                        interface IStoryboardPauseStep {
                        }

                        class StoryboardPauseStep implements IStoryboardPauseStep {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardPauseStep);
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardPauseStep, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardPauseStep;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardPauseStep;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardPauseStep, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        interface IStoryboardGenericDialogStep {
                            title?: (string|null);
                            text?: (string|null);
                            button_text?: (string|null);
                        }

                        class StoryboardGenericDialogStep implements IStoryboardGenericDialogStep {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardGenericDialogStep);
                            public title: string;
                            public text: string;
                            public button_text: string;
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardGenericDialogStep, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardGenericDialogStep;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardGenericDialogStep;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardGenericDialogStep, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        interface ISpeechBubble {
                            character_portrait_image?: (string|null);
                            character_name_lockey?: (string|null);
                            bubble_prefab_name?: (string|null);
                            bubble_content_lockey?: (string|null);
                            sound_config?: (WUProtos.Data.ISoundConfig|null);
                        }

                        class SpeechBubble implements ISpeechBubble {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.ISpeechBubble);
                            public character_portrait_image: string;
                            public character_name_lockey: string;
                            public bubble_prefab_name: string;
                            public bubble_content_lockey: string;
                            public sound_config?: (WUProtos.Data.ISoundConfig|null);
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.ISpeechBubble, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.SpeechBubble;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.SpeechBubble;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.SpeechBubble, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        interface IStoryboardConversationInterjectionStep {
                            conversation?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.ISpeechBubble[]|null);
                        }

                        class StoryboardConversationInterjectionStep implements IStoryboardConversationInterjectionStep {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardConversationInterjectionStep);
                            public conversation: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.ISpeechBubble[];
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardConversationInterjectionStep, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardConversationInterjectionStep;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardConversationInterjectionStep;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardConversationInterjectionStep, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        interface IStoryboardAdviceOverlayStep {
                            speech_bubble?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.ISpeechBubble|null);
                            requires_scrim?: (boolean|null);
                            alignment?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardAdviceOverlayStep.AdviceOverlayAlignment|null);
                            show_continue_action_text?: (boolean|null);
                        }

                        class StoryboardAdviceOverlayStep implements IStoryboardAdviceOverlayStep {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardAdviceOverlayStep);
                            public speech_bubble?: (WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.ISpeechBubble|null);
                            public requires_scrim: boolean;
                            public alignment: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardAdviceOverlayStep.AdviceOverlayAlignment;
                            public show_continue_action_text: boolean;
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardAdviceOverlayStep, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardAdviceOverlayStep;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardAdviceOverlayStep;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardAdviceOverlayStep, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        namespace StoryboardAdviceOverlayStep {

                            enum AdviceOverlayAlignment {
                                bottom = 0,
                                top = 1
                            }
                        }

                        interface IStoryboardAdviceInterjectionStep {
                            character_portrait_image?: (string|null);
                            character_name_lockey?: (string|null);
                            content_text_lockey?: (string|null);
                            content_image_name?: (string|null);
                            sound_config?: (WUProtos.Data.ISoundConfig|null);
                            button_lockey?: (string|null);
                        }

                        class StoryboardAdviceInterjectionStep implements IStoryboardAdviceInterjectionStep {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardAdviceInterjectionStep);
                            public character_portrait_image: string;
                            public character_name_lockey: string;
                            public content_text_lockey: string;
                            public content_image_name: string;
                            public sound_config?: (WUProtos.Data.ISoundConfig|null);
                            public button_lockey: string;
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.IStoryboardAdviceInterjectionStep, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardAdviceInterjectionStep;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardAdviceInterjectionStep;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoryboard.ClientStoryboardStep.StoryboardAdviceInterjectionStep, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }
                    }
                }

                interface IClientRpgstat {
                    id?: (string|null);
                    tooltip?: (string|null);
                    percentage?: (boolean|null);
                    show_ui?: (boolean|null);
                    stat_name?: (string|null);
                    display_threshold?: (number|null);
                    icon_display_type?: (string|null);
                    info_desc?: (string|null);
                    icons?: ({ [k: string]: string }|null);
                }

                class ClientRpgstat implements IClientRpgstat {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientRpgstat);
                    public id: string;
                    public tooltip: string;
                    public percentage: boolean;
                    public show_ui: boolean;
                    public stat_name: string;
                    public display_threshold: number;
                    public icon_display_type: string;
                    public info_desc: string;
                    public icons: { [k: string]: string };
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientRpgstat, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientRpgstat;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientRpgstat;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientRpgstat, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientRecipe {
                    id?: (string|null);
                    name?: (string|null);
                    description?: (string|null);
                    icon?: (string|null);
                    model?: (string|null);
                    collect_fx?: (string|null);
                    crafting_fx?: (string|null);
                    reveal_fx?: (string|null);
                    primary_color?: (WUProtos.Data.IColor|null);
                    secondary_color?: (WUProtos.Data.IColor|null);
                    index?: (number|null);
                }

                class ClientRecipe implements IClientRecipe {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientRecipe);
                    public id: string;
                    public name: string;
                    public description: string;
                    public icon: string;
                    public model: string;
                    public collect_fx: string;
                    public crafting_fx: string;
                    public reveal_fx: string;
                    public primary_color?: (WUProtos.Data.IColor|null);
                    public secondary_color?: (WUProtos.Data.IColor|null);
                    public index: number;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientRecipe, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientRecipe;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientRecipe;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientRecipe, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientQuest {
                    id?: (string|null);
                    sort_order?: (number|null);
                    quest_name_loc_key?: (string|null);
                    quest_desc_loc_key?: (string|null);
                }

                class ClientQuest implements IClientQuest {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientQuest);
                    public id: string;
                    public sort_order: number;
                    public quest_name_loc_key: string;
                    public quest_desc_loc_key: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientQuest, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientQuest;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientQuest;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientQuest, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientProtegoPattern {
                    id?: (string|null);
                    ui_target_start_pos?: (WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern.IVector2|null);
                    ui_target_start_radius?: (number|null);
                    ui_target_end_pos?: (WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern.IVector2|null);
                    ui_target_end_radius?: (number|null);
                }

                class ClientProtegoPattern implements IClientProtegoPattern {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientProtegoPattern);
                    public id: string;
                    public ui_target_start_pos?: (WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern.IVector2|null);
                    public ui_target_start_radius: number;
                    public ui_target_end_pos?: (WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern.IVector2|null);
                    public ui_target_end_radius: number;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientProtegoPattern, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientProtegoPattern {

                    interface IVector2 {
                        x?: (number|null);
                        y?: (number|null);
                    }

                    class Vector2 implements IVector2 {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern.IVector2);
                        public x: number;
                        public y: number;
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern.IVector2, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern.Vector2;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern.Vector2;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientProtegoPattern.Vector2, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IClientProfession {
                    id?: (string|null);
                    display_order?: (number|null);
                    name?: (string|null);
                    desc?: (string|null);
                    icon?: (string|null);
                    mentor_name?: (string|null);
                    mentor_desc?: (string|null);
                    mentor_icon?: (string|null);
                    screen_background?: (string|null);
                    icon_stamp?: (string|null);
                    screen_background_header?: (string|null);
                    show_coming_soon?: (boolean|null);
                    show_profession_rank_meter?: (boolean|null);
                    profession_activated_sfx?: (string|null);
                    profession_ranks_map?: ({ [k: string]: WUProtos.Data.Client.ClientGmTemplate.IClientProfessionRank }|null);
                    enemy_affinity_icon?: (string|null);
                    enemy_affinity_name?: (string|null);
                    affinity_desc?: (string|null);
                    profession_color?: (WUProtos.Data.IColor|null);
                }

                class ClientProfession implements IClientProfession {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientProfession);
                    public id: string;
                    public display_order: number;
                    public name: string;
                    public desc: string;
                    public icon: string;
                    public mentor_name: string;
                    public mentor_desc: string;
                    public mentor_icon: string;
                    public screen_background: string;
                    public icon_stamp: string;
                    public screen_background_header: string;
                    public show_coming_soon: boolean;
                    public show_profession_rank_meter: boolean;
                    public profession_activated_sfx: string;
                    public profession_ranks_map: { [k: string]: WUProtos.Data.Client.ClientGmTemplate.IClientProfessionRank };
                    public enemy_affinity_icon: string;
                    public enemy_affinity_name: string;
                    public affinity_desc: string;
                    public profession_color?: (WUProtos.Data.IColor|null);
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientProfession, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientProfession;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientProfession;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientProfession, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientProfessionRank {
                    profession_nodes_map?: ({ [k: string]: WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.IClientProfessionNode }|null);
                    name?: (string|null);
                    profession_nodes?: (WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.IClientProfessionNode[]|null);
                    image_unlocked?: (string|null);
                    image_unlocked_open?: (string|null);
                    image_locked?: (string|null);
                    image_locked_open?: (string|null);
                    professin_rank_order?: (number|null);
                }

                class ClientProfessionRank implements IClientProfessionRank {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientProfessionRank);
                    public profession_nodes_map: { [k: string]: WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.IClientProfessionNode };
                    public name: string;
                    public profession_nodes: WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.IClientProfessionNode[];
                    public image_unlocked: string;
                    public image_unlocked_open: string;
                    public image_locked: string;
                    public image_locked_open: string;
                    public professin_rank_order: number;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientProfessionRank, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientProfessionRank {

                    interface IClientProfessionNode {
                        name?: (string|null);
                        icon?: (string|null);
                        levels?: (WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.ClientProfessionNode.IClientProfessionNodeLevel[]|null);
                        unlock_desc?: (string|null);
                        completed_desc?: (string|null);
                        completed_icon?: (string|null);
                    }

                    class ClientProfessionNode implements IClientProfessionNode {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.IClientProfessionNode);
                        public name: string;
                        public icon: string;
                        public levels: WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.ClientProfessionNode.IClientProfessionNodeLevel[];
                        public unlock_desc: string;
                        public completed_desc: string;
                        public completed_icon: string;
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.IClientProfessionNode, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.ClientProfessionNode;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.ClientProfessionNode;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.ClientProfessionNode, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace ClientProfessionNode {

                        interface IClientProfessionNodeLevel {
                            is_grant_new_map_ability?: (boolean|null);
                        }

                        class ClientProfessionNodeLevel implements IClientProfessionNodeLevel {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.ClientProfessionNode.IClientProfessionNodeLevel);
                            public is_grant_new_map_ability: boolean;
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.ClientProfessionNode.IClientProfessionNodeLevel, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.ClientProfessionNode.ClientProfessionNodeLevel;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.ClientProfessionNode.ClientProfessionNodeLevel;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientProfessionRank.ClientProfessionNode.ClientProfessionNodeLevel, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }
                    }
                }

                interface IClientPortkey {
                    id?: (string|null);
                    name?: (string|null);
                    icon?: (string|null);
                    localized_complete_text?: (string|null);
                }

                class ClientPortkey implements IClientPortkey {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientPortkey);
                    public id: string;
                    public name: string;
                    public icon: string;
                    public localized_complete_text: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientPortkey, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientPortkey;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientPortkey;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientPortkey, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientOutpostTemplate {
                    id?: (string|null);
                    interior?: (string|null);
                    exterior?: (string|null);
                }

                class ClientOutpostTemplate implements IClientOutpostTemplate {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientOutpostTemplate);
                    public id: string;
                    public interior: string;
                    public exterior: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientOutpostTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientOutpostTemplate;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientOutpostTemplate;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientOutpostTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientMapIngredient {
                    id?: (string|null);
                    prefab?: (string|null);
                    hide_at_capacity?: (boolean|null);
                }

                class ClientMapIngredient implements IClientMapIngredient {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientMapIngredient);
                    public id: string;
                    public prefab: string;
                    public hide_at_capacity: boolean;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientMapIngredient, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientMapIngredient;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientMapIngredient;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientMapIngredient, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientMapAbility {
                    id?: (string|null);
                    name?: (string|null);
                    icon?: (string|null);
                    description?: (string|null);
                    effect_sprite?: (string|null);
                    status_icon?: (string|null);
                    slot?: (number|null);
                    effect_prefab?: (string|null);
                    rule?: (WUProtos.Data.Client.ClientGmTemplate.ClientMapAbility.AdditionalSelectionRule|null);
                }

                class ClientMapAbility implements IClientMapAbility {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientMapAbility);
                    public id: string;
                    public name: string;
                    public icon: string;
                    public description: string;
                    public effect_sprite: string;
                    public status_icon: string;
                    public slot: number;
                    public effect_prefab: string;
                    public rule: WUProtos.Data.Client.ClientGmTemplate.ClientMapAbility.AdditionalSelectionRule;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientMapAbility, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientMapAbility;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientMapAbility;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientMapAbility, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientMapAbility {

                    enum AdditionalSelectionRule {
                        none_additional_selection = 0,
                        no_if_max_health = 1,
                        no_if_max_focus = 2,
                        no_if_alive = 3
                    }
                }

                interface IClientHaptic {
                    id?: (string|null);
                    ioswait_timings?: (number[]|null);
                    ioshaptic_types?: (number[]|null);
                    android_wait_timings?: (number[]|null);
                    android_amplitudes?: (number[]|null);
                    android_durations?: (number[]|null);
                }

                class ClientHaptic implements IClientHaptic {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientHaptic);
                    public id: string;
                    public ioswait_timings: number[];
                    public ioshaptic_types: number[];
                    public android_wait_timings: number[];
                    public android_amplitudes: number[];
                    public android_durations: number[];
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientHaptic, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientHaptic;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientHaptic;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientHaptic, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientEvent {
                    id?: (string|null);
                    is_user_facing?: (boolean|null);
                    title_text?: (string|null);
                    description_text?: (string|null);
                    image?: (string|null);
                    encounter_icon?: (string|null);
                    encounter_hud_tooltip_text?: (string|null);
                    encounter_start_text?: (string|null);
                    quest_ui_frame_color?: (WUProtos.Data.IColor|null);
                    quest_ui_background_color?: (WUProtos.Data.IColor|null);
                }

                class ClientEvent implements IClientEvent {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientEvent);
                    public id: string;
                    public is_user_facing: boolean;
                    public title_text: string;
                    public description_text: string;
                    public image: string;
                    public encounter_icon: string;
                    public encounter_hud_tooltip_text: string;
                    public encounter_start_text: string;
                    public quest_ui_frame_color?: (WUProtos.Data.IColor|null);
                    public quest_ui_background_color?: (WUProtos.Data.IColor|null);
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientEvent, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEvent;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEvent;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientEncounterType {
                    id?: (string|null);
                    show_in_look_in?: (boolean|null);
                    look_in_description?: (string|null);
                    look_in_icon?: (string|null);
                    conditional_tag_stat_desc?: (string|null);
                }

                class ClientEncounterType implements IClientEncounterType {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientEncounterType);
                    public id: string;
                    public show_in_look_in: boolean;
                    public look_in_description: string;
                    public look_in_icon: string;
                    public conditional_tag_stat_desc: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientEncounterType, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounterType;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounterType;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounterType, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientEncounter {
                    id?: (string|null);
                    encounter_searching_timeline?: (string|null);
                    encounter_searching_idle_timelines?: (string[]|null);
                    encounter_flee_timeline?: (string|null);
                    encounter_target?: (string|null);
                    stages?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.IClientEncounterStage[]|null);
                    encounter_target_layout?: (string|null);
                    search_target_layout?: (string|null);
                    encounter_assets?: (string[]|null);
                    encounter_map_sprite?: (string|null);
                    encounter_music_params?: (WUProtos.Data.IAudioParameter[]|null);
                    name?: (string|null);
                    encounter_map_sprite_frame?: (string|null);
                    map_health_bar_color?: (WUProtos.Data.IColor|null);
                    hud_health_bar_color?: (WUProtos.Data.IColor|null);
                }

                class ClientEncounter implements IClientEncounter {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientEncounter);
                    public id: string;
                    public encounter_searching_timeline: string;
                    public encounter_searching_idle_timelines: string[];
                    public encounter_flee_timeline: string;
                    public encounter_target: string;
                    public stages: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.IClientEncounterStage[];
                    public encounter_target_layout: string;
                    public search_target_layout: string;
                    public encounter_assets: string[];
                    public encounter_map_sprite: string;
                    public encounter_music_params: WUProtos.Data.IAudioParameter[];
                    public name: string;
                    public encounter_map_sprite_frame: string;
                    public map_health_bar_color?: (WUProtos.Data.IColor|null);
                    public hud_health_bar_color?: (WUProtos.Data.IColor|null);
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientEncounter, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientEncounter {

                    interface IClientEncounterStage {
                        swish?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStageSwish|null);
                        combat?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStageCombat|null);
                        portkey?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStagePortkey|null);
                        picture?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStagePicture|null);
                        disappear_delay?: (number|null);
                        intro_text?: (string|null);
                        stage_setup_sequence?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientSequenceData[]|null);
                        stage_completion_sequence?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientSequenceData[]|null);
                        spell_aim_layout?: (string|null);
                        idle_loop_timelines?: (string[]|null);
                        rng_intro_timeline?: (string|null);
                        rng_loop_timeline?: (string|null);
                        spell_failed_timeline?: (string|null);
                        combat_spell_list?: (string[]|null);
                    }

                    class ClientEncounterStage implements IClientEncounterStage {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.IClientEncounterStage);
                        public swish?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStageSwish|null);
                        public combat?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStageCombat|null);
                        public portkey?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStagePortkey|null);
                        public picture?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStagePicture|null);
                        public disappear_delay: number;
                        public intro_text: string;
                        public stage_setup_sequence: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientSequenceData[];
                        public stage_completion_sequence: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientSequenceData[];
                        public spell_aim_layout: string;
                        public idle_loop_timelines: string[];
                        public rng_intro_timeline: string;
                        public rng_loop_timeline: string;
                        public spell_failed_timeline: string;
                        public combat_spell_list: string[];
                        public Type?: ("swish"|"combat"|"portkey"|"picture");
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.IClientEncounterStage, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace ClientEncounterStage {

                        interface IClientSequenceData {
                            sequence_type?: (number|null);
                            obstacle?: (string|null);
                            obstacle_alias?: (string|null);
                            encounter_target?: (string|null);
                            timeline_file?: (string|null);
                            sequence_delay_time?: (number|null);
                            sequence_layout_node?: (string|null);
                        }

                        class ClientSequenceData implements IClientSequenceData {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientSequenceData);
                            public sequence_type: number;
                            public obstacle: string;
                            public obstacle_alias: string;
                            public encounter_target: string;
                            public timeline_file: string;
                            public sequence_delay_time: number;
                            public sequence_layout_node: string;
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientSequenceData, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientSequenceData;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientSequenceData;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientSequenceData, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        interface IClientEncounterStageSwish {
                            trace_succeeds_fanfare?: (WUProtos.Data.IAudioParameter|null);
                            trace_fails_fanfare?: (WUProtos.Data.IAudioParameter|null);
                        }

                        class ClientEncounterStageSwish implements IClientEncounterStageSwish {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStageSwish);
                            public trace_succeeds_fanfare?: (WUProtos.Data.IAudioParameter|null);
                            public trace_fails_fanfare?: (WUProtos.Data.IAudioParameter|null);
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStageSwish, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageSwish;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageSwish;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageSwish, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        interface IClientEncounterStagePortkey {
                            scene_id?: (string|null);
                            portal_id?: (string|null);
                            object_placement_id?: (string|null);
                            portal_placement_id?: (string|null);
                            portkey_asset?: (string|null);
                        }

                        class ClientEncounterStagePortkey implements IClientEncounterStagePortkey {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStagePortkey);
                            public scene_id: string;
                            public portal_id: string;
                            public object_placement_id: string;
                            public portal_placement_id: string;
                            public portkey_asset: string;
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStagePortkey, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePortkey;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePortkey;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePortkey, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        interface IClientEncounterStagePicture {
                            id?: (string|null);
                            spawn_scale?: (number|null);
                            min_scale?: (number|null);
                            max_scale?: (number|null);
                            simple_ar_pos_offset?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePicture.IVector3|null);
                        }

                        class ClientEncounterStagePicture implements IClientEncounterStagePicture {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStagePicture);
                            public id: string;
                            public spawn_scale: number;
                            public min_scale: number;
                            public max_scale: number;
                            public simple_ar_pos_offset?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePicture.IVector3|null);
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStagePicture, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePicture;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePicture;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePicture, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        namespace ClientEncounterStagePicture {

                            interface IVector3 {
                                x?: (number|null);
                                y?: (number|null);
                                z?: (number|null);
                            }

                            class Vector3 implements IVector3 {
                                constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePicture.IVector3);
                                public x: number;
                                public y: number;
                                public z: number;
                                public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePicture.IVector3, writer?: $protobuf.Writer): $protobuf.Writer;
                                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePicture.Vector3;
                                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePicture.Vector3;
                                public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStagePicture.Vector3, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                public toJSON(): { [k: string]: any };
                            }
                        }

                        interface IClientEncounterStageCombat {
                            state_graph_nodes?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.IClientCombatState[]|null);
                            enemy_traits?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.IClientCombatEnemyTrait[]|null);
                            enemy_rank_tags?: (WUProtos.Data.Client.ClientGmTemplate.IClientEncounterType[]|null);
                            enemy_flavor_text?: (string|null);
                        }

                        class ClientEncounterStageCombat implements IClientEncounterStageCombat {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStageCombat);
                            public state_graph_nodes: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.IClientCombatState[];
                            public enemy_traits: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.IClientCombatEnemyTrait[];
                            public enemy_rank_tags: WUProtos.Data.Client.ClientGmTemplate.IClientEncounterType[];
                            public enemy_flavor_text: string;
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.IClientEncounterStageCombat, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        namespace ClientEncounterStageCombat {

                            interface IClientCombatState {
                                possible_moves?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.IClientCombatMoveType[]|null);
                            }

                            class ClientCombatState implements IClientCombatState {
                                constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.IClientCombatState);
                                public possible_moves: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.IClientCombatMoveType[];
                                public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.IClientCombatState, writer?: $protobuf.Writer): $protobuf.Writer;
                                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState;
                                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState;
                                public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                public toJSON(): { [k: string]: any };
                            }

                            namespace ClientCombatState {

                                interface IClientCombatMoveType {
                                    player_attack?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerAttack|null);
                                    player_defend?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerDefend|null);
                                    player_auto_advance?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerAutoAdvance|null);
                                    enemy_action_timeline?: (string|null);
                                    player_succeed_timeline?: (string|null);
                                    player_failed_timeline?: (string|null);
                                }

                                class ClientCombatMoveType implements IClientCombatMoveType {
                                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.IClientCombatMoveType);
                                    public player_attack?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerAttack|null);
                                    public player_defend?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerDefend|null);
                                    public player_auto_advance?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerAutoAdvance|null);
                                    public enemy_action_timeline: string;
                                    public player_succeed_timeline: string;
                                    public player_failed_timeline: string;
                                    public CombatMove?: ("player_attack"|"player_defend"|"player_auto_advance");
                                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.IClientCombatMoveType, writer?: $protobuf.Writer): $protobuf.Writer;
                                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType;
                                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType;
                                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                    public toJSON(): { [k: string]: any };
                                }

                                namespace ClientCombatMoveType {

                                    interface IClientCombatPlayerDefend {
                                        pattern_list?: (WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerDefend.IClientCombatPlayerDefendPattern[]|null);
                                    }

                                    class ClientCombatPlayerDefend implements IClientCombatPlayerDefend {
                                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerDefend);
                                        public pattern_list: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerDefend.IClientCombatPlayerDefendPattern[];
                                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerDefend, writer?: $protobuf.Writer): $protobuf.Writer;
                                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerDefend;
                                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerDefend;
                                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerDefend, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                        public toJSON(): { [k: string]: any };
                                    }

                                    namespace ClientCombatPlayerDefend {

                                        interface IClientCombatPlayerDefendPattern {
                                            weight?: (number|null);
                                            protego_pattern?: (string|null);
                                        }

                                        class ClientCombatPlayerDefendPattern implements IClientCombatPlayerDefendPattern {
                                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerDefend.IClientCombatPlayerDefendPattern);
                                            public weight: number;
                                            public protego_pattern: string;
                                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerDefend.IClientCombatPlayerDefendPattern, writer?: $protobuf.Writer): $protobuf.Writer;
                                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerDefend.ClientCombatPlayerDefendPattern;
                                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerDefend.ClientCombatPlayerDefendPattern;
                                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerDefend.ClientCombatPlayerDefendPattern, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                            public toJSON(): { [k: string]: any };
                                        }
                                    }

                                    interface IClientCombatPlayerAutoAdvance {
                                    }

                                    class ClientCombatPlayerAutoAdvance implements IClientCombatPlayerAutoAdvance {
                                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerAutoAdvance);
                                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerAutoAdvance, writer?: $protobuf.Writer): $protobuf.Writer;
                                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerAutoAdvance;
                                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerAutoAdvance;
                                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerAutoAdvance, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                        public toJSON(): { [k: string]: any };
                                    }

                                    interface IClientCombatPlayerAttack {
                                        enemy_bone_name?: (string|null);
                                        ui_target_radius?: (number|null);
                                        reticle_time_to_fill?: (number|null);
                                    }

                                    class ClientCombatPlayerAttack implements IClientCombatPlayerAttack {
                                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerAttack);
                                        public enemy_bone_name: string;
                                        public ui_target_radius: number;
                                        public reticle_time_to_fill: number;
                                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.IClientCombatPlayerAttack, writer?: $protobuf.Writer): $protobuf.Writer;
                                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerAttack;
                                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerAttack;
                                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatState.ClientCombatMoveType.ClientCombatPlayerAttack, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                        public toJSON(): { [k: string]: any };
                                    }
                                }
                            }

                            interface IClientCombatEnemyTrait {
                                id?: (string|null);
                                name?: (string|null);
                                icon?: (string|null);
                                description?: (string|null);
                            }

                            class ClientCombatEnemyTrait implements IClientCombatEnemyTrait {
                                constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.IClientCombatEnemyTrait);
                                public id: string;
                                public name: string;
                                public icon: string;
                                public description: string;
                                public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.IClientCombatEnemyTrait, writer?: $protobuf.Writer): $protobuf.Writer;
                                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatEnemyTrait;
                                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatEnemyTrait;
                                public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientEncounter.ClientEncounterStage.ClientEncounterStageCombat.ClientCombatEnemyTrait, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                public toJSON(): { [k: string]: any };
                            }
                        }
                    }
                }

                interface IClientDailyRewardMonthlySchedule {
                    id?: (string|null);
                    daily_rewards?: ({ [k: string]: WUProtos.Data.Client.ClientGmTemplate.ClientDailyRewardMonthlySchedule.IClientDailyReward }|null);
                }

                class ClientDailyRewardMonthlySchedule implements IClientDailyRewardMonthlySchedule {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientDailyRewardMonthlySchedule);
                    public id: string;
                    public daily_rewards: { [k: string]: WUProtos.Data.Client.ClientGmTemplate.ClientDailyRewardMonthlySchedule.IClientDailyReward };
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientDailyRewardMonthlySchedule, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientDailyRewardMonthlySchedule;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientDailyRewardMonthlySchedule;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientDailyRewardMonthlySchedule, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientDailyRewardMonthlySchedule {

                    interface IClientDailyReward {
                        hide_as_crate?: (boolean|null);
                        make_sparkly?: (boolean|null);
                    }

                    class ClientDailyReward implements IClientDailyReward {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientDailyRewardMonthlySchedule.IClientDailyReward);
                        public hide_as_crate: boolean;
                        public make_sparkly: boolean;
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientDailyRewardMonthlySchedule.IClientDailyReward, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientDailyRewardMonthlySchedule.ClientDailyReward;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientDailyRewardMonthlySchedule.ClientDailyReward;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientDailyRewardMonthlySchedule.ClientDailyReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IClientCollectionPage {
                    id?: (string|null);
                    name?: (string|null);
                    page_prefab?: (string|null);
                    icon_bg?: (string|null);
                    show_in_ui?: (boolean|null);
                    visibility_requirements?: (WUProtos.Data.IRequirements|null);
                }

                class ClientCollectionPage implements IClientCollectionPage {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientCollectionPage);
                    public id: string;
                    public name: string;
                    public page_prefab: string;
                    public icon_bg: string;
                    public show_in_ui: boolean;
                    public visibility_requirements?: (WUProtos.Data.IRequirements|null);
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientCollectionPage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientCollectionPage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientCollectionPage;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientCollectionPage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientCollectionItem {
                    id?: (string|null);
                    name?: (string|null);
                    return_location?: (string|null);
                    description?: (string|null);
                    icon_returned?: (string|null);
                    show_in_ui?: (boolean|null);
                    mystery_data?: (WUProtos.Data.Client.ClientGmTemplate.ClientCollectionItem.IMysteryItemInfo[]|null);
                    sticker_placed_storyboard_id?: (string|null);
                }

                class ClientCollectionItem implements IClientCollectionItem {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientCollectionItem);
                    public id: string;
                    public name: string;
                    public return_location: string;
                    public description: string;
                    public icon_returned: string;
                    public show_in_ui: boolean;
                    public mystery_data: WUProtos.Data.Client.ClientGmTemplate.ClientCollectionItem.IMysteryItemInfo[];
                    public sticker_placed_storyboard_id: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientCollectionItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientCollectionItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientCollectionItem;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientCollectionItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientCollectionItem {

                    interface IMysteryItemInfo {
                        name?: (string|null);
                        description?: (string|null);
                        icon?: (string|null);
                        placed_storyboard_id?: (string|null);
                    }

                    class MysteryItemInfo implements IMysteryItemInfo {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientCollectionItem.IMysteryItemInfo);
                        public name: string;
                        public description: string;
                        public icon: string;
                        public placed_storyboard_id: string;
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientCollectionItem.IMysteryItemInfo, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientCollectionItem.MysteryItemInfo;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientCollectionItem.MysteryItemInfo;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientCollectionItem.MysteryItemInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IClientChamberTemplate {
                    id?: (string|null);
                    name?: (string|null);
                    challenge_leaving_warning_radius?: (number|null);
                    arena_scene?: (string|null);
                    base_difficulty?: (number|null);
                    runestone_difficulties?: ({ [k: string]: number }|null);
                    parkmode_bgs?: ({ [k: string]: string }|null);
                }

                class ClientChamberTemplate implements IClientChamberTemplate {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientChamberTemplate);
                    public id: string;
                    public name: string;
                    public challenge_leaving_warning_radius: number;
                    public arena_scene: string;
                    public base_difficulty: number;
                    public runestone_difficulties: { [k: string]: number };
                    public parkmode_bgs: { [k: string]: string };
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientChamberTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientChamberTemplate;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientChamberTemplate;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientChamberTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientChallengeBonus {
                    id?: (string|null);
                    display_text?: (string|null);
                    icon?: (string|null);
                }

                class ClientChallengeBonus implements IClientChallengeBonus {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientChallengeBonus);
                    public id: string;
                    public display_text: string;
                    public icon: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientChallengeBonus, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientChallengeBonus;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientChallengeBonus;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientChallengeBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientBuff {
                    id?: (string|null);
                    reward_bonus_loc_key?: (string|null);
                    reward_bonus_icon?: (string|null);
                    status_icon?: (string|null);
                    display_name?: (string|null);
                    conditional_modifiers?: (WUProtos.Data.Client.ClientGmTemplate.ClientBuff.IClientConditionalModifiers[]|null);
                }

                class ClientBuff implements IClientBuff {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientBuff);
                    public id: string;
                    public reward_bonus_loc_key: string;
                    public reward_bonus_icon: string;
                    public status_icon: string;
                    public display_name: string;
                    public conditional_modifiers: WUProtos.Data.Client.ClientGmTemplate.ClientBuff.IClientConditionalModifiers[];
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientBuff, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientBuff;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientBuff;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientBuff, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientBuff {

                    interface IClientConditionalModifiers {
                        desc?: (string|null);
                        modifiers?: ({ [k: string]: WUProtos.Data.Client.ClientGmTemplate.ClientBuff.ClientConditionalModifiers.IClientConditionalModifier }|null);
                    }

                    class ClientConditionalModifiers implements IClientConditionalModifiers {
                        constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientBuff.IClientConditionalModifiers);
                        public desc: string;
                        public modifiers: { [k: string]: WUProtos.Data.Client.ClientGmTemplate.ClientBuff.ClientConditionalModifiers.IClientConditionalModifier };
                        public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientBuff.IClientConditionalModifiers, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientBuff.ClientConditionalModifiers;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientBuff.ClientConditionalModifiers;
                        public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientBuff.ClientConditionalModifiers, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace ClientConditionalModifiers {

                        interface IClientConditionalModifier {
                            desc?: (string|null);
                        }

                        class ClientConditionalModifier implements IClientConditionalModifier {
                            constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.ClientBuff.ClientConditionalModifiers.IClientConditionalModifier);
                            public desc: string;
                            public static encode(message: WUProtos.Data.Client.ClientGmTemplate.ClientBuff.ClientConditionalModifiers.IClientConditionalModifier, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientBuff.ClientConditionalModifiers.ClientConditionalModifier;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientBuff.ClientConditionalModifiers.ClientConditionalModifier;
                            public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientBuff.ClientConditionalModifiers.ClientConditionalModifier, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }
                    }
                }

                interface IClientStoreSubcategory {
                    id?: (string|null);
                    priority?: (number|null);
                }

                class ClientStoreSubcategory implements IClientStoreSubcategory {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientStoreSubcategory);
                    public id: string;
                    public priority: number;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientStoreSubcategory, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientStoreSubcategory;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientStoreSubcategory;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientStoreSubcategory, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientVaultCategory {
                    id?: (string|null);
                    name?: (string|null);
                    description?: (string|null);
                    icon?: (string|null);
                    show_in_vault?: (boolean|null);
                    warning_threshold?: (number|null);
                    category_display_order?: (number|null);
                    increase_capacity_store_pack_proto_id?: (string|null);
                    increase_capacity_store_pack_proto_ids?: (string[]|null);
                    store_item_name?: (string|null);
                    store_item_icon?: (string|null);
                }

                class ClientVaultCategory implements IClientVaultCategory {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientVaultCategory);
                    public id: string;
                    public name: string;
                    public description: string;
                    public icon: string;
                    public show_in_vault: boolean;
                    public warning_threshold: number;
                    public category_display_order: number;
                    public increase_capacity_store_pack_proto_id: string;
                    public increase_capacity_store_pack_proto_ids: string[];
                    public store_item_name: string;
                    public store_item_icon: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientVaultCategory, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientVaultCategory;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientVaultCategory;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientVaultCategory, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientWalkboxTemplate {
                    id?: (string|null);
                    name?: (string|null);
                    icon?: (string|null);
                    unlocked_icon?: (string|null);
                }

                class ClientWalkboxTemplate implements IClientWalkboxTemplate {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientWalkboxTemplate);
                    public id: string;
                    public name: string;
                    public icon: string;
                    public unlocked_icon: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientWalkboxTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientWalkboxTemplate;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientWalkboxTemplate;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientWalkboxTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientMasterNote {
                    id?: (string|null);
                    name?: (string|null);
                    description?: (string|null);
                }

                class ClientMasterNote implements IClientMasterNote {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientMasterNote);
                    public id: string;
                    public name: string;
                    public description: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientMasterNote, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientMasterNote;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientMasterNote;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientMasterNote, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientBonusCategory {
                    id?: (string|null);
                    color?: (WUProtos.Data.IColor|null);
                    name_loc_key?: (string|null);
                    background_image?: (string|null);
                }

                class ClientBonusCategory implements IClientBonusCategory {
                    constructor(properties?: WUProtos.Data.Client.ClientGmTemplate.IClientBonusCategory);
                    public id: string;
                    public color?: (WUProtos.Data.IColor|null);
                    public name_loc_key: string;
                    public background_image: string;
                    public static encode(message: WUProtos.Data.Client.ClientGmTemplate.IClientBonusCategory, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientGmTemplate.ClientBonusCategory;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientGmTemplate.ClientBonusCategory;
                    public static toObject(message: WUProtos.Data.Client.ClientGmTemplate.ClientBonusCategory, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IClientHouse {
                name?: (string|null);
                description?: (string|null);
                icon?: (string|null);
                anim_in?: (string|null);
                anim_loop?: (string|null);
                anim_out?: (string|null);
                color?: (WUProtos.Data.IColor|null);
                sound_select?: (string|null);
                intro_sound_select?: (string|null);
            }

            class ClientHouse implements IClientHouse {
                constructor(properties?: WUProtos.Data.Client.IClientHouse);
                public name: string;
                public description: string;
                public icon: string;
                public anim_in: string;
                public anim_loop: string;
                public anim_out: string;
                public color?: (WUProtos.Data.IColor|null);
                public sound_select: string;
                public intro_sound_select: string;
                public static encode(message: WUProtos.Data.Client.IClientHouse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientHouse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientHouse;
                public static toObject(message: WUProtos.Data.Client.ClientHouse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientInbox {
                notifications?: (WUProtos.Data.Client.ClientInbox.INotification[]|null);
                builtin_variables?: (WUProtos.Data.Client.ClientInbox.ITemplateVariable[]|null);
            }

            class ClientInbox implements IClientInbox {
                constructor(properties?: WUProtos.Data.Client.IClientInbox);
                public notifications: WUProtos.Data.Client.ClientInbox.INotification[];
                public builtin_variables: WUProtos.Data.Client.ClientInbox.ITemplateVariable[];
                public static encode(message: WUProtos.Data.Client.IClientInbox, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientInbox;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientInbox;
                public static toObject(message: WUProtos.Data.Client.ClientInbox, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientInbox {

                enum Label {
                    UNSET_LABEL = 0,
                    UNREAD = 1,
                    NEW = 2,
                    IMMEDIATE = 3
                }

                interface INotification {
                    notification_id?: (string|null);
                    title_key?: (string|null);
                    category?: (string|null);
                    create_timestamp_ms?: (number|Long|null);
                    variables?: (WUProtos.Data.Client.ClientInbox.ITemplateVariable[]|null);
                    labels?: (WUProtos.Data.Client.ClientInbox.Label[]|null);
                    expire_time_ms?: (number|Long|null);
                }

                class Notification implements INotification {
                    constructor(properties?: WUProtos.Data.Client.ClientInbox.INotification);
                    public notification_id: string;
                    public title_key: string;
                    public category: string;
                    public create_timestamp_ms: (number|Long);
                    public variables: WUProtos.Data.Client.ClientInbox.ITemplateVariable[];
                    public labels: WUProtos.Data.Client.ClientInbox.Label[];
                    public expire_time_ms: (number|Long);
                    public static encode(message: WUProtos.Data.Client.ClientInbox.INotification, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientInbox.Notification;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientInbox.Notification;
                    public static toObject(message: WUProtos.Data.Client.ClientInbox.Notification, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ITemplateVariable {
                    name?: (string|null);
                    literal?: (string|null);
                    key?: (string|null);
                    lookup_table?: (string|null);
                    byte_value?: (Uint8Array|null);
                }

                class TemplateVariable implements ITemplateVariable {
                    constructor(properties?: WUProtos.Data.Client.ClientInbox.ITemplateVariable);
                    public name: string;
                    public literal: string;
                    public key: string;
                    public lookup_table: string;
                    public byte_value: Uint8Array;
                    public static encode(message: WUProtos.Data.Client.ClientInbox.ITemplateVariable, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientInbox.TemplateVariable;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientInbox.TemplateVariable;
                    public static toObject(message: WUProtos.Data.Client.ClientInbox.TemplateVariable, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IClientMapPoi {
                id?: (string|null);
                name?: (string|null);
                latitude?: (number|null);
                longitude?: (number|null);
                description?: (string|null);
                outpost?: (WUProtos.Data.Client.ClientMapPoi.IClientMapOutpost|null);
                fortress?: (WUProtos.Data.Client.ClientMapPoi.IClientMapFortress|null);
                greenhouse?: (WUProtos.Data.Client.ClientMapPoi.IClientMapGreenhouse|null);
                poi_accessibility?: (WUProtos.Enums.PoiAccessibility|null);
                partner?: (WUProtos.Data.Client.ClientMapPoi.IPartner|null);
                show_passcode_scanner?: (boolean|null);
            }

            class ClientMapPoi implements IClientMapPoi {
                constructor(properties?: WUProtos.Data.Client.IClientMapPoi);
                public id: string;
                public name: string;
                public latitude: number;
                public longitude: number;
                public description: string;
                public outpost?: (WUProtos.Data.Client.ClientMapPoi.IClientMapOutpost|null);
                public fortress?: (WUProtos.Data.Client.ClientMapPoi.IClientMapFortress|null);
                public greenhouse?: (WUProtos.Data.Client.ClientMapPoi.IClientMapGreenhouse|null);
                public poi_accessibility: WUProtos.Enums.PoiAccessibility;
                public partner?: (WUProtos.Data.Client.ClientMapPoi.IPartner|null);
                public show_passcode_scanner: boolean;
                public Type?: ("outpost"|"fortress"|"greenhouse");
                public static encode(message: WUProtos.Data.Client.IClientMapPoi, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientMapPoi;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientMapPoi;
                public static toObject(message: WUProtos.Data.Client.ClientMapPoi, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientMapPoi {

                interface IClientMapOutpost {
                    next_loot_time?: (number|Long|null);
                    dark_detector_amplifier?: (WUProtos.Data.Client.IClientDarkDetectorAmplifier|null);
                    outpost_template_gmt_id?: (string|null);
                }

                class ClientMapOutpost implements IClientMapOutpost {
                    constructor(properties?: WUProtos.Data.Client.ClientMapPoi.IClientMapOutpost);
                    public next_loot_time: (number|Long);
                    public dark_detector_amplifier?: (WUProtos.Data.Client.IClientDarkDetectorAmplifier|null);
                    public outpost_template_gmt_id: string;
                    public static encode(message: WUProtos.Data.Client.ClientMapPoi.IClientMapOutpost, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientMapPoi.ClientMapOutpost;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientMapPoi.ClientMapOutpost;
                    public static toObject(message: WUProtos.Data.Client.ClientMapPoi.ClientMapOutpost, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientMapGreenhouse {
                    next_loot_time?: (number|Long|null);
                    greenhouse_template_gmt_id?: (string|null);
                    normal_pot?: (WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse.IClientPotSummary[]|null);
                    rental_pot?: (WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse.IClientPotSummary[]|null);
                }

                class ClientMapGreenhouse implements IClientMapGreenhouse {
                    constructor(properties?: WUProtos.Data.Client.ClientMapPoi.IClientMapGreenhouse);
                    public next_loot_time: (number|Long);
                    public greenhouse_template_gmt_id: string;
                    public normal_pot: WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse.IClientPotSummary[];
                    public rental_pot: WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse.IClientPotSummary[];
                    public static encode(message: WUProtos.Data.Client.ClientMapPoi.IClientMapGreenhouse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse;
                    public static toObject(message: WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientMapGreenhouse {

                    interface IClientPotSummary {
                        ingredient_gmt_id?: (string|null);
                        growing_completion_time_ms?: (number|Long|null);
                    }

                    class ClientPotSummary implements IClientPotSummary {
                        constructor(properties?: WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse.IClientPotSummary);
                        public ingredient_gmt_id: string;
                        public growing_completion_time_ms: (number|Long);
                        public static encode(message: WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse.IClientPotSummary, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse.ClientPotSummary;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse.ClientPotSummary;
                        public static toObject(message: WUProtos.Data.Client.ClientMapPoi.ClientMapGreenhouse.ClientPotSummary, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IClientMapFortress {
                    fortress_template_gmt_id?: (string|null);
                    owning_team_id?: (string|null);
                    electoral_votes?: (number|Long|null);
                    season_id?: (string|null);
                    region_id?: (string|null);
                    wc_active_until_ms?: (number|Long|null);
                }

                class ClientMapFortress implements IClientMapFortress {
                    constructor(properties?: WUProtos.Data.Client.ClientMapPoi.IClientMapFortress);
                    public fortress_template_gmt_id: string;
                    public owning_team_id: string;
                    public electoral_votes: (number|Long);
                    public season_id: string;
                    public region_id: string;
                    public wc_active_until_ms: (number|Long);
                    public static encode(message: WUProtos.Data.Client.ClientMapPoi.IClientMapFortress, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientMapPoi.ClientMapFortress;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientMapPoi.ClientMapFortress;
                    public static toObject(message: WUProtos.Data.Client.ClientMapPoi.ClientMapFortress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPartner {
                    id?: (string|null);
                    popup_desc?: (string|null);
                    hyperlink?: (string|null);
                    partner_type?: (WUProtos.Data.Client.ClientMapPoi.Partner.PartnerType|null);
                }

                class Partner implements IPartner {
                    constructor(properties?: WUProtos.Data.Client.ClientMapPoi.IPartner);
                    public id: string;
                    public popup_desc: string;
                    public hyperlink: string;
                    public partner_type: WUProtos.Data.Client.ClientMapPoi.Partner.PartnerType;
                    public static encode(message: WUProtos.Data.Client.ClientMapPoi.IPartner, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientMapPoi.Partner;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientMapPoi.Partner;
                    public static toObject(message: WUProtos.Data.Client.ClientMapPoi.Partner, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace Partner {

                    enum PartnerType {
                        PARTNER_TYPE_UNSPECIFIED = 0,
                        PARTNER_TYPE_REGULAR = 1,
                        PARTNER_TYPE_FRANCHISE = 2,
                        PARTNER_TYPE_PSEUDO_ORGANIC = 3
                    }
                }
            }

            interface IClientPlayerSnapshot {
                vault_items?: ({ [k: string]: (number|Long) }|null);
                buffs?: (WUProtos.Data.Buff.IActiveBuff[]|null);
            }

            class ClientPlayerSnapshot implements IClientPlayerSnapshot {
                constructor(properties?: WUProtos.Data.Client.IClientPlayerSnapshot);
                public vault_items: { [k: string]: (number|Long) };
                public buffs: WUProtos.Data.Buff.IActiveBuff[];
                public static encode(message: WUProtos.Data.Client.IClientPlayerSnapshot, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientPlayerSnapshot;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientPlayerSnapshot;
                public static toObject(message: WUProtos.Data.Client.ClientPlayerSnapshot, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientProfileConfig {
                id?: (string|null);
                titles?: ({ [k: string]: WUProtos.Data.Client.ClientProfileConfig.IClientTitle }|null);
                badges?: ({ [k: string]: WUProtos.Data.Client.IClientBadge }|null);
                houses?: ({ [k: string]: WUProtos.Data.Client.IClientHouse }|null);
                themes?: ({ [k: string]: WUProtos.Data.Client.IClientTheme }|null);
                wand_cores?: ({ [k: string]: WUProtos.Data.Client.IClientWandCore }|null);
                wand_woods?: ({ [k: string]: WUProtos.Data.Client.IClientWandWood }|null);
                wand_flexibilities?: ({ [k: string]: WUProtos.Data.Client.IClientWandFlexibility }|null);
                wand_lengths?: ({ [k: string]: WUProtos.Data.Client.IClientWandLength }|null);
            }

            class ClientProfileConfig implements IClientProfileConfig {
                constructor(properties?: WUProtos.Data.Client.IClientProfileConfig);
                public id: string;
                public titles: { [k: string]: WUProtos.Data.Client.ClientProfileConfig.IClientTitle };
                public badges: { [k: string]: WUProtos.Data.Client.IClientBadge };
                public houses: { [k: string]: WUProtos.Data.Client.IClientHouse };
                public themes: { [k: string]: WUProtos.Data.Client.IClientTheme };
                public wand_cores: { [k: string]: WUProtos.Data.Client.IClientWandCore };
                public wand_woods: { [k: string]: WUProtos.Data.Client.IClientWandWood };
                public wand_flexibilities: { [k: string]: WUProtos.Data.Client.IClientWandFlexibility };
                public wand_lengths: { [k: string]: WUProtos.Data.Client.IClientWandLength };
                public static encode(message: WUProtos.Data.Client.IClientProfileConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientProfileConfig;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientProfileConfig;
                public static toObject(message: WUProtos.Data.Client.ClientProfileConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientProfileConfig {

                interface IClientTitle {
                    name?: (string|null);
                    unlocked_description?: (string|null);
                    disabled?: (boolean|null);
                    show_badge?: (boolean|null);
                    visibility_conditions?: (WUProtos.Data.IRequirements|null);
                    unlock_conditions?: (WUProtos.Data.IRequirements|null);
                }

                class ClientTitle implements IClientTitle {
                    constructor(properties?: WUProtos.Data.Client.ClientProfileConfig.IClientTitle);
                    public name: string;
                    public unlocked_description: string;
                    public disabled: boolean;
                    public show_badge: boolean;
                    public visibility_conditions?: (WUProtos.Data.IRequirements|null);
                    public unlock_conditions?: (WUProtos.Data.IRequirements|null);
                    public static encode(message: WUProtos.Data.Client.ClientProfileConfig.IClientTitle, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientProfileConfig.ClientTitle;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientProfileConfig.ClientTitle;
                    public static toObject(message: WUProtos.Data.Client.ClientProfileConfig.ClientTitle, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IClientTelemetry {
                data_id?: (WUProtos.Data.Client.ClientTelemetry.IPlatformDataId[]|null);
                application_data?: (Uint8Array[]|null);
            }

            class ClientTelemetry implements IClientTelemetry {
                constructor(properties?: WUProtos.Data.Client.IClientTelemetry);
                public data_id: WUProtos.Data.Client.ClientTelemetry.IPlatformDataId[];
                public application_data: Uint8Array[];
                public static encode(message: WUProtos.Data.Client.IClientTelemetry, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientTelemetry;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientTelemetry;
                public static toObject(message: WUProtos.Data.Client.ClientTelemetry, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientTelemetry {

                interface IPlatformDataId {
                    telemetry_id?: (number|null);
                    telemetry_domain_id?: (WUProtos.Data.Client.ClientTelemetry.PlatformDataId.TelemetryDomainId|null);
                }

                class PlatformDataId implements IPlatformDataId {
                    constructor(properties?: WUProtos.Data.Client.ClientTelemetry.IPlatformDataId);
                    public telemetry_id: number;
                    public telemetry_domain_id: WUProtos.Data.Client.ClientTelemetry.PlatformDataId.TelemetryDomainId;
                    public static encode(message: WUProtos.Data.Client.ClientTelemetry.IPlatformDataId, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientTelemetry.PlatformDataId;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientTelemetry.PlatformDataId;
                    public static toObject(message: WUProtos.Data.Client.ClientTelemetry.PlatformDataId, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace PlatformDataId {

                    enum TelemetryDomainId {
                        TELEMETRY_NO_DOMAIN_ID = 0,
                        TELEMETRY_DITTO = 1,
                        TELEMETRY_GAME = 2
                    }
                }
            }

            interface IClientTelemetryBatch {
                telemetry_scope_id?: (WUProtos.Data.Client.ClientTelemetryBatch.TelemetryScopeId|null);
                events?: (WUProtos.Data.Client.ClientTelemetryBatch.IClientTelemetryRecord[]|null);
                metrics?: (WUProtos.Data.Client.ClientTelemetryBatch.IClientTelemetryRecord[]|null);
                api_version?: (string|null);
                message_version?: (string|null);
            }

            class ClientTelemetryBatch implements IClientTelemetryBatch {
                constructor(properties?: WUProtos.Data.Client.IClientTelemetryBatch);
                public telemetry_scope_id: WUProtos.Data.Client.ClientTelemetryBatch.TelemetryScopeId;
                public events: WUProtos.Data.Client.ClientTelemetryBatch.IClientTelemetryRecord[];
                public metrics: WUProtos.Data.Client.ClientTelemetryBatch.IClientTelemetryRecord[];
                public api_version: string;
                public message_version: string;
                public static encode(message: WUProtos.Data.Client.IClientTelemetryBatch, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientTelemetryBatch;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientTelemetryBatch;
                public static toObject(message: WUProtos.Data.Client.ClientTelemetryBatch, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientTelemetryBatch {

                interface IClientTelemetryRecord {
                    record_id?: (string|null);
                    encoded_message?: (Uint8Array|null);
                    client_timestamp_ms?: (number|Long|null);
                    metric_id?: (number|Long|null);
                }

                class ClientTelemetryRecord implements IClientTelemetryRecord {
                    constructor(properties?: WUProtos.Data.Client.ClientTelemetryBatch.IClientTelemetryRecord);
                    public record_id: string;
                    public encoded_message: Uint8Array;
                    public client_timestamp_ms: (number|Long);
                    public metric_id: (number|Long);
                    public static encode(message: WUProtos.Data.Client.ClientTelemetryBatch.IClientTelemetryRecord, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientTelemetryBatch.ClientTelemetryRecord;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientTelemetryBatch.ClientTelemetryRecord;
                    public static toObject(message: WUProtos.Data.Client.ClientTelemetryBatch.ClientTelemetryRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                enum TelemetryScopeId {
                    UNSET = 0,
                    DITTO = 1,
                    GAME = 2
                }
            }

            interface IClientTelemetryClientSettings {
                is_upload_enabled?: (boolean|null);
                max_upload_size_in_bytes?: (number|Long|null);
                update_interval_in_sec?: (number|Long|null);
                settings_update_interval_in_sec?: (number|Long|null);
                max_envelope_queue_size?: (number|Long|null);
                sampling_probability?: (number|null);
                use_player_based_sampling?: (boolean|null);
                player_hash?: (number|null);
                player_external_omni_id?: (string|null);
                disable_omni_sending?: (boolean|null);
                special_sampling_probability_map?: ({ [k: string]: number }|null);
                player_external_ua_id?: (string|null);
            }

            class ClientTelemetryClientSettings implements IClientTelemetryClientSettings {
                constructor(properties?: WUProtos.Data.Client.IClientTelemetryClientSettings);
                public is_upload_enabled: boolean;
                public max_upload_size_in_bytes: (number|Long);
                public update_interval_in_sec: (number|Long);
                public settings_update_interval_in_sec: (number|Long);
                public max_envelope_queue_size: (number|Long);
                public sampling_probability: number;
                public use_player_based_sampling: boolean;
                public player_hash: number;
                public player_external_omni_id: string;
                public disable_omni_sending: boolean;
                public special_sampling_probability_map: { [k: string]: number };
                public player_external_ua_id: string;
                public static encode(message: WUProtos.Data.Client.IClientTelemetryClientSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientTelemetryClientSettings;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientTelemetryClientSettings;
                public static toObject(message: WUProtos.Data.Client.ClientTelemetryClientSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryPartnerPoiHyperlink {
                poi_id?: (string|null);
                partner_id?: (string|null);
                url?: (string|null);
            }

            class ClientTelemetryPartnerPoiHyperlink implements IClientTelemetryPartnerPoiHyperlink {
                constructor(properties?: WUProtos.Data.Client.IClientTelemetryPartnerPoiHyperlink);
                public poi_id: string;
                public partner_id: string;
                public url: string;
                public static encode(message: WUProtos.Data.Client.IClientTelemetryPartnerPoiHyperlink, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientTelemetryPartnerPoiHyperlink;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientTelemetryPartnerPoiHyperlink;
                public static toObject(message: WUProtos.Data.Client.ClientTelemetryPartnerPoiHyperlink, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryPartnerPoiInfo {
                poi_id?: (string|null);
                partner_id?: (string|null);
            }

            class ClientTelemetryPartnerPoiInfo implements IClientTelemetryPartnerPoiInfo {
                constructor(properties?: WUProtos.Data.Client.IClientTelemetryPartnerPoiInfo);
                public poi_id: string;
                public partner_id: string;
                public static encode(message: WUProtos.Data.Client.IClientTelemetryPartnerPoiInfo, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientTelemetryPartnerPoiInfo;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientTelemetryPartnerPoiInfo;
                public static toObject(message: WUProtos.Data.Client.ClientTelemetryPartnerPoiInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryPartnerPoiInteract {
                poi_id?: (string|null);
                partner_id?: (string|null);
                is_preview?: (boolean|null);
            }

            class ClientTelemetryPartnerPoiInteract implements IClientTelemetryPartnerPoiInteract {
                constructor(properties?: WUProtos.Data.Client.IClientTelemetryPartnerPoiInteract);
                public poi_id: string;
                public partner_id: string;
                public is_preview: boolean;
                public static encode(message: WUProtos.Data.Client.IClientTelemetryPartnerPoiInteract, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientTelemetryPartnerPoiInteract;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientTelemetryPartnerPoiInteract;
                public static toObject(message: WUProtos.Data.Client.ClientTelemetryPartnerPoiInteract, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryPartnerPoiLeaving {
                poi_id?: (string|null);
                partner_id?: (string|null);
                time_in_poi?: (number|Long|null);
                time_in_range?: (number|Long|null);
            }

            class ClientTelemetryPartnerPoiLeaving implements IClientTelemetryPartnerPoiLeaving {
                constructor(properties?: WUProtos.Data.Client.IClientTelemetryPartnerPoiLeaving);
                public poi_id: string;
                public partner_id: string;
                public time_in_poi: (number|Long);
                public time_in_range: (number|Long);
                public static encode(message: WUProtos.Data.Client.IClientTelemetryPartnerPoiLeaving, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientTelemetryPartnerPoiLeaving;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientTelemetryPartnerPoiLeaving;
                public static toObject(message: WUProtos.Data.Client.ClientTelemetryPartnerPoiLeaving, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTheme {
                icon?: (string|null);
            }

            class ClientTheme implements IClientTheme {
                constructor(properties?: WUProtos.Data.Client.IClientTheme);
                public icon: string;
                public static encode(message: WUProtos.Data.Client.IClientTheme, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientTheme;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientTheme;
                public static toObject(message: WUProtos.Data.Client.ClientTheme, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientWandCore {
                name?: (string|null);
                icon?: (string|null);
                sound_select?: (string|null);
            }

            class ClientWandCore implements IClientWandCore {
                constructor(properties?: WUProtos.Data.Client.IClientWandCore);
                public name: string;
                public icon: string;
                public sound_select: string;
                public static encode(message: WUProtos.Data.Client.IClientWandCore, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientWandCore;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientWandCore;
                public static toObject(message: WUProtos.Data.Client.ClientWandCore, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientWandFlexibility {
                name?: (string|null);
                icon?: (string|null);
                model_path?: (string|null);
                slidervalue?: (number|null);
                fontsize?: (number|null);
                interspace?: (number|null);
                movespeed?: (number|null);
                curvewidth?: (number|null);
                curveheight?: (number|null);
            }

            class ClientWandFlexibility implements IClientWandFlexibility {
                constructor(properties?: WUProtos.Data.Client.IClientWandFlexibility);
                public name: string;
                public icon: string;
                public model_path: string;
                public slidervalue: number;
                public fontsize: number;
                public interspace: number;
                public movespeed: number;
                public curvewidth: number;
                public curveheight: number;
                public static encode(message: WUProtos.Data.Client.IClientWandFlexibility, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientWandFlexibility;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientWandFlexibility;
                public static toObject(message: WUProtos.Data.Client.ClientWandFlexibility, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientWandLength {
                name?: (string|null);
                model_path?: (string|null);
                slidervalue?: (number|null);
            }

            class ClientWandLength implements IClientWandLength {
                constructor(properties?: WUProtos.Data.Client.IClientWandLength);
                public name: string;
                public model_path: string;
                public slidervalue: number;
                public static encode(message: WUProtos.Data.Client.IClientWandLength, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientWandLength;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientWandLength;
                public static toObject(message: WUProtos.Data.Client.ClientWandLength, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientWandWood {
                name?: (string|null);
                btn_icon?: (string|null);
                icon?: (string|null);
                texture?: (string|null);
                material?: (string|null);
            }

            class ClientWandWood implements IClientWandWood {
                constructor(properties?: WUProtos.Data.Client.IClientWandWood);
                public name: string;
                public btn_icon: string;
                public icon: string;
                public texture: string;
                public material: string;
                public static encode(message: WUProtos.Data.Client.IClientWandWood, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Client.ClientWandWood;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Client.ClientWandWood;
                public static toObject(message: WUProtos.Data.Client.ClientWandWood, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        namespace Collection {

            interface ICollectionFamily {
                id?: (string|null);
                family_type?: (WUProtos.Data.Collection.CollectionFamily.CollectionFamilyType|null);
                items?: (string[]|null);
                levels?: (WUProtos.Data.Collection.CollectionFamily.ICollectionFamilyLevel[]|null);
                pages?: (string[]|null);
                family_rune_name?: (string|null);
                family_rank_table_id?: (string|null);
                returned_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection[]|null);
                rune_id?: (string[]|null);
                apex_items?: (string[]|null);
                unlock_requirements?: (WUProtos.Data.IRequirements|null);
                subfeature_type?: (WUProtos.Data.Collection.CollectionFamily.SubfeatureType|null);
            }

            class CollectionFamily implements ICollectionFamily {
                constructor(properties?: WUProtos.Data.Collection.ICollectionFamily);
                public id: string;
                public family_type: WUProtos.Data.Collection.CollectionFamily.CollectionFamilyType;
                public items: string[];
                public levels: WUProtos.Data.Collection.CollectionFamily.ICollectionFamilyLevel[];
                public pages: string[];
                public family_rune_name: string;
                public family_rank_table_id: string;
                public returned_rewards: WUProtos.Data.Loot.LootReward.ILootCollection[];
                public rune_id: string[];
                public apex_items: string[];
                public unlock_requirements?: (WUProtos.Data.IRequirements|null);
                public subfeature_type: WUProtos.Data.Collection.CollectionFamily.SubfeatureType;
                public static encode(message: WUProtos.Data.Collection.ICollectionFamily, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Collection.CollectionFamily;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Collection.CollectionFamily;
                public static toObject(message: WUProtos.Data.Collection.CollectionFamily, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace CollectionFamily {

                enum SubfeatureType {
                    UNSET = 0,
                    EXPLORATION = 1,
                    CHALLENGE = 2,
                    MYSTERIES = 3,
                    EVENTS = 4
                }

                enum CollectionFamilyType {
                    COLLECTION_FAMILY_TYPE_UNKNOWN = 0,
                    NORMAL = 1,
                    APEX = 2
                }

                interface ICollectionFamilyLevel {
                    xp?: (number|Long|null);
                    returned_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection[]|null);
                    one_time_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    level_desc?: (string|null);
                }

                class CollectionFamilyLevel implements ICollectionFamilyLevel {
                    constructor(properties?: WUProtos.Data.Collection.CollectionFamily.ICollectionFamilyLevel);
                    public xp: (number|Long);
                    public returned_rewards: WUProtos.Data.Loot.LootReward.ILootCollection[];
                    public one_time_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public level_desc: string;
                    public static encode(message: WUProtos.Data.Collection.CollectionFamily.ICollectionFamilyLevel, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Collection.CollectionFamily.CollectionFamilyLevel;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Collection.CollectionFamily.CollectionFamilyLevel;
                    public static toObject(message: WUProtos.Data.Collection.CollectionFamily.CollectionFamilyLevel, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        interface IColor {
            r?: (number|null);
            g?: (number|null);
            b?: (number|null);
            a?: (number|null);
        }

        class Color implements IColor {
            constructor(properties?: WUProtos.Data.IColor);
            public r: number;
            public g: number;
            public b: number;
            public a: number;
            public static encode(message: WUProtos.Data.IColor, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Color;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Color;
            public static toObject(message: WUProtos.Data.Color, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace Combat {

            interface ICombatResults {
                current_state_index?: (number|Long|null);
                current_crit?: (boolean|null);
                next_state_index?: (number|Long|null);
                next_crit?: (boolean|null);
                hp_current_enemy?: (number|Long|null);
                hp_current_player?: (number|Long|null);
                level?: (number|null);
                enemy_dodges?: (boolean|null);
                player_dodges?: (boolean|null);
                temp_client_stats_helper?: (WUProtos.Data.Combat.CombatResults.ITempClientStatsHelper|null);
            }

            class CombatResults implements ICombatResults {
                constructor(properties?: WUProtos.Data.Combat.ICombatResults);
                public current_state_index: (number|Long);
                public current_crit: boolean;
                public next_state_index: (number|Long);
                public next_crit: boolean;
                public hp_current_enemy: (number|Long);
                public hp_current_player: (number|Long);
                public level: number;
                public enemy_dodges: boolean;
                public player_dodges: boolean;
                public temp_client_stats_helper?: (WUProtos.Data.Combat.CombatResults.ITempClientStatsHelper|null);
                public static encode(message: WUProtos.Data.Combat.ICombatResults, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Combat.CombatResults;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Combat.CombatResults;
                public static toObject(message: WUProtos.Data.Combat.CombatResults, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace CombatResults {

                interface ITempClientStatsHelper {
                    player_active_stats?: ({ [k: string]: (number|Long) }|null);
                    enemy_active_stats?: ({ [k: string]: (number|Long) }|null);
                    hp_max_enemy?: (number|Long|null);
                    enemy_damage_unblocked?: ((number|Long)[]|null);
                    enemy_damage_blocked?: ((number|Long)[]|null);
                    hp_max_player?: (number|Long|null);
                    player_damage_per_energy?: ({ [k: string]: (number|Long) }|null);
                }

                class TempClientStatsHelper implements ITempClientStatsHelper {
                    constructor(properties?: WUProtos.Data.Combat.CombatResults.ITempClientStatsHelper);
                    public player_active_stats: { [k: string]: (number|Long) };
                    public enemy_active_stats: { [k: string]: (number|Long) };
                    public hp_max_enemy: (number|Long);
                    public enemy_damage_unblocked: (number|Long)[];
                    public enemy_damage_blocked: (number|Long)[];
                    public hp_max_player: (number|Long);
                    public player_damage_per_energy: { [k: string]: (number|Long) };
                    public static encode(message: WUProtos.Data.Combat.CombatResults.ITempClientStatsHelper, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Combat.CombatResults.TempClientStatsHelper;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Combat.CombatResults.TempClientStatsHelper;
                    public static toObject(message: WUProtos.Data.Combat.CombatResults.TempClientStatsHelper, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        interface ICondition {
            always?: (WUProtos.Enums.BoolLiteral|null);
            enemy_tag_cond?: (WUProtos.Data.Condition.IEnemyTagCondition|null);
            stats_tag_cond?: (WUProtos.Data.Condition.IStatsTagCondition|null);
            buff_count_cond?: (WUProtos.Data.Condition.IBuffCountCondition|null);
            rune_in_challenge_cond?: (WUProtos.Data.Condition.IRuneInChallengeCondition|null);
            time_remaining_cond?: (WUProtos.Data.Condition.ITimeRemainingCondition|null);
            focus_level_cond?: (WUProtos.Data.Condition.IFocusAmountCondition|null);
            team_composition_cond?: (WUProtos.Data.Condition.ITeamCompositionCondition|null);
            time_of_day_cond?: (WUProtos.Data.Condition.ITimeOfDayCondition|null);
            weather_cond?: (WUProtos.Data.Condition.IWeatherCondition|null);
            team_property_cond?: (WUProtos.Data.Condition.ITeamPropertyCondition|null);
            enemies_defeated_cond?: (WUProtos.Data.Condition.IEnemiesDefeatedCountCondition|null);
        }

        class Condition implements ICondition {
            constructor(properties?: WUProtos.Data.ICondition);
            public always: WUProtos.Enums.BoolLiteral;
            public enemy_tag_cond?: (WUProtos.Data.Condition.IEnemyTagCondition|null);
            public stats_tag_cond?: (WUProtos.Data.Condition.IStatsTagCondition|null);
            public buff_count_cond?: (WUProtos.Data.Condition.IBuffCountCondition|null);
            public rune_in_challenge_cond?: (WUProtos.Data.Condition.IRuneInChallengeCondition|null);
            public time_remaining_cond?: (WUProtos.Data.Condition.ITimeRemainingCondition|null);
            public focus_level_cond?: (WUProtos.Data.Condition.IFocusAmountCondition|null);
            public team_composition_cond?: (WUProtos.Data.Condition.ITeamCompositionCondition|null);
            public time_of_day_cond?: (WUProtos.Data.Condition.ITimeOfDayCondition|null);
            public weather_cond?: (WUProtos.Data.Condition.IWeatherCondition|null);
            public team_property_cond?: (WUProtos.Data.Condition.ITeamPropertyCondition|null);
            public enemies_defeated_cond?: (WUProtos.Data.Condition.IEnemiesDefeatedCountCondition|null);
            public Condition?: ("always"|"enemy_tag_cond"|"stats_tag_cond"|"buff_count_cond"|"rune_in_challenge_cond"|"time_remaining_cond"|"focus_level_cond"|"team_composition_cond"|"time_of_day_cond"|"weather_cond"|"team_property_cond"|"enemies_defeated_cond");
            public static encode(message: WUProtos.Data.ICondition, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition;
            public static toObject(message: WUProtos.Data.Condition, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace Condition {

            interface IFocusAmountCondition {
                comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                target_comparison_value?: (number|null);
            }

            class FocusAmountCondition implements IFocusAmountCondition {
                constructor(properties?: WUProtos.Data.Condition.IFocusAmountCondition);
                public comparison_operator: WUProtos.Enums.ComparisonOperator;
                public target_comparison_value: number;
                public static encode(message: WUProtos.Data.Condition.IFocusAmountCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition.FocusAmountCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition.FocusAmountCondition;
                public static toObject(message: WUProtos.Data.Condition.FocusAmountCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IRuneInChallengeCondition {
                vault_item_id?: (string|null);
            }

            class RuneInChallengeCondition implements IRuneInChallengeCondition {
                constructor(properties?: WUProtos.Data.Condition.IRuneInChallengeCondition);
                public vault_item_id: string;
                public static encode(message: WUProtos.Data.Condition.IRuneInChallengeCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition.RuneInChallengeCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition.RuneInChallengeCondition;
                public static toObject(message: WUProtos.Data.Condition.RuneInChallengeCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ITeamCompositionCondition {
                comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                target_comparison_value?: (number|null);
                profession_id?: (string|null);
            }

            class TeamCompositionCondition implements ITeamCompositionCondition {
                constructor(properties?: WUProtos.Data.Condition.ITeamCompositionCondition);
                public comparison_operator: WUProtos.Enums.ComparisonOperator;
                public target_comparison_value: number;
                public profession_id: string;
                public static encode(message: WUProtos.Data.Condition.ITeamCompositionCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition.TeamCompositionCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition.TeamCompositionCondition;
                public static toObject(message: WUProtos.Data.Condition.TeamCompositionCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ITeamPropertyCondition {
                comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                target_comparison_value?: (number|null);
                criteria?: (WUProtos.Data.Condition.TeamPropertyCondition.Criteria|null);
            }

            class TeamPropertyCondition implements ITeamPropertyCondition {
                constructor(properties?: WUProtos.Data.Condition.ITeamPropertyCondition);
                public comparison_operator: WUProtos.Enums.ComparisonOperator;
                public target_comparison_value: number;
                public criteria: WUProtos.Data.Condition.TeamPropertyCondition.Criteria;
                public static encode(message: WUProtos.Data.Condition.ITeamPropertyCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition.TeamPropertyCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition.TeamPropertyCondition;
                public static toObject(message: WUProtos.Data.Condition.TeamPropertyCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace TeamPropertyCondition {

                enum Criteria {
                    UNKNOWN = 0,
                    FRIENDS = 1,
                    NON_FRIENDS = 2,
                    SAME_TEAM = 3,
                    OTHER_TEAM = 4
                }
            }

            interface ITimeOfDayCondition {
                starting_daily_timestamp?: (number|Long|null);
                ending_daily_timestamp?: (number|Long|null);
            }

            class TimeOfDayCondition implements ITimeOfDayCondition {
                constructor(properties?: WUProtos.Data.Condition.ITimeOfDayCondition);
                public starting_daily_timestamp: (number|Long);
                public ending_daily_timestamp: (number|Long);
                public static encode(message: WUProtos.Data.Condition.ITimeOfDayCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition.TimeOfDayCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition.TimeOfDayCondition;
                public static toObject(message: WUProtos.Data.Condition.TimeOfDayCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ITimeRemainingCondition {
                comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                target_comparison_value?: (number|Long|null);
            }

            class TimeRemainingCondition implements ITimeRemainingCondition {
                constructor(properties?: WUProtos.Data.Condition.ITimeRemainingCondition);
                public comparison_operator: WUProtos.Enums.ComparisonOperator;
                public target_comparison_value: (number|Long);
                public static encode(message: WUProtos.Data.Condition.ITimeRemainingCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition.TimeRemainingCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition.TimeRemainingCondition;
                public static toObject(message: WUProtos.Data.Condition.TimeRemainingCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IBuffCountCondition {
                target_type?: (string|null);
                comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                target_comparison_value?: (number|null);
                look_for_buffs?: (boolean|null);
                condition_target_type?: (WUProtos.Enums.ConditionTargetType|null);
            }

            class BuffCountCondition implements IBuffCountCondition {
                constructor(properties?: WUProtos.Data.Condition.IBuffCountCondition);
                public target_type: string;
                public comparison_operator: WUProtos.Enums.ComparisonOperator;
                public target_comparison_value: number;
                public look_for_buffs: boolean;
                public condition_target_type: WUProtos.Enums.ConditionTargetType;
                public static encode(message: WUProtos.Data.Condition.IBuffCountCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition.BuffCountCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition.BuffCountCondition;
                public static toObject(message: WUProtos.Data.Condition.BuffCountCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IEnemiesDefeatedCountCondition {
                comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                target_comparison_value?: (number|null);
            }

            class EnemiesDefeatedCountCondition implements IEnemiesDefeatedCountCondition {
                constructor(properties?: WUProtos.Data.Condition.IEnemiesDefeatedCountCondition);
                public comparison_operator: WUProtos.Enums.ComparisonOperator;
                public target_comparison_value: number;
                public static encode(message: WUProtos.Data.Condition.IEnemiesDefeatedCountCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition.EnemiesDefeatedCountCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition.EnemiesDefeatedCountCondition;
                public static toObject(message: WUProtos.Data.Condition.EnemiesDefeatedCountCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IEnemyTagCondition {
                rank_tag?: (string|null);
            }

            class EnemyTagCondition implements IEnemyTagCondition {
                constructor(properties?: WUProtos.Data.Condition.IEnemyTagCondition);
                public rank_tag: string;
                public static encode(message: WUProtos.Data.Condition.IEnemyTagCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition.EnemyTagCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition.EnemyTagCondition;
                public static toObject(message: WUProtos.Data.Condition.EnemyTagCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IWeatherCondition {
                weather_condition?: (WUProtos.Data.Condition.WeatherCondition.WeatherType|null);
            }

            class WeatherCondition implements IWeatherCondition {
                constructor(properties?: WUProtos.Data.Condition.IWeatherCondition);
                public weather_condition: WUProtos.Data.Condition.WeatherCondition.WeatherType;
                public static encode(message: WUProtos.Data.Condition.IWeatherCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition.WeatherCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition.WeatherCondition;
                public static toObject(message: WUProtos.Data.Condition.WeatherCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace WeatherCondition {

                enum WeatherType {
                    UNKNOWN = 0,
                    SUNNY = 1,
                    CLOUDY = 2,
                    RAINING = 3,
                    SNOWING = 4,
                    SLEETING = 5,
                    FULL_MOON = 6,
                    NIGHT_TIME = 7,
                    DAY_TIME = 8,
                    HALF_MOON = 9,
                    QUARTER_MOON = 10
                }
            }

            interface IStatsTagCondition {
                target_type?: (string|null);
                target_stat?: (string|null);
                comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                target_comparison_value?: (number|Long|null);
                target_stat_is_percentage?: (boolean|null);
                condition_target_type?: (WUProtos.Enums.ConditionTargetType|null);
            }

            class StatsTagCondition implements IStatsTagCondition {
                constructor(properties?: WUProtos.Data.Condition.IStatsTagCondition);
                public target_type: string;
                public target_stat: string;
                public comparison_operator: WUProtos.Enums.ComparisonOperator;
                public target_comparison_value: (number|Long);
                public target_stat_is_percentage: boolean;
                public condition_target_type: WUProtos.Enums.ConditionTargetType;
                public static encode(message: WUProtos.Data.Condition.IStatsTagCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Condition.StatsTagCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Condition.StatsTagCondition;
                public static toObject(message: WUProtos.Data.Condition.StatsTagCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface IConditions {
            conds?: (WUProtos.Data.ICondition[]|null);
        }

        class Conditions implements IConditions {
            constructor(properties?: WUProtos.Data.IConditions);
            public conds: WUProtos.Data.ICondition[];
            public static encode(message: WUProtos.Data.IConditions, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Conditions;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Conditions;
            public static toObject(message: WUProtos.Data.Conditions, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface ICurrencyQuantity {
            currency_type?: (string|null);
            quantity?: (number|null);
        }

        class CurrencyQuantity implements ICurrencyQuantity {
            constructor(properties?: WUProtos.Data.ICurrencyQuantity);
            public currency_type: string;
            public quantity: number;
            public static encode(message: WUProtos.Data.ICurrencyQuantity, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.CurrencyQuantity;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.CurrencyQuantity;
            public static toObject(message: WUProtos.Data.CurrencyQuantity, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface ICurrencyUpdate {
            currency_name?: (string|null);
            currency_delta?: (number|null);
            currency_balance?: (number|null);
            fiat_purchased_balance?: (number|null);
        }

        class CurrencyUpdate implements ICurrencyUpdate {
            constructor(properties?: WUProtos.Data.ICurrencyUpdate);
            public currency_name: string;
            public currency_delta: number;
            public currency_balance: number;
            public fiat_purchased_balance: number;
            public static encode(message: WUProtos.Data.ICurrencyUpdate, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.CurrencyUpdate;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.CurrencyUpdate;
            public static toObject(message: WUProtos.Data.CurrencyUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IDataWithMe {
        }

        class DataWithMe implements IDataWithMe {
            constructor(properties?: WUProtos.Data.IDataWithMe);
            public static encode(message: WUProtos.Data.IDataWithMe, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.DataWithMe;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.DataWithMe;
            public static toObject(message: WUProtos.Data.DataWithMe, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace Debug {

            interface IDebugInfo {
                latitude?: (number|null);
                longitude?: (number|null);
            }

            class DebugInfo implements IDebugInfo {
                constructor(properties?: WUProtos.Data.Debug.IDebugInfo);
                public latitude: number;
                public longitude: number;
                public static encode(message: WUProtos.Data.Debug.IDebugInfo, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Debug.DebugInfo;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Debug.DebugInfo;
                public static toObject(message: WUProtos.Data.Debug.DebugInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface IDefaultProfile {
            id?: (string|null);
        }

        class DefaultProfile implements IDefaultProfile {
            constructor(properties?: WUProtos.Data.IDefaultProfile);
            public id: string;
            public static encode(message: WUProtos.Data.IDefaultProfile, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.DefaultProfile;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.DefaultProfile;
            public static toObject(message: WUProtos.Data.DefaultProfile, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IDisplayWeather {
            cloud_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
            rain_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
            wind_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
            snow_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
            fog_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
            wind_direction?: (number|null);
            special_effect_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
        }

        class DisplayWeather implements IDisplayWeather {
            constructor(properties?: WUProtos.Data.IDisplayWeather);
            public cloud_level: WUProtos.Data.DisplayWeather.DisplayLevel;
            public rain_level: WUProtos.Data.DisplayWeather.DisplayLevel;
            public wind_level: WUProtos.Data.DisplayWeather.DisplayLevel;
            public snow_level: WUProtos.Data.DisplayWeather.DisplayLevel;
            public fog_level: WUProtos.Data.DisplayWeather.DisplayLevel;
            public wind_direction: number;
            public special_effect_level: WUProtos.Data.DisplayWeather.DisplayLevel;
            public static encode(message: WUProtos.Data.IDisplayWeather, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.DisplayWeather;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.DisplayWeather;
            public static toObject(message: WUProtos.Data.DisplayWeather, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace DisplayWeather {

            enum DisplayLevel {
                LEVEL_0 = 0,
                LEVEL_1 = 1,
                LEVEL_2 = 2,
                LEVEL_3 = 3
            }
        }

        interface IDistribution {
            count?: (number|Long|null);
            mean?: (number|null);
            sum_of_squared_deviation?: (number|null);
            range?: (WUProtos.Data.Distribution.IRange|null);
            bucket_options?: (WUProtos.Data.Distribution.IBucketOptions|null);
            bucket_counts?: ((number|Long)[]|null);
        }

        class Distribution implements IDistribution {
            constructor(properties?: WUProtos.Data.IDistribution);
            public count: (number|Long);
            public mean: number;
            public sum_of_squared_deviation: number;
            public range?: (WUProtos.Data.Distribution.IRange|null);
            public bucket_options?: (WUProtos.Data.Distribution.IBucketOptions|null);
            public bucket_counts: (number|Long)[];
            public static encode(message: WUProtos.Data.IDistribution, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Distribution;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Distribution;
            public static toObject(message: WUProtos.Data.Distribution, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace Distribution {

            interface IBucketOptions {
                linear_buckets?: (WUProtos.Data.Distribution.ILinearBuckets|null);
                exponential_buckets?: (WUProtos.Data.Distribution.IExponentialBuckets|null);
                explicit_buckets?: (WUProtos.Data.Distribution.IExplicitBuckets|null);
            }

            class BucketOptions implements IBucketOptions {
                constructor(properties?: WUProtos.Data.Distribution.IBucketOptions);
                public linear_buckets?: (WUProtos.Data.Distribution.ILinearBuckets|null);
                public exponential_buckets?: (WUProtos.Data.Distribution.IExponentialBuckets|null);
                public explicit_buckets?: (WUProtos.Data.Distribution.IExplicitBuckets|null);
                public BucketType?: ("linear_buckets"|"exponential_buckets"|"explicit_buckets");
                public static encode(message: WUProtos.Data.Distribution.IBucketOptions, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Distribution.BucketOptions;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Distribution.BucketOptions;
                public static toObject(message: WUProtos.Data.Distribution.BucketOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace BucketOptions {

                interface IExplicitBuckets {
                    bounds?: ((number|Long)[]|null);
                }

                class ExplicitBuckets implements IExplicitBuckets {
                    constructor(properties?: WUProtos.Data.Distribution.BucketOptions.IExplicitBuckets);
                    public bounds: (number|Long)[];
                    public static encode(message: WUProtos.Data.Distribution.BucketOptions.IExplicitBuckets, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Distribution.BucketOptions.ExplicitBuckets;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Distribution.BucketOptions.ExplicitBuckets;
                    public static toObject(message: WUProtos.Data.Distribution.BucketOptions.ExplicitBuckets, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IExponentialBuckets {
                    num_finite_buckets?: (number|Long|null);
                    growth_factor?: (number|null);
                    scale?: (number|null);
                }

                class ExponentialBuckets implements IExponentialBuckets {
                    constructor(properties?: WUProtos.Data.Distribution.BucketOptions.IExponentialBuckets);
                    public num_finite_buckets: (number|Long);
                    public growth_factor: number;
                    public scale: number;
                    public static encode(message: WUProtos.Data.Distribution.BucketOptions.IExponentialBuckets, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Distribution.BucketOptions.ExponentialBuckets;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Distribution.BucketOptions.ExponentialBuckets;
                    public static toObject(message: WUProtos.Data.Distribution.BucketOptions.ExponentialBuckets, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ILinearBuckets {
                    num_finite_buckets?: (number|Long|null);
                    width?: (number|Long|null);
                    offset?: (number|Long|null);
                }

                class LinearBuckets implements ILinearBuckets {
                    constructor(properties?: WUProtos.Data.Distribution.BucketOptions.ILinearBuckets);
                    public num_finite_buckets: (number|Long);
                    public width: (number|Long);
                    public offset: (number|Long);
                    public static encode(message: WUProtos.Data.Distribution.BucketOptions.ILinearBuckets, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Distribution.BucketOptions.LinearBuckets;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Distribution.BucketOptions.LinearBuckets;
                    public static toObject(message: WUProtos.Data.Distribution.BucketOptions.LinearBuckets, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IExplicitBuckets {
                bounds?: ((number|Long)[]|null);
            }

            class ExplicitBuckets implements IExplicitBuckets {
                constructor(properties?: WUProtos.Data.Distribution.IExplicitBuckets);
                public bounds: (number|Long)[];
                public static encode(message: WUProtos.Data.Distribution.IExplicitBuckets, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Distribution.ExplicitBuckets;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Distribution.ExplicitBuckets;
                public static toObject(message: WUProtos.Data.Distribution.ExplicitBuckets, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IExponentialBuckets {
                num_finite_buckets?: (number|Long|null);
                growth_factor?: (number|null);
                scale?: (number|null);
            }

            class ExponentialBuckets implements IExponentialBuckets {
                constructor(properties?: WUProtos.Data.Distribution.IExponentialBuckets);
                public num_finite_buckets: (number|Long);
                public growth_factor: number;
                public scale: number;
                public static encode(message: WUProtos.Data.Distribution.IExponentialBuckets, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Distribution.ExponentialBuckets;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Distribution.ExponentialBuckets;
                public static toObject(message: WUProtos.Data.Distribution.ExponentialBuckets, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ILinearBuckets {
                num_finite_buckets?: (number|Long|null);
                width?: (number|Long|null);
                offset?: (number|Long|null);
            }

            class LinearBuckets implements ILinearBuckets {
                constructor(properties?: WUProtos.Data.Distribution.ILinearBuckets);
                public num_finite_buckets: (number|Long);
                public width: (number|Long);
                public offset: (number|Long);
                public static encode(message: WUProtos.Data.Distribution.ILinearBuckets, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Distribution.LinearBuckets;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Distribution.LinearBuckets;
                public static toObject(message: WUProtos.Data.Distribution.LinearBuckets, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IRange {
                min?: (number|Long|null);
                max?: (number|Long|null);
            }

            class Range implements IRange {
                constructor(properties?: WUProtos.Data.Distribution.IRange);
                public min: (number|Long);
                public max: (number|Long);
                public static encode(message: WUProtos.Data.Distribution.IRange, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Distribution.Range;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Distribution.Range;
                public static toObject(message: WUProtos.Data.Distribution.Range, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface IEmailOpts {
            send_update_emails?: (boolean|null);
            send_wb_marketing_emails?: (boolean|null);
            email_opts_last_updated_ms?: (number|Long|null);
        }

        class EmailOpts implements IEmailOpts {
            constructor(properties?: WUProtos.Data.IEmailOpts);
            public send_update_emails: boolean;
            public send_wb_marketing_emails: boolean;
            public email_opts_last_updated_ms: (number|Long);
            public static encode(message: WUProtos.Data.IEmailOpts, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.EmailOpts;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.EmailOpts;
            public static toObject(message: WUProtos.Data.EmailOpts, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace Encounter {

            interface IEncounterStartStageResult {
                swish?: (WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartSwishStageResult|null);
                combat?: (WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartCombatStageResult|null);
                portkey?: (WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartPortkeyStageResult|null);
            }

            class EncounterStartStageResult implements IEncounterStartStageResult {
                constructor(properties?: WUProtos.Data.Encounter.IEncounterStartStageResult);
                public swish?: (WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartSwishStageResult|null);
                public combat?: (WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartCombatStageResult|null);
                public portkey?: (WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartPortkeyStageResult|null);
                public Type?: ("swish"|"combat"|"portkey");
                public static encode(message: WUProtos.Data.Encounter.IEncounterStartStageResult, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Encounter.EncounterStartStageResult;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Encounter.EncounterStartStageResult;
                public static toObject(message: WUProtos.Data.Encounter.EncounterStartStageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace EncounterStartStageResult {

                interface IEncounterStartSwishStageResult {
                }

                class EncounterStartSwishStageResult implements IEncounterStartSwishStageResult {
                    constructor(properties?: WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartSwishStageResult);
                    public static encode(message: WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartSwishStageResult, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Encounter.EncounterStartStageResult.EncounterStartSwishStageResult;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Encounter.EncounterStartStageResult.EncounterStartSwishStageResult;
                    public static toObject(message: WUProtos.Data.Encounter.EncounterStartStageResult.EncounterStartSwishStageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IEncounterStartPortkeyStageResult {
                }

                class EncounterStartPortkeyStageResult implements IEncounterStartPortkeyStageResult {
                    constructor(properties?: WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartPortkeyStageResult);
                    public static encode(message: WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartPortkeyStageResult, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Encounter.EncounterStartStageResult.EncounterStartPortkeyStageResult;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Encounter.EncounterStartStageResult.EncounterStartPortkeyStageResult;
                    public static toObject(message: WUProtos.Data.Encounter.EncounterStartStageResult.EncounterStartPortkeyStageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IEncounterStartCombatStageResult {
                    hp_max_enemy?: (number|Long|null);
                    enemy_damage_unblocked?: ((number|Long)[]|null);
                    enemy_damage_blocked?: ((number|Long)[]|null);
                    hp_max_player?: (number|Long|null);
                    player_damage_per_energy?: ({ [k: string]: (number|Long) }|null);
                    player_crit_multiplier?: (number|null);
                }

                class EncounterStartCombatStageResult implements IEncounterStartCombatStageResult {
                    constructor(properties?: WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartCombatStageResult);
                    public hp_max_enemy: (number|Long);
                    public enemy_damage_unblocked: (number|Long)[];
                    public enemy_damage_blocked: (number|Long)[];
                    public hp_max_player: (number|Long);
                    public player_damage_per_energy: { [k: string]: (number|Long) };
                    public player_crit_multiplier: number;
                    public static encode(message: WUProtos.Data.Encounter.EncounterStartStageResult.IEncounterStartCombatStageResult, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Encounter.EncounterStartStageResult.EncounterStartCombatStageResult;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Encounter.EncounterStartStageResult.EncounterStartCombatStageResult;
                    public static toObject(message: WUProtos.Data.Encounter.EncounterStartStageResult.EncounterStartCombatStageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        namespace Event {

            interface IChannelAuthEventParams {
                status?: (number|null);
            }

            class ChannelAuthEventParams implements IChannelAuthEventParams {
                constructor(properties?: WUProtos.Data.Event.IChannelAuthEventParams);
                public status: number;
                public static encode(message: WUProtos.Data.Event.IChannelAuthEventParams, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Event.ChannelAuthEventParams;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Event.ChannelAuthEventParams;
                public static toObject(message: WUProtos.Data.Event.ChannelAuthEventParams, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDownstreamActionEventParams {
                methods?: (number[]|null);
                payloads?: (Uint8Array[]|null);
                ids?: ((number|Long)[]|null);
            }

            class DownstreamActionEventParams implements IDownstreamActionEventParams {
                constructor(properties?: WUProtos.Data.Event.IDownstreamActionEventParams);
                public methods: number[];
                public payloads: Uint8Array[];
                public ids: (number|Long)[];
                public static encode(message: WUProtos.Data.Event.IDownstreamActionEventParams, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Event.DownstreamActionEventParams;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Event.DownstreamActionEventParams;
                public static toObject(message: WUProtos.Data.Event.DownstreamActionEventParams, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IGoogleAuthEventParams {
                payload?: (string|null);
                account_name?: (string|null);
            }

            class GoogleAuthEventParams implements IGoogleAuthEventParams {
                constructor(properties?: WUProtos.Data.Event.IGoogleAuthEventParams);
                public payload: string;
                public account_name: string;
                public static encode(message: WUProtos.Data.Event.IGoogleAuthEventParams, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Event.GoogleAuthEventParams;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Event.GoogleAuthEventParams;
                public static toObject(message: WUProtos.Data.Event.GoogleAuthEventParams, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ILocationUpdateEventParams {
                latitude_deg?: (number|null);
                longitude_deg?: (number|null);
                altitude_m?: (number|null);
                accuracy_m?: (number|null);
                timestamp_s?: (number|null);
                provider_status?: (number|null);
                location_type?: (number|null);
            }

            class LocationUpdateEventParams implements ILocationUpdateEventParams {
                constructor(properties?: WUProtos.Data.Event.ILocationUpdateEventParams);
                public latitude_deg: number;
                public longitude_deg: number;
                public altitude_m: number;
                public accuracy_m: number;
                public timestamp_s: number;
                public provider_status: number;
                public location_type: number;
                public static encode(message: WUProtos.Data.Event.ILocationUpdateEventParams, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Event.LocationUpdateEventParams;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Event.LocationUpdateEventParams;
                public static toObject(message: WUProtos.Data.Event.LocationUpdateEventParams, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IRpcResponseEventParams {
                rpc_id?: (number|null);
                status?: (number|null);
                payloads?: (Uint8Array[]|null);
            }

            class RpcResponseEventParams implements IRpcResponseEventParams {
                constructor(properties?: WUProtos.Data.Event.IRpcResponseEventParams);
                public rpc_id: number;
                public status: number;
                public payloads: Uint8Array[];
                public static encode(message: WUProtos.Data.Event.IRpcResponseEventParams, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Event.RpcResponseEventParams;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Event.RpcResponseEventParams;
                public static toObject(message: WUProtos.Data.Event.RpcResponseEventParams, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ISyncRequestedEventParams {
            }

            class SyncRequestedEventParams implements ISyncRequestedEventParams {
                constructor(properties?: WUProtos.Data.Event.ISyncRequestedEventParams);
                public static encode(message: WUProtos.Data.Event.ISyncRequestedEventParams, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Event.SyncRequestedEventParams;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Event.SyncRequestedEventParams;
                public static toObject(message: WUProtos.Data.Event.SyncRequestedEventParams, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface IFlooNetworkFortressStatistics {
            points_per_team?: ({ [k: string]: (number|Long) }|null);
            electoral_votes?: (number|Long|null);
            owning_team_id?: (string|null);
        }

        class FlooNetworkFortressStatistics implements IFlooNetworkFortressStatistics {
            constructor(properties?: WUProtos.Data.IFlooNetworkFortressStatistics);
            public points_per_team: { [k: string]: (number|Long) };
            public electoral_votes: (number|Long);
            public owning_team_id: string;
            public static encode(message: WUProtos.Data.IFlooNetworkFortressStatistics, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.FlooNetworkFortressStatistics;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.FlooNetworkFortressStatistics;
            public static toObject(message: WUProtos.Data.FlooNetworkFortressStatistics, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IFortressCooldownData {
            cooldown_utc_timestamp?: (number|Long|null);
            plays_left?: (number|null);
        }

        class FortressCooldownData implements IFortressCooldownData {
            constructor(properties?: WUProtos.Data.IFortressCooldownData);
            public cooldown_utc_timestamp: (number|Long);
            public plays_left: number;
            public static encode(message: WUProtos.Data.IFortressCooldownData, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.FortressCooldownData;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.FortressCooldownData;
            public static toObject(message: WUProtos.Data.FortressCooldownData, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IFriendVisibleData {
            last_foundable_returned_id?: (string|null);
            last_foundable_returned_timestamp?: (number|Long|null);
        }

        class FriendVisibleData implements IFriendVisibleData {
            constructor(properties?: WUProtos.Data.IFriendVisibleData);
            public last_foundable_returned_id: string;
            public last_foundable_returned_timestamp: (number|Long);
            public static encode(message: WUProtos.Data.IFriendVisibleData, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.FriendVisibleData;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.FriendVisibleData;
            public static toObject(message: WUProtos.Data.FriendVisibleData, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IGameDataWrapper {
            messages?: (WUProtos.Data.IGmTemplate[]|null);
            basis_batch_id?: (number|Long|null);
            environment?: (number|Long|null);
        }

        class GameDataWrapper implements IGameDataWrapper {
            constructor(properties?: WUProtos.Data.IGameDataWrapper);
            public messages: WUProtos.Data.IGmTemplate[];
            public basis_batch_id: (number|Long);
            public environment: (number|Long);
            public static encode(message: WUProtos.Data.IGameDataWrapper, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GameDataWrapper;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.GameDataWrapper;
            public static toObject(message: WUProtos.Data.GameDataWrapper, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IGameEntity {
            poi?: (WUProtos.Data.Client.IClientMapPoi|null);
            trace?: (WUProtos.Data.GameEntity.IClientMapTrace|null);
            landmark?: (WUProtos.Data.GameEntity.IClientMapLandmark|null);
            potion_ingredient?: (WUProtos.Data.GameEntity.IClientMapPotionIngredient|null);
            weather?: (WUProtos.Data.GameEntity.IClientWeather|null);
            environment_tags?: (WUProtos.Data.GameEntity.IClientEnvironmentTags|null);
        }

        class GameEntity implements IGameEntity {
            constructor(properties?: WUProtos.Data.IGameEntity);
            public poi?: (WUProtos.Data.Client.IClientMapPoi|null);
            public trace?: (WUProtos.Data.GameEntity.IClientMapTrace|null);
            public landmark?: (WUProtos.Data.GameEntity.IClientMapLandmark|null);
            public potion_ingredient?: (WUProtos.Data.GameEntity.IClientMapPotionIngredient|null);
            public weather?: (WUProtos.Data.GameEntity.IClientWeather|null);
            public environment_tags?: (WUProtos.Data.GameEntity.IClientEnvironmentTags|null);
            public Type?: ("poi"|"trace"|"landmark"|"potion_ingredient"|"weather"|"environment_tags");
            public static encode(message: WUProtos.Data.IGameEntity, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GameEntity;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.GameEntity;
            public static toObject(message: WUProtos.Data.GameEntity, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace GameEntity {

            interface IClientWeather {
                s2_cell_id?: (number|Long|null);
                display_weather?: (WUProtos.Data.IDisplayWeather|null);
                gameplay_weather?: (WUProtos.Data.IGameplayWeather|null);
                alerts?: (WUProtos.Data.WeatherAlertSettings.IWeatherAlert[]|null);
            }

            class ClientWeather implements IClientWeather {
                constructor(properties?: WUProtos.Data.GameEntity.IClientWeather);
                public s2_cell_id: (number|Long);
                public display_weather?: (WUProtos.Data.IDisplayWeather|null);
                public gameplay_weather?: (WUProtos.Data.IGameplayWeather|null);
                public alerts: WUProtos.Data.WeatherAlertSettings.IWeatherAlert[];
                public static encode(message: WUProtos.Data.GameEntity.IClientWeather, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GameEntity.ClientWeather;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GameEntity.ClientWeather;
                public static toObject(message: WUProtos.Data.GameEntity.ClientWeather, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientMapTrace {
                encounter_gmt_id?: (string|null);
                latitude?: (number|null);
                longitude?: (number|null);
                encounter_ticket?: (Uint8Array|null);
                source?: (WUProtos.Data.GameEntity.ClientMapTrace.Source|null);
                expiry_time_ms?: (number|Long|null);
            }

            class ClientMapTrace implements IClientMapTrace {
                constructor(properties?: WUProtos.Data.GameEntity.IClientMapTrace);
                public encounter_gmt_id: string;
                public latitude: number;
                public longitude: number;
                public encounter_ticket: Uint8Array;
                public source: WUProtos.Data.GameEntity.ClientMapTrace.Source;
                public expiry_time_ms: (number|Long);
                public static encode(message: WUProtos.Data.GameEntity.IClientMapTrace, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GameEntity.ClientMapTrace;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GameEntity.ClientMapTrace;
                public static toObject(message: WUProtos.Data.GameEntity.ClientMapTrace, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientMapTrace {

                enum Source {
                    UNKNOWN = 0,
                    STANDARD = 1,
                    DARK_DETECTOR = 2
                }
            }

            interface IClientMapLandmark {
                collection_family_id?: (string|null);
                poi_latitude?: (number|null);
                poi_longitude?: (number|null);
                border_latitude?: (number[]|null);
                border_longitude?: (number[]|null);
            }

            class ClientMapLandmark implements IClientMapLandmark {
                constructor(properties?: WUProtos.Data.GameEntity.IClientMapLandmark);
                public collection_family_id: string;
                public poi_latitude: number;
                public poi_longitude: number;
                public border_latitude: number[];
                public border_longitude: number[];
                public static encode(message: WUProtos.Data.GameEntity.IClientMapLandmark, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GameEntity.ClientMapLandmark;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GameEntity.ClientMapLandmark;
                public static toObject(message: WUProtos.Data.GameEntity.ClientMapLandmark, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientMapPotionIngredient {
                ingredient_gmt_id?: (string|null);
                latitude?: (number|null);
                longitude?: (number|null);
                ticket?: (Uint8Array|null);
                expiry_time_ms?: (number|Long|null);
                source?: (WUProtos.Data.GameEntity.ClientMapPotionIngredient.Source|null);
            }

            class ClientMapPotionIngredient implements IClientMapPotionIngredient {
                constructor(properties?: WUProtos.Data.GameEntity.IClientMapPotionIngredient);
                public ingredient_gmt_id: string;
                public latitude: number;
                public longitude: number;
                public ticket: Uint8Array;
                public expiry_time_ms: (number|Long);
                public source: WUProtos.Data.GameEntity.ClientMapPotionIngredient.Source;
                public static encode(message: WUProtos.Data.GameEntity.IClientMapPotionIngredient, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GameEntity.ClientMapPotionIngredient;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GameEntity.ClientMapPotionIngredient;
                public static toObject(message: WUProtos.Data.GameEntity.ClientMapPotionIngredient, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientMapPotionIngredient {

                enum Source {
                    UNKNOWN = 0,
                    STANDARD = 1,
                    SOCIAL_GROWING = 2
                }
            }

            interface IClientEnvironmentTags {
                day_night?: (WUProtos.Data.GameEntity.ClientEnvironmentTags.DayNightTag|null);
                moon_phase?: (WUProtos.Data.GameEntity.ClientEnvironmentTags.MoonPhaseTag|null);
            }

            class ClientEnvironmentTags implements IClientEnvironmentTags {
                constructor(properties?: WUProtos.Data.GameEntity.IClientEnvironmentTags);
                public day_night: WUProtos.Data.GameEntity.ClientEnvironmentTags.DayNightTag;
                public moon_phase: WUProtos.Data.GameEntity.ClientEnvironmentTags.MoonPhaseTag;
                public static encode(message: WUProtos.Data.GameEntity.IClientEnvironmentTags, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GameEntity.ClientEnvironmentTags;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GameEntity.ClientEnvironmentTags;
                public static toObject(message: WUProtos.Data.GameEntity.ClientEnvironmentTags, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientEnvironmentTags {

                enum DayNightTag {
                    ENV_DAY_NIGHT_UNSET = 0,
                    ENV_DAY = 1,
                    ENV_NIGHT = 2,
                    ENV_DAWN = 3,
                    ENV_DUSK = 4
                }

                enum MoonPhaseTag {
                    ENV_MOON_PHASE_UNSET = 0,
                    ENV_NEW = 1,
                    ENV_FIRST_QUARTER = 2,
                    ENV_FULL = 3,
                    ENV_THIRD_QUARTER = 4,
                    ENV_WAXING_CRESCENT = 5,
                    ENV_WAXING_GIBBOUS = 6,
                    ENV_WANING_GIBBOUS = 7,
                    ENV_WANING_CRESCENT = 8
                }
            }
        }

        interface IGameplayWeather {
            gameplay_condition?: (WUProtos.Data.GameplayWeather.WeatherCondition|null);
        }

        class GameplayWeather implements IGameplayWeather {
            constructor(properties?: WUProtos.Data.IGameplayWeather);
            public gameplay_condition: WUProtos.Data.GameplayWeather.WeatherCondition;
            public static encode(message: WUProtos.Data.IGameplayWeather, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GameplayWeather;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.GameplayWeather;
            public static toObject(message: WUProtos.Data.GameplayWeather, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace GameplayWeather {

            enum WeatherCondition {
                NONE = 0,
                CLEAR = 1,
                RAINY = 2,
                PARTLY_CLOUDY = 3,
                OVERCAST = 4,
                WINDY = 5,
                SNOW = 6,
                FOG = 7
            }
        }

        interface IGmTemplate {
            collection_family?: (WUProtos.Data.Collection.ICollectionFamily|null);
            collection_item?: (WUProtos.Data.GmTemplate.ICollectionItem|null);
            encounter?: (WUProtos.Data.GmTemplate.IEncounter|null);
            encounter_obstacle?: (WUProtos.Data.GmTemplate.IEncounterObstacle|null);
            spell?: (WUProtos.Data.GmTemplate.ISpell|null);
            vault_item?: (WUProtos.Data.GmTemplate.IVaultItem|null);
            game_config?: (WUProtos.Data.GmTemplate.IGameConfig|null);
            player_level?: (WUProtos.Data.GmTemplate.IPlayerLevel|null);
            store_pack?: (WUProtos.Data.IStorePack|null);
            walkbox_template?: (WUProtos.Data.GmTemplate.IWalkboxTemplate|null);
            feature_flag?: (WUProtos.Data.GmTemplate.IFeatureFlag|null);
            portkey?: (WUProtos.Data.GmTemplate.IPortkey|null);
            buff?: (WUProtos.Data.GmTemplate.IBuff|null);
            fortress_template?: (WUProtos.Data.GmTemplate.IFortressTemplate|null);
            chamber_template?: (WUProtos.Data.GmTemplate.IChamberTemplate|null);
            quality_level?: (WUProtos.Data.IQualityLevel|null);
            protego_pattern?: (WUProtos.Data.GmTemplate.IProtegoPattern|null);
            collection_page?: (WUProtos.Data.GmTemplate.ICollectionPage|null);
            team_control?: (WUProtos.Data.GmTemplate.ITeamControl|null);
            store_config?: (WUProtos.Data.GmTemplate.IStoreConfig|null);
            store_subcategory?: (WUProtos.Data.GmTemplate.IStoreSubcategory|null);
            haptic?: (WUProtos.Data.GmTemplate.IHaptic|null);
            encounter_type?: (WUProtos.Data.GmTemplate.IEncounterType|null);
            challenge_spawn_logic?: (WUProtos.Data.GmTemplate.IChallengeSpawnLogic|null);
            profession?: (WUProtos.Data.GmTemplate.IProfession|null);
            bonus_category?: (WUProtos.Data.GmTemplate.IBonusCategory|null);
            vault_category?: (WUProtos.Data.GmTemplate.IVaultCategory|null);
            profile_config?: (WUProtos.Data.IProfileConfig|null);
            collection_family_rank_table?: (WUProtos.Data.GmTemplate.ICollectionFamilyRankTable|null);
            map_ingredient?: (WUProtos.Data.GmTemplate.IMapIngredient|null);
            map_ability?: (WUProtos.Data.GmTemplate.IMapAbility|null);
            recipe?: (WUProtos.Data.GmTemplate.IRecipe|null);
            challenge_bonus?: (WUProtos.Data.Challenge.IChallengeBonus|null);
            storyboard?: (WUProtos.Data.GmTemplate.IStoryboard|null);
            master_note?: (WUProtos.Data.GmTemplate.IMasterNote|null);
            cauldron?: (WUProtos.Data.GmTemplate.ICauldron|null);
            rpgstat?: (WUProtos.Data.GmTemplate.IRpgstat|null);
            rpgstats_block?: (WUProtos.Data.GmTemplate.IRpgstatsBlock|null);
            selfie_avatar_asset?: (WUProtos.Data.GmTemplate.ISelfieAvatarAsset|null);
            outpost_template?: (WUProtos.Data.GmTemplate.IOutpostTemplate|null);
            daily_reward_monthly_schedule?: (WUProtos.Data.GmTemplate.IDailyRewardMonthlySchedule|null);
            quest?: (WUProtos.Data.GmTemplate.IQuest|null);
            deep_link?: (WUProtos.Data.GmTemplate.IDeepLink|null);
            event?: (WUProtos.Data.GmTemplate.IEvent|null);
            greenhouse_template?: (WUProtos.Data.GmTemplate.IGreenhouseTemplate|null);
            version?: (WUProtos.Data.GmTemplate.IVersion|null);
        }

        class GmTemplate implements IGmTemplate {
            constructor(properties?: WUProtos.Data.IGmTemplate);
            public collection_family?: (WUProtos.Data.Collection.ICollectionFamily|null);
            public collection_item?: (WUProtos.Data.GmTemplate.ICollectionItem|null);
            public encounter?: (WUProtos.Data.GmTemplate.IEncounter|null);
            public encounter_obstacle?: (WUProtos.Data.GmTemplate.IEncounterObstacle|null);
            public spell?: (WUProtos.Data.GmTemplate.ISpell|null);
            public vault_item?: (WUProtos.Data.GmTemplate.IVaultItem|null);
            public game_config?: (WUProtos.Data.GmTemplate.IGameConfig|null);
            public player_level?: (WUProtos.Data.GmTemplate.IPlayerLevel|null);
            public store_pack?: (WUProtos.Data.IStorePack|null);
            public walkbox_template?: (WUProtos.Data.GmTemplate.IWalkboxTemplate|null);
            public feature_flag?: (WUProtos.Data.GmTemplate.IFeatureFlag|null);
            public portkey?: (WUProtos.Data.GmTemplate.IPortkey|null);
            public buff?: (WUProtos.Data.GmTemplate.IBuff|null);
            public fortress_template?: (WUProtos.Data.GmTemplate.IFortressTemplate|null);
            public chamber_template?: (WUProtos.Data.GmTemplate.IChamberTemplate|null);
            public quality_level?: (WUProtos.Data.IQualityLevel|null);
            public protego_pattern?: (WUProtos.Data.GmTemplate.IProtegoPattern|null);
            public collection_page?: (WUProtos.Data.GmTemplate.ICollectionPage|null);
            public team_control?: (WUProtos.Data.GmTemplate.ITeamControl|null);
            public store_config?: (WUProtos.Data.GmTemplate.IStoreConfig|null);
            public store_subcategory?: (WUProtos.Data.GmTemplate.IStoreSubcategory|null);
            public haptic?: (WUProtos.Data.GmTemplate.IHaptic|null);
            public encounter_type?: (WUProtos.Data.GmTemplate.IEncounterType|null);
            public challenge_spawn_logic?: (WUProtos.Data.GmTemplate.IChallengeSpawnLogic|null);
            public profession?: (WUProtos.Data.GmTemplate.IProfession|null);
            public bonus_category?: (WUProtos.Data.GmTemplate.IBonusCategory|null);
            public vault_category?: (WUProtos.Data.GmTemplate.IVaultCategory|null);
            public profile_config?: (WUProtos.Data.IProfileConfig|null);
            public collection_family_rank_table?: (WUProtos.Data.GmTemplate.ICollectionFamilyRankTable|null);
            public map_ingredient?: (WUProtos.Data.GmTemplate.IMapIngredient|null);
            public map_ability?: (WUProtos.Data.GmTemplate.IMapAbility|null);
            public recipe?: (WUProtos.Data.GmTemplate.IRecipe|null);
            public challenge_bonus?: (WUProtos.Data.Challenge.IChallengeBonus|null);
            public storyboard?: (WUProtos.Data.GmTemplate.IStoryboard|null);
            public master_note?: (WUProtos.Data.GmTemplate.IMasterNote|null);
            public cauldron?: (WUProtos.Data.GmTemplate.ICauldron|null);
            public rpgstat?: (WUProtos.Data.GmTemplate.IRpgstat|null);
            public rpgstats_block?: (WUProtos.Data.GmTemplate.IRpgstatsBlock|null);
            public selfie_avatar_asset?: (WUProtos.Data.GmTemplate.ISelfieAvatarAsset|null);
            public outpost_template?: (WUProtos.Data.GmTemplate.IOutpostTemplate|null);
            public daily_reward_monthly_schedule?: (WUProtos.Data.GmTemplate.IDailyRewardMonthlySchedule|null);
            public quest?: (WUProtos.Data.GmTemplate.IQuest|null);
            public deep_link?: (WUProtos.Data.GmTemplate.IDeepLink|null);
            public event?: (WUProtos.Data.GmTemplate.IEvent|null);
            public greenhouse_template?: (WUProtos.Data.GmTemplate.IGreenhouseTemplate|null);
            public version?: (WUProtos.Data.GmTemplate.IVersion|null);
            public MessageType?: ("collection_family"|"collection_item"|"encounter"|"encounter_obstacle"|"spell"|"vault_item"|"game_config"|"player_level"|"store_pack"|"walkbox_template"|"feature_flag"|"portkey"|"buff"|"fortress_template"|"chamber_template"|"quality_level"|"protego_pattern"|"collection_page"|"team_control"|"store_config"|"store_subcategory"|"haptic"|"encounter_type"|"challenge_spawn_logic"|"profession"|"bonus_category"|"vault_category"|"profile_config"|"collection_family_rank_table"|"map_ingredient"|"map_ability"|"recipe"|"challenge_bonus"|"storyboard"|"master_note"|"cauldron"|"rpgstat"|"rpgstats_block"|"selfie_avatar_asset"|"outpost_template"|"daily_reward_monthly_schedule"|"quest"|"deep_link"|"event"|"greenhouse_template"|"version");
            public static encode(message: WUProtos.Data.IGmTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate;
            public static toObject(message: WUProtos.Data.GmTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace GmTemplate {

            interface IQuest {
                id?: (string|null);
                type?: (WUProtos.Data.GmTemplate.Quest.QuestType|null);
                tasks?: (WUProtos.Data.GmTemplate.Quest.IQuestTask[]|null);
                rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                version?: (number|null);
                chain_position?: (number|null);
                chain_total?: (number|null);
                start_requirements?: (WUProtos.Data.IRequirements[]|null);
            }

            class Quest implements IQuest {
                constructor(properties?: WUProtos.Data.GmTemplate.IQuest);
                public id: string;
                public type: WUProtos.Data.GmTemplate.Quest.QuestType;
                public tasks: WUProtos.Data.GmTemplate.Quest.IQuestTask[];
                public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public version: number;
                public chain_position: number;
                public chain_total: number;
                public start_requirements: WUProtos.Data.IRequirements[];
                public static encode(message: WUProtos.Data.GmTemplate.IQuest, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Quest;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Quest;
                public static toObject(message: WUProtos.Data.GmTemplate.Quest, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace Quest {

                enum ENCOUNTER_DIFFICULTY {
                    UNSET = 0,
                    LOW = 1,
                    MEDIUM = 2,
                    HIGH = 3,
                    SEVERE = 4,
                    EMERGENCY = 5
                }

                enum QuestType {
                    QUEST_TYPE_UNKNOWN = 0,
                    QUEST_TYPE_NONREPEATABLE = 1,
                    QUEST_TYPE_REPEATABLE = 2,
                    QUEST_TYPE_DAILY = 3,
                    QUEST_TYPE_EVENT = 4,
                    QUEST_TYPE_ACHIEVEMENT = 5,
                    QUEST_TYPE_EVENT_CHAIN = 6
                }

                interface IQuestTask {
                    req_task?: (WUProtos.Data.GmTemplate.Quest.QuestTask.IRequirementsQuestTask|null);
                    hook_task?: (WUProtos.Data.IHookQuestTask|null);
                }

                class QuestTask implements IQuestTask {
                    constructor(properties?: WUProtos.Data.GmTemplate.Quest.IQuestTask);
                    public req_task?: (WUProtos.Data.GmTemplate.Quest.QuestTask.IRequirementsQuestTask|null);
                    public hook_task?: (WUProtos.Data.IHookQuestTask|null);
                    public Type?: ("req_task"|"hook_task");
                    public static encode(message: WUProtos.Data.GmTemplate.Quest.IQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Quest.QuestTask;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Quest.QuestTask;
                    public static toObject(message: WUProtos.Data.GmTemplate.Quest.QuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace QuestTask {

                    interface IRequirementsQuestTask {
                        reqs?: (WUProtos.Data.IRequirements|null);
                    }

                    class RequirementsQuestTask implements IRequirementsQuestTask {
                        constructor(properties?: WUProtos.Data.GmTemplate.Quest.QuestTask.IRequirementsQuestTask);
                        public reqs?: (WUProtos.Data.IRequirements|null);
                        public static encode(message: WUProtos.Data.GmTemplate.Quest.QuestTask.IRequirementsQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Quest.QuestTask.RequirementsQuestTask;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Quest.QuestTask.RequirementsQuestTask;
                        public static toObject(message: WUProtos.Data.GmTemplate.Quest.QuestTask.RequirementsQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            interface IVaultItem {
                id?: (string|null);
                currency_item?: (WUProtos.Data.GmTemplate.VaultItem.ICurrencyVaultItem|null);
                stamina_item?: (WUProtos.Data.GmTemplate.VaultItem.IStaminaVaultItem|null);
                detector_item?: (WUProtos.Data.GmTemplate.VaultItem.IDarkDetectorVaultItem|null);
                container_item?: (WUProtos.Data.GmTemplate.VaultItem.IContainerVaultItem|null);
                runestone_item?: (WUProtos.Data.GmTemplate.VaultItem.IRunestoneVaultItem|null);
                potion_item?: (WUProtos.Data.GmTemplate.VaultItem.IPotionVaultItem|null);
                potion_ingredient?: (WUProtos.Data.GmTemplate.VaultItem.IPotionIngredientVaultItem|null);
                energy_item?: (WUProtos.Data.GmTemplate.VaultItem.IEnergyVaultItem|null);
                cauldron_time_item?: (WUProtos.Data.GmTemplate.VaultItem.ICauldronTimeItem|null);
                pot_time_item?: (WUProtos.Data.GmTemplate.VaultItem.IPotTimeItem|null);
                cap?: (number|Long|null);
                relative_value?: (number|null);
                vault_category_gmt_id?: (string|null);
            }

            class VaultItem implements IVaultItem {
                constructor(properties?: WUProtos.Data.GmTemplate.IVaultItem);
                public id: string;
                public currency_item?: (WUProtos.Data.GmTemplate.VaultItem.ICurrencyVaultItem|null);
                public stamina_item?: (WUProtos.Data.GmTemplate.VaultItem.IStaminaVaultItem|null);
                public detector_item?: (WUProtos.Data.GmTemplate.VaultItem.IDarkDetectorVaultItem|null);
                public container_item?: (WUProtos.Data.GmTemplate.VaultItem.IContainerVaultItem|null);
                public runestone_item?: (WUProtos.Data.GmTemplate.VaultItem.IRunestoneVaultItem|null);
                public potion_item?: (WUProtos.Data.GmTemplate.VaultItem.IPotionVaultItem|null);
                public potion_ingredient?: (WUProtos.Data.GmTemplate.VaultItem.IPotionIngredientVaultItem|null);
                public energy_item?: (WUProtos.Data.GmTemplate.VaultItem.IEnergyVaultItem|null);
                public cauldron_time_item?: (WUProtos.Data.GmTemplate.VaultItem.ICauldronTimeItem|null);
                public pot_time_item?: (WUProtos.Data.GmTemplate.VaultItem.IPotTimeItem|null);
                public cap: (number|Long);
                public relative_value: number;
                public vault_category_gmt_id: string;
                public VaultItemType?: ("currency_item"|"stamina_item"|"detector_item"|"container_item"|"runestone_item"|"potion_item"|"potion_ingredient"|"energy_item"|"cauldron_time_item"|"pot_time_item");
                public static encode(message: WUProtos.Data.GmTemplate.IVaultItem, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultItem;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultItem;
                public static toObject(message: WUProtos.Data.GmTemplate.VaultItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace VaultItem {

                interface IRunestoneVaultItem {
                    quality?: (number|null);
                    is_boss?: (boolean|null);
                    collection_family_gmt_id?: (string|null);
                }

                class RunestoneVaultItem implements IRunestoneVaultItem {
                    constructor(properties?: WUProtos.Data.GmTemplate.VaultItem.IRunestoneVaultItem);
                    public quality: number;
                    public is_boss: boolean;
                    public collection_family_gmt_id: string;
                    public static encode(message: WUProtos.Data.GmTemplate.VaultItem.IRunestoneVaultItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultItem.RunestoneVaultItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultItem.RunestoneVaultItem;
                    public static toObject(message: WUProtos.Data.GmTemplate.VaultItem.RunestoneVaultItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                enum PotionStateEnum {
                    usable = 0,
                    map_unusable = 1,
                    potion_active = 2,
                    stronger_active = 3,
                    hpalready_full = 4,
                    focus_already_full = 5
                }

                interface ICauldronTimeItem {
                    availability_time?: (number|Long|null);
                }

                class CauldronTimeItem implements ICauldronTimeItem {
                    constructor(properties?: WUProtos.Data.GmTemplate.VaultItem.ICauldronTimeItem);
                    public availability_time: (number|Long);
                    public static encode(message: WUProtos.Data.GmTemplate.VaultItem.ICauldronTimeItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultItem.CauldronTimeItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultItem.CauldronTimeItem;
                    public static toObject(message: WUProtos.Data.GmTemplate.VaultItem.CauldronTimeItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPotionIngredientVaultItem {
                    cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                }

                class PotionIngredientVaultItem implements IPotionIngredientVaultItem {
                    constructor(properties?: WUProtos.Data.GmTemplate.VaultItem.IPotionIngredientVaultItem);
                    public cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public static encode(message: WUProtos.Data.GmTemplate.VaultItem.IPotionIngredientVaultItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultItem.PotionIngredientVaultItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultItem.PotionIngredientVaultItem;
                    public static toObject(message: WUProtos.Data.GmTemplate.VaultItem.PotionIngredientVaultItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPotionVaultItem {
                    consumable_scenario?: (WUProtos.Data.GmTemplate.VaultItem.PotionVaultItem.PotionConsumableScenario[]|null);
                    applied_buff_gmt_id?: (string[]|null);
                }

                class PotionVaultItem implements IPotionVaultItem {
                    constructor(properties?: WUProtos.Data.GmTemplate.VaultItem.IPotionVaultItem);
                    public consumable_scenario: WUProtos.Data.GmTemplate.VaultItem.PotionVaultItem.PotionConsumableScenario[];
                    public applied_buff_gmt_id: string[];
                    public static encode(message: WUProtos.Data.GmTemplate.VaultItem.IPotionVaultItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultItem.PotionVaultItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultItem.PotionVaultItem;
                    public static toObject(message: WUProtos.Data.GmTemplate.VaultItem.PotionVaultItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace PotionVaultItem {

                    enum PotionConsumableScenario {
                        UNKNOWN_CONSUMABLE_SCENARIO = 0,
                        OVERWORLD = 1,
                        ENCOUNTER = 2,
                        SWISH_ENCOUNTER = 3,
                        COMBAT_ENCOUNTER = 4,
                        WC_ENCOUNTER = 5
                    }
                }

                interface IContainerVaultItem {
                    contents?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    auto_consume?: (boolean|null);
                }

                class ContainerVaultItem implements IContainerVaultItem {
                    constructor(properties?: WUProtos.Data.GmTemplate.VaultItem.IContainerVaultItem);
                    public contents?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public auto_consume: boolean;
                    public static encode(message: WUProtos.Data.GmTemplate.VaultItem.IContainerVaultItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultItem.ContainerVaultItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultItem.ContainerVaultItem;
                    public static toObject(message: WUProtos.Data.GmTemplate.VaultItem.ContainerVaultItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICurrencyVaultItem {
                }

                class CurrencyVaultItem implements ICurrencyVaultItem {
                    constructor(properties?: WUProtos.Data.GmTemplate.VaultItem.ICurrencyVaultItem);
                    public static encode(message: WUProtos.Data.GmTemplate.VaultItem.ICurrencyVaultItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultItem.CurrencyVaultItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultItem.CurrencyVaultItem;
                    public static toObject(message: WUProtos.Data.GmTemplate.VaultItem.CurrencyVaultItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDarkDetectorVaultItem {
                    duration?: (number|Long|null);
                }

                class DarkDetectorVaultItem implements IDarkDetectorVaultItem {
                    constructor(properties?: WUProtos.Data.GmTemplate.VaultItem.IDarkDetectorVaultItem);
                    public duration: (number|Long);
                    public static encode(message: WUProtos.Data.GmTemplate.VaultItem.IDarkDetectorVaultItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultItem.DarkDetectorVaultItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultItem.DarkDetectorVaultItem;
                    public static toObject(message: WUProtos.Data.GmTemplate.VaultItem.DarkDetectorVaultItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IEnergyVaultItem {
                    impact?: (number|null);
                    spell_effect?: (number|null);
                }

                class EnergyVaultItem implements IEnergyVaultItem {
                    constructor(properties?: WUProtos.Data.GmTemplate.VaultItem.IEnergyVaultItem);
                    public impact: number;
                    public spell_effect: number;
                    public static encode(message: WUProtos.Data.GmTemplate.VaultItem.IEnergyVaultItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultItem.EnergyVaultItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultItem.EnergyVaultItem;
                    public static toObject(message: WUProtos.Data.GmTemplate.VaultItem.EnergyVaultItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IStaminaVaultItem {
                    impact?: (number|null);
                    spell_effect?: (number|null);
                }

                class StaminaVaultItem implements IStaminaVaultItem {
                    constructor(properties?: WUProtos.Data.GmTemplate.VaultItem.IStaminaVaultItem);
                    public impact: number;
                    public spell_effect: number;
                    public static encode(message: WUProtos.Data.GmTemplate.VaultItem.IStaminaVaultItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultItem.StaminaVaultItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultItem.StaminaVaultItem;
                    public static toObject(message: WUProtos.Data.GmTemplate.VaultItem.StaminaVaultItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPotTimeItem {
                    availability_time?: (number|Long|null);
                }

                class PotTimeItem implements IPotTimeItem {
                    constructor(properties?: WUProtos.Data.GmTemplate.VaultItem.IPotTimeItem);
                    public availability_time: (number|Long);
                    public static encode(message: WUProtos.Data.GmTemplate.VaultItem.IPotTimeItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultItem.PotTimeItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultItem.PotTimeItem;
                    public static toObject(message: WUProtos.Data.GmTemplate.VaultItem.PotTimeItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IGameConfig {
                id?: (string|null);
                pickup_range?: (number|null);
                map_update_rate?: (number|null);
                map_event_update_rate?: (number|null);
                map_puzzle_update_rate?: (number|null);
                try_again_bonus_per_failure?: (number|null);
                ar_mode_range?: (number|null);
                ar_mode_max_encounters?: (number|null);
                event_cool_down_duration?: (number|null);
                combat_stun_time?: (number|null);
                professions_min_level?: (number|null);
                accuracy_min_bonus?: (number|null);
                accuracy_max_bonus?: (number|null);
                encounter_min_base_win_rate?: (number|null);
                encounter_max_base_win_rate?: (number|null);
                player_level_cap?: (number|null);
                level_bonus_weight?: (number|null);
                gameplay_bonus_weight?: (number|null);
                gameplay_bonus_min?: (number|null);
                gameplay_bonus_max?: (number|null);
                professions_rps_non_match_impact?: (number|null);
                professions_rps_match_impact?: (number|null);
                pub_menu_refresh_interval_seconds?: (number|Long|null);
                floo_network_config?: (WUProtos.Data.GmTemplate.GameConfig.IFlooNetworkConfig|null);
                temp_floo_network_config?: (WUProtos.Data.GmTemplate.GameConfig.ITempFlooNetworkConfig|null);
                map_unsafe_move_speed_mps?: (number|null);
                portkey_num_wrackspurts_to_collect?: (number|null);
                portkey_num_wrackspurts_in_env?: (number|null);
                player_stats_base?: ({ [k: string]: (number|Long) }|null);
                player_profession_affinity_strength?: ({ [k: string]: string }|null);
                enemy_affinity_profession_strength?: ({ [k: string]: string }|null);
                cauldrons_num_queue_slots?: (number|null);
                swish_game_accuracy_tiers?: (number[]|null);
                cauldrons_instant_finish_cost_per_second?: (number|null);
                cauldrons_instant_finish_currency_id?: (string|null);
                rune_ratings?: ({ [k: string]: number }|null);
                tutorial_encounter_id?: (string|null);
                tutorial_encounter_feature_flag_id?: (string|null);
                bonus_config?: (WUProtos.Data.GmTemplate.GameConfig.IBonusConfig|null);
                max_walkbox_capacity?: (number|null);
                challenge_collection_family_id?: (string|null);
                daily_quest_gmt_ids?: (string[]|null);
                cap_player_level_gmt_id?: (string|null);
                greenhouse_cool_down_ms?: (number|Long|null);
                player_level_override?: ({ [k: string]: number }|null);
                inn_cool_down_ms?: (number|Long|null);
                inn_menu_staleness_threshold_ms?: (number|Long|null);
                daily_reward_schedule_gmt_id?: (string|null);
                wc_encounter_first_interact_timeout_ms?: (number|Long|null);
                wc_encounter_interact_timeout_ms?: (number|Long|null);
            }

            class GameConfig implements IGameConfig {
                constructor(properties?: WUProtos.Data.GmTemplate.IGameConfig);
                public id: string;
                public pickup_range: number;
                public map_update_rate: number;
                public map_event_update_rate: number;
                public map_puzzle_update_rate: number;
                public try_again_bonus_per_failure: number;
                public ar_mode_range: number;
                public ar_mode_max_encounters: number;
                public event_cool_down_duration: number;
                public combat_stun_time: number;
                public professions_min_level: number;
                public accuracy_min_bonus: number;
                public accuracy_max_bonus: number;
                public encounter_min_base_win_rate: number;
                public encounter_max_base_win_rate: number;
                public player_level_cap: number;
                public level_bonus_weight: number;
                public gameplay_bonus_weight: number;
                public gameplay_bonus_min: number;
                public gameplay_bonus_max: number;
                public professions_rps_non_match_impact: number;
                public professions_rps_match_impact: number;
                public pub_menu_refresh_interval_seconds: (number|Long);
                public floo_network_config?: (WUProtos.Data.GmTemplate.GameConfig.IFlooNetworkConfig|null);
                public temp_floo_network_config?: (WUProtos.Data.GmTemplate.GameConfig.ITempFlooNetworkConfig|null);
                public map_unsafe_move_speed_mps: number;
                public portkey_num_wrackspurts_to_collect: number;
                public portkey_num_wrackspurts_in_env: number;
                public player_stats_base: { [k: string]: (number|Long) };
                public player_profession_affinity_strength: { [k: string]: string };
                public enemy_affinity_profession_strength: { [k: string]: string };
                public cauldrons_num_queue_slots: number;
                public swish_game_accuracy_tiers: number[];
                public cauldrons_instant_finish_cost_per_second: number;
                public cauldrons_instant_finish_currency_id: string;
                public rune_ratings: { [k: string]: number };
                public tutorial_encounter_id: string;
                public tutorial_encounter_feature_flag_id: string;
                public bonus_config?: (WUProtos.Data.GmTemplate.GameConfig.IBonusConfig|null);
                public max_walkbox_capacity: number;
                public challenge_collection_family_id: string;
                public daily_quest_gmt_ids: string[];
                public cap_player_level_gmt_id: string;
                public greenhouse_cool_down_ms: (number|Long);
                public player_level_override: { [k: string]: number };
                public inn_cool_down_ms: (number|Long);
                public inn_menu_staleness_threshold_ms: (number|Long);
                public daily_reward_schedule_gmt_id: string;
                public wc_encounter_first_interact_timeout_ms: (number|Long);
                public wc_encounter_interact_timeout_ms: (number|Long);
                public static encode(message: WUProtos.Data.GmTemplate.IGameConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.GameConfig;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.GameConfig;
                public static toObject(message: WUProtos.Data.GmTemplate.GameConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GameConfig {

                interface IFlooNetworkConfig {
                    electoral_votes_per_floo_points?: (WUProtos.Data.GmTemplate.GameConfig.FlooNetworkConfig.IElectoralVotesPerFlooPoints[]|null);
                    points_per_decay_cycle?: (number|null);
                    decay_cycle_length_ms?: (number|Long|null);
                }

                class FlooNetworkConfig implements IFlooNetworkConfig {
                    constructor(properties?: WUProtos.Data.GmTemplate.GameConfig.IFlooNetworkConfig);
                    public electoral_votes_per_floo_points: WUProtos.Data.GmTemplate.GameConfig.FlooNetworkConfig.IElectoralVotesPerFlooPoints[];
                    public points_per_decay_cycle: number;
                    public decay_cycle_length_ms: (number|Long);
                    public static encode(message: WUProtos.Data.GmTemplate.GameConfig.IFlooNetworkConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.GameConfig.FlooNetworkConfig;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.GameConfig.FlooNetworkConfig;
                    public static toObject(message: WUProtos.Data.GmTemplate.GameConfig.FlooNetworkConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace FlooNetworkConfig {

                    interface IElectoralVotesPerFlooPoints {
                        min_floo_points?: (number|Long|null);
                        electoral_votes?: (number|Long|null);
                    }

                    class ElectoralVotesPerFlooPoints implements IElectoralVotesPerFlooPoints {
                        constructor(properties?: WUProtos.Data.GmTemplate.GameConfig.FlooNetworkConfig.IElectoralVotesPerFlooPoints);
                        public min_floo_points: (number|Long);
                        public electoral_votes: (number|Long);
                        public static encode(message: WUProtos.Data.GmTemplate.GameConfig.FlooNetworkConfig.IElectoralVotesPerFlooPoints, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.GameConfig.FlooNetworkConfig.ElectoralVotesPerFlooPoints;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.GameConfig.FlooNetworkConfig.ElectoralVotesPerFlooPoints;
                        public static toObject(message: WUProtos.Data.GmTemplate.GameConfig.FlooNetworkConfig.ElectoralVotesPerFlooPoints, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                enum ChallengeSoundContext {
                    THIRTY_SECONDS = 0,
                    PLAYER_WINS_BATTLE = 1,
                    PLAYER_LOSES_BATTLE = 2,
                    START_CHALLENGE = 3,
                    PLAYER_WINS_CHALLENGE = 4,
                    PLAYER_LOSES_CHALLENGE = 5,
                    ELITE_MOB_SPAWNS = 6
                }

                interface IBonusConfig {
                    tier_threshold?: (number|null);
                    bonus?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                }

                class BonusConfig implements IBonusConfig {
                    constructor(properties?: WUProtos.Data.GmTemplate.GameConfig.IBonusConfig);
                    public tier_threshold: number;
                    public bonus?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public static encode(message: WUProtos.Data.GmTemplate.GameConfig.IBonusConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.GameConfig.BonusConfig;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.GameConfig.BonusConfig;
                    public static toObject(message: WUProtos.Data.GmTemplate.GameConfig.BonusConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ITempFlooNetworkConfig {
                    points_per_button_press?: (number|null);
                    button_press_cooldown_ms?: (number|Long|null);
                    stamina_requirements?: ({ [k: string]: (number|Long) }|null);
                }

                class TempFlooNetworkConfig implements ITempFlooNetworkConfig {
                    constructor(properties?: WUProtos.Data.GmTemplate.GameConfig.ITempFlooNetworkConfig);
                    public points_per_button_press: number;
                    public button_press_cooldown_ms: (number|Long);
                    public stamina_requirements: { [k: string]: (number|Long) };
                    public static encode(message: WUProtos.Data.GmTemplate.GameConfig.ITempFlooNetworkConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.GameConfig.TempFlooNetworkConfig;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.GameConfig.TempFlooNetworkConfig;
                    public static toObject(message: WUProtos.Data.GmTemplate.GameConfig.TempFlooNetworkConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IGreenhouseTemplate {
                id?: (string|null);
                social_growing_settings?: (WUProtos.Data.GmTemplate.GreenhouseTemplate.ISharedSocialGrowingSettings|null);
            }

            class GreenhouseTemplate implements IGreenhouseTemplate {
                constructor(properties?: WUProtos.Data.GmTemplate.IGreenhouseTemplate);
                public id: string;
                public social_growing_settings?: (WUProtos.Data.GmTemplate.GreenhouseTemplate.ISharedSocialGrowingSettings|null);
                public static encode(message: WUProtos.Data.GmTemplate.IGreenhouseTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.GreenhouseTemplate;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.GreenhouseTemplate;
                public static toObject(message: WUProtos.Data.GmTemplate.GreenhouseTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GreenhouseTemplate {

                interface ISharedSocialGrowingSettings {
                    number_of_normal_pots?: (number|null);
                    number_of_rental_pots?: (number|null);
                    normal_pot_growing_time_multiplier?: (number|null);
                    rental_pot_growing_time_multiplier?: (number|null);
                    herbivicus_meter?: (WUProtos.Data.GmTemplate.GreenhouseTemplate.SharedSocialGrowingSettings.IHerbivicusMeterEntry[]|null);
                    maximum_energy_allowed?: (number|null);
                }

                class SharedSocialGrowingSettings implements ISharedSocialGrowingSettings {
                    constructor(properties?: WUProtos.Data.GmTemplate.GreenhouseTemplate.ISharedSocialGrowingSettings);
                    public number_of_normal_pots: number;
                    public number_of_rental_pots: number;
                    public normal_pot_growing_time_multiplier: number;
                    public rental_pot_growing_time_multiplier: number;
                    public herbivicus_meter: WUProtos.Data.GmTemplate.GreenhouseTemplate.SharedSocialGrowingSettings.IHerbivicusMeterEntry[];
                    public maximum_energy_allowed: number;
                    public static encode(message: WUProtos.Data.GmTemplate.GreenhouseTemplate.ISharedSocialGrowingSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.GreenhouseTemplate.SharedSocialGrowingSettings;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.GreenhouseTemplate.SharedSocialGrowingSettings;
                    public static toObject(message: WUProtos.Data.GmTemplate.GreenhouseTemplate.SharedSocialGrowingSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace SharedSocialGrowingSettings {

                    interface IHerbivicusMeterEntry {
                        spell_count?: (number|null);
                        additional_number_of_spawning?: (number|null);
                    }

                    class HerbivicusMeterEntry implements IHerbivicusMeterEntry {
                        constructor(properties?: WUProtos.Data.GmTemplate.GreenhouseTemplate.SharedSocialGrowingSettings.IHerbivicusMeterEntry);
                        public spell_count: number;
                        public additional_number_of_spawning: number;
                        public static encode(message: WUProtos.Data.GmTemplate.GreenhouseTemplate.SharedSocialGrowingSettings.IHerbivicusMeterEntry, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.GreenhouseTemplate.SharedSocialGrowingSettings.HerbivicusMeterEntry;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.GreenhouseTemplate.SharedSocialGrowingSettings.HerbivicusMeterEntry;
                        public static toObject(message: WUProtos.Data.GmTemplate.GreenhouseTemplate.SharedSocialGrowingSettings.HerbivicusMeterEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            interface IHaptic {
                ioswait_timings?: (number[]|null);
                id?: (string|null);
                ioshaptic_types?: (number[]|null);
                android_wait_timings?: (number[]|null);
                android_amplitudes?: (number[]|null);
                android_durations?: (number[]|null);
            }

            class Haptic implements IHaptic {
                constructor(properties?: WUProtos.Data.GmTemplate.IHaptic);
                public ioswait_timings: number[];
                public id: string;
                public ioshaptic_types: number[];
                public android_wait_timings: number[];
                public android_amplitudes: number[];
                public android_durations: number[];
                public static encode(message: WUProtos.Data.GmTemplate.IHaptic, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Haptic;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Haptic;
                public static toObject(message: WUProtos.Data.GmTemplate.Haptic, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ISpell {
                id?: (string|null);
                timelines?: ({ [k: string]: string }|null);
                critical_hits?: ({ [k: string]: string }|null);
            }

            class Spell implements ISpell {
                constructor(properties?: WUProtos.Data.GmTemplate.ISpell);
                public id: string;
                public timelines: { [k: string]: string };
                public critical_hits: { [k: string]: string };
                public static encode(message: WUProtos.Data.GmTemplate.ISpell, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Spell;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Spell;
                public static toObject(message: WUProtos.Data.GmTemplate.Spell, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IFortressTemplate {
                id?: (string|null);
                chamber_gmt_ids?: (string[]|null);
            }

            class FortressTemplate implements IFortressTemplate {
                constructor(properties?: WUProtos.Data.GmTemplate.IFortressTemplate);
                public id: string;
                public chamber_gmt_ids: string[];
                public static encode(message: WUProtos.Data.GmTemplate.IFortressTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.FortressTemplate;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.FortressTemplate;
                public static toObject(message: WUProtos.Data.GmTemplate.FortressTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IMasterNote {
                id?: (string|null);
                gestures?: (WUProtos.Enums.MasterNoteGesture[]|null);
                effect?: (WUProtos.Data.GmTemplate.MasterNote.IMasterNoteEffect|null);
            }

            class MasterNote implements IMasterNote {
                constructor(properties?: WUProtos.Data.GmTemplate.IMasterNote);
                public id: string;
                public gestures: WUProtos.Enums.MasterNoteGesture[];
                public effect?: (WUProtos.Data.GmTemplate.MasterNote.IMasterNoteEffect|null);
                public static encode(message: WUProtos.Data.GmTemplate.IMasterNote, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.MasterNote;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.MasterNote;
                public static toObject(message: WUProtos.Data.GmTemplate.MasterNote, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace MasterNote {

                interface IMasterNoteEffect {
                    id?: (string|null);
                    effect_type?: (WUProtos.Data.GmTemplate.MasterNote.MasterNoteEffect.MasterNoteEffectType|null);
                    power?: (number|Long|null);
                }

                class MasterNoteEffect implements IMasterNoteEffect {
                    constructor(properties?: WUProtos.Data.GmTemplate.MasterNote.IMasterNoteEffect);
                    public id: string;
                    public effect_type: WUProtos.Data.GmTemplate.MasterNote.MasterNoteEffect.MasterNoteEffectType;
                    public power: (number|Long);
                    public static encode(message: WUProtos.Data.GmTemplate.MasterNote.IMasterNoteEffect, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.MasterNote.MasterNoteEffect;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.MasterNote.MasterNoteEffect;
                    public static toObject(message: WUProtos.Data.GmTemplate.MasterNote.MasterNoteEffect, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace MasterNoteEffect {

                    enum MasterNoteEffectType {
                        UNSET = 0,
                        BREW_SPEED_STATIC = 1,
                        BREW_SPEED_PERCENT = 2,
                        BREW_YIELD_STATIC = 3
                    }
                }
            }

            interface IOutpostTemplate {
                id?: (string|null);
            }

            class OutpostTemplate implements IOutpostTemplate {
                constructor(properties?: WUProtos.Data.GmTemplate.IOutpostTemplate);
                public id: string;
                public static encode(message: WUProtos.Data.GmTemplate.IOutpostTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.OutpostTemplate;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.OutpostTemplate;
                public static toObject(message: WUProtos.Data.GmTemplate.OutpostTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPortkey {
                id?: (string|null);
                portkey_encounter_id?: (string|null);
            }

            class Portkey implements IPortkey {
                constructor(properties?: WUProtos.Data.GmTemplate.IPortkey);
                public id: string;
                public portkey_encounter_id: string;
                public static encode(message: WUProtos.Data.GmTemplate.IPortkey, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Portkey;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Portkey;
                public static toObject(message: WUProtos.Data.GmTemplate.Portkey, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IRpgstat {
                id?: (string|null);
                stat_bounds?: (WUProtos.Data.GmTemplate.Rpgstat.IRangeInt64|null);
            }

            class Rpgstat implements IRpgstat {
                constructor(properties?: WUProtos.Data.GmTemplate.IRpgstat);
                public id: string;
                public stat_bounds?: (WUProtos.Data.GmTemplate.Rpgstat.IRangeInt64|null);
                public static encode(message: WUProtos.Data.GmTemplate.IRpgstat, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Rpgstat;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Rpgstat;
                public static toObject(message: WUProtos.Data.GmTemplate.Rpgstat, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace Rpgstat {

                enum IconDisplayType {
                    BOTH = 0,
                    PLAYER_VIEW = 1,
                    ENEMY_VIEW = 2,
                    NEITHER = 3
                }

                interface IRangeInt64 {
                    min?: (number|Long|null);
                    max?: (number|Long|null);
                }

                class RangeInt64 implements IRangeInt64 {
                    constructor(properties?: WUProtos.Data.GmTemplate.Rpgstat.IRangeInt64);
                    public min: (number|Long);
                    public max: (number|Long);
                    public static encode(message: WUProtos.Data.GmTemplate.Rpgstat.IRangeInt64, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Rpgstat.RangeInt64;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Rpgstat.RangeInt64;
                    public static toObject(message: WUProtos.Data.GmTemplate.Rpgstat.RangeInt64, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IRangeUint32 {
                    min?: (number|null);
                    max?: (number|null);
                }

                class RangeUint32 implements IRangeUint32 {
                    constructor(properties?: WUProtos.Data.GmTemplate.Rpgstat.IRangeUint32);
                    public min: number;
                    public max: number;
                    public static encode(message: WUProtos.Data.GmTemplate.Rpgstat.IRangeUint32, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Rpgstat.RangeUint32;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Rpgstat.RangeUint32;
                    public static toObject(message: WUProtos.Data.GmTemplate.Rpgstat.RangeUint32, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IRpgstatsBlock {
                id?: (string|null);
            }

            class RpgstatsBlock implements IRpgstatsBlock {
                constructor(properties?: WUProtos.Data.GmTemplate.IRpgstatsBlock);
                public id: string;
                public static encode(message: WUProtos.Data.GmTemplate.IRpgstatsBlock, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.RpgstatsBlock;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.RpgstatsBlock;
                public static toObject(message: WUProtos.Data.GmTemplate.RpgstatsBlock, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ISelfieAvatarAsset {
                id?: (string|null);
                unlock_conditions?: (WUProtos.Data.IRequirements|null);
            }

            class SelfieAvatarAsset implements ISelfieAvatarAsset {
                constructor(properties?: WUProtos.Data.GmTemplate.ISelfieAvatarAsset);
                public id: string;
                public unlock_conditions?: (WUProtos.Data.IRequirements|null);
                public static encode(message: WUProtos.Data.GmTemplate.ISelfieAvatarAsset, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.SelfieAvatarAsset;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.SelfieAvatarAsset;
                public static toObject(message: WUProtos.Data.GmTemplate.SelfieAvatarAsset, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ITeamControl {
                id?: (string|null);
                team_name?: (string|null);
            }

            class TeamControl implements ITeamControl {
                constructor(properties?: WUProtos.Data.GmTemplate.ITeamControl);
                public id: string;
                public team_name: string;
                public static encode(message: WUProtos.Data.GmTemplate.ITeamControl, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.TeamControl;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.TeamControl;
                public static toObject(message: WUProtos.Data.GmTemplate.TeamControl, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IVaultCategory {
                id?: (string|null);
                capacity_type?: (WUProtos.Data.GmTemplate.VaultCategory.CategoryCapacityType|null);
            }

            class VaultCategory implements IVaultCategory {
                constructor(properties?: WUProtos.Data.GmTemplate.IVaultCategory);
                public id: string;
                public capacity_type: WUProtos.Data.GmTemplate.VaultCategory.CategoryCapacityType;
                public static encode(message: WUProtos.Data.GmTemplate.IVaultCategory, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.VaultCategory;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.VaultCategory;
                public static toObject(message: WUProtos.Data.GmTemplate.VaultCategory, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace VaultCategory {

                enum CategoryCapacityType {
                    CAGETORY_CAPACITY_TYPE_UNSET = 0,
                    DEFAULT_CAPACITY_TYPE = 1,
                    INFINITE = 2
                }
            }

            interface IRecipe {
                id?: (string|null);
                recipe?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                time_to_craft?: (number|Long|null);
                master_note_gmt_id?: (string[]|null);
                disabled?: (boolean|null);
                unlock_conditions?: (WUProtos.Data.IRequirements[]|null);
            }

            class Recipe implements IRecipe {
                constructor(properties?: WUProtos.Data.GmTemplate.IRecipe);
                public id: string;
                public recipe?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public time_to_craft: (number|Long);
                public master_note_gmt_id: string[];
                public disabled: boolean;
                public unlock_conditions: WUProtos.Data.IRequirements[];
                public static encode(message: WUProtos.Data.GmTemplate.IRecipe, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Recipe;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Recipe;
                public static toObject(message: WUProtos.Data.GmTemplate.Recipe, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IVersion {
                id?: (string|null);
                data_version?: (string|null);
                data_branch?: (string|null);
            }

            class Version implements IVersion {
                constructor(properties?: WUProtos.Data.GmTemplate.IVersion);
                public id: string;
                public data_version: string;
                public data_branch: string;
                public static encode(message: WUProtos.Data.GmTemplate.IVersion, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Version;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Version;
                public static toObject(message: WUProtos.Data.GmTemplate.Version, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IBonusCategory {
                id?: (string|null);
            }

            class BonusCategory implements IBonusCategory {
                constructor(properties?: WUProtos.Data.GmTemplate.IBonusCategory);
                public id: string;
                public static encode(message: WUProtos.Data.GmTemplate.IBonusCategory, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.BonusCategory;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.BonusCategory;
                public static toObject(message: WUProtos.Data.GmTemplate.BonusCategory, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ICauldron {
                id?: (string|null);
                type?: (WUProtos.Data.GmTemplate.Cauldron.CauldronType|null);
                discount?: (number|null);
            }

            class Cauldron implements ICauldron {
                constructor(properties?: WUProtos.Data.GmTemplate.ICauldron);
                public id: string;
                public type: WUProtos.Data.GmTemplate.Cauldron.CauldronType;
                public discount: number;
                public static encode(message: WUProtos.Data.GmTemplate.ICauldron, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Cauldron;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Cauldron;
                public static toObject(message: WUProtos.Data.GmTemplate.Cauldron, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace Cauldron {

                enum CauldronType {
                    CAULDRON_UNKNOWN = 0,
                    CAULDRON_NORMAL = 1,
                    CAULDRON_RENTAL = 2
                }
            }

            interface IChamberTemplate {
                id?: (string|null);
                unlock_requirements?: (WUProtos.Data.IRequirements|null);
                visibility_requirements?: (WUProtos.Data.IRequirements|null);
                min_runestone_level?: (number|null);
                max_runestone_level?: (number|null);
                player_cap?: (number|null);
                duration_ms?: (number|Long|null);
                knockout_time_ms?: (number|Long|null);
                player_count_multipliers?: ({ [k: string]: WUProtos.Data.GmTemplate.IPlayerCountMultipliers }|null);
                base_chamber_rating?: (number|null);
            }

            class ChamberTemplate implements IChamberTemplate {
                constructor(properties?: WUProtos.Data.GmTemplate.IChamberTemplate);
                public id: string;
                public unlock_requirements?: (WUProtos.Data.IRequirements|null);
                public visibility_requirements?: (WUProtos.Data.IRequirements|null);
                public min_runestone_level: number;
                public max_runestone_level: number;
                public player_cap: number;
                public duration_ms: (number|Long);
                public knockout_time_ms: (number|Long);
                public player_count_multipliers: { [k: string]: WUProtos.Data.GmTemplate.IPlayerCountMultipliers };
                public base_chamber_rating: number;
                public static encode(message: WUProtos.Data.GmTemplate.IChamberTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.ChamberTemplate;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.ChamberTemplate;
                public static toObject(message: WUProtos.Data.GmTemplate.ChamberTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDeepLink {
                id?: (string|null);
                category?: (string|null);
                requirements?: (WUProtos.Data.IRequirements|null);
                item?: (string|null);
            }

            class DeepLink implements IDeepLink {
                constructor(properties?: WUProtos.Data.GmTemplate.IDeepLink);
                public id: string;
                public category: string;
                public requirements?: (WUProtos.Data.IRequirements|null);
                public item: string;
                public static encode(message: WUProtos.Data.GmTemplate.IDeepLink, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.DeepLink;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.DeepLink;
                public static toObject(message: WUProtos.Data.GmTemplate.DeepLink, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IChallengeSpawnLogic {
                id?: (string|null);
            }

            class ChallengeSpawnLogic implements IChallengeSpawnLogic {
                constructor(properties?: WUProtos.Data.GmTemplate.IChallengeSpawnLogic);
                public id: string;
                public static encode(message: WUProtos.Data.GmTemplate.IChallengeSpawnLogic, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.ChallengeSpawnLogic;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.ChallengeSpawnLogic;
                public static toObject(message: WUProtos.Data.GmTemplate.ChallengeSpawnLogic, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ICollectionItem {
                id?: (string|null);
                family_id?: (string|null);
                shard_count?: (number|null);
                rarity?: (number|null);
                one_time_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                page_id?: (string|null);
                unlock_requirements?: (WUProtos.Data.IRequirements|null);
                shard_counts?: (number[]|null);
                sticker_disabled?: (boolean|null);
            }

            class CollectionItem implements ICollectionItem {
                constructor(properties?: WUProtos.Data.GmTemplate.ICollectionItem);
                public id: string;
                public family_id: string;
                public shard_count: number;
                public rarity: number;
                public one_time_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public page_id: string;
                public unlock_requirements?: (WUProtos.Data.IRequirements|null);
                public shard_counts: number[];
                public sticker_disabled: boolean;
                public static encode(message: WUProtos.Data.GmTemplate.ICollectionItem, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.CollectionItem;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.CollectionItem;
                public static toObject(message: WUProtos.Data.GmTemplate.CollectionItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ICollectionFamilyRankTable {
                id?: (string|null);
                rank_data?: (WUProtos.Data.GmTemplate.CollectionFamilyRankTable.ICollectionFamilyRank[]|null);
            }

            class CollectionFamilyRankTable implements ICollectionFamilyRankTable {
                constructor(properties?: WUProtos.Data.GmTemplate.ICollectionFamilyRankTable);
                public id: string;
                public rank_data: WUProtos.Data.GmTemplate.CollectionFamilyRankTable.ICollectionFamilyRank[];
                public static encode(message: WUProtos.Data.GmTemplate.ICollectionFamilyRankTable, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.CollectionFamilyRankTable;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.CollectionFamilyRankTable;
                public static toObject(message: WUProtos.Data.GmTemplate.CollectionFamilyRankTable, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace CollectionFamilyRankTable {

                interface ICollectionFamilyRank {
                    total_xp_req?: (number|Long|null);
                    chest_count?: (number|null);
                    small_loottable_id?: (string|null);
                    level_up_loottable_id?: (string|null);
                }

                class CollectionFamilyRank implements ICollectionFamilyRank {
                    constructor(properties?: WUProtos.Data.GmTemplate.CollectionFamilyRankTable.ICollectionFamilyRank);
                    public total_xp_req: (number|Long);
                    public chest_count: number;
                    public small_loottable_id: string;
                    public level_up_loottable_id: string;
                    public static encode(message: WUProtos.Data.GmTemplate.CollectionFamilyRankTable.ICollectionFamilyRank, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.CollectionFamilyRankTable.CollectionFamilyRank;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.CollectionFamilyRankTable.CollectionFamilyRank;
                    public static toObject(message: WUProtos.Data.GmTemplate.CollectionFamilyRankTable.CollectionFamilyRank, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface ICollectionPage {
                id?: (string|null);
                family_id?: (string|null);
                items?: (string[]|null);
                completion_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection[]|null);
                unlock_requirements?: (WUProtos.Data.IRequirements|null);
            }

            class CollectionPage implements ICollectionPage {
                constructor(properties?: WUProtos.Data.GmTemplate.ICollectionPage);
                public id: string;
                public family_id: string;
                public items: string[];
                public completion_rewards: WUProtos.Data.Loot.LootReward.ILootCollection[];
                public unlock_requirements?: (WUProtos.Data.IRequirements|null);
                public static encode(message: WUProtos.Data.GmTemplate.ICollectionPage, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.CollectionPage;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.CollectionPage;
                public static toObject(message: WUProtos.Data.GmTemplate.CollectionPage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IEncounter {
                id?: (string|null);
                collection_item_reward_gmt_id?: (string|null);
                stages?: (WUProtos.Data.GmTemplate.Encounter.IEncounterStage[]|null);
                collection_item_reward_shards?: (number|null);
                collection_family_gmt_id?: (string|null);
                affinity_profession_id?: (string|null);
            }

            class Encounter implements IEncounter {
                constructor(properties?: WUProtos.Data.GmTemplate.IEncounter);
                public id: string;
                public collection_item_reward_gmt_id: string;
                public stages: WUProtos.Data.GmTemplate.Encounter.IEncounterStage[];
                public collection_item_reward_shards: number;
                public collection_family_gmt_id: string;
                public affinity_profession_id: string;
                public static encode(message: WUProtos.Data.GmTemplate.IEncounter, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter;
                public static toObject(message: WUProtos.Data.GmTemplate.Encounter, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace Encounter {

                interface IEncounterStage {
                    swish?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStageSwish|null);
                    combat?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStageCombat|null);
                    portkey?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStagePortkey|null);
                    picture?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStagePicture|null);
                    spell_gmt_id?: (string|null);
                }

                class EncounterStage implements IEncounterStage {
                    constructor(properties?: WUProtos.Data.GmTemplate.Encounter.IEncounterStage);
                    public swish?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStageSwish|null);
                    public combat?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStageCombat|null);
                    public portkey?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStagePortkey|null);
                    public picture?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStagePicture|null);
                    public spell_gmt_id: string;
                    public Type?: ("swish"|"combat"|"portkey"|"picture");
                    public static encode(message: WUProtos.Data.GmTemplate.Encounter.IEncounterStage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage;
                    public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace EncounterStage {

                    interface IEncounterStageSwish {
                        base_win_rate?: (number|null);
                    }

                    class EncounterStageSwish implements IEncounterStageSwish {
                        constructor(properties?: WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStageSwish);
                        public base_win_rate: number;
                        public static encode(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStageSwish, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageSwish;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageSwish;
                        public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageSwish, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IEncounterStageCombat {
                        state_graph_nodes?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatState[]|null);
                        enemy_stats?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatEnemyStats|null);
                        enemy_ranks?: (string[]|null);
                    }

                    class EncounterStageCombat implements IEncounterStageCombat {
                        constructor(properties?: WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStageCombat);
                        public state_graph_nodes: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatState[];
                        public enemy_stats?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatEnemyStats|null);
                        public enemy_ranks: string[];
                        public static encode(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStageCombat, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat;
                        public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace EncounterStageCombat {

                        interface ICombatState {
                            possible_moves?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatMoveType[]|null);
                        }

                        class CombatState implements ICombatState {
                            constructor(properties?: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatState);
                            public possible_moves: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatMoveType[];
                            public static encode(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatState, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatState;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatState;
                            public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        interface ICombatMoveType {
                            player_attack?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerAttack|null);
                            player_defend?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerDefend|null);
                            player_auto_advance?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerAutoAdvance|null);
                        }

                        class CombatMoveType implements ICombatMoveType {
                            constructor(properties?: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatMoveType);
                            public player_attack?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerAttack|null);
                            public player_defend?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerDefend|null);
                            public player_auto_advance?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerAutoAdvance|null);
                            public CombatMove?: ("player_attack"|"player_defend"|"player_auto_advance");
                            public static encode(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatMoveType, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType;
                            public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        namespace CombatMoveType {

                            interface ICombatPlayerDefend {
                            }

                            class CombatPlayerDefend implements ICombatPlayerDefend {
                                constructor(properties?: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerDefend);
                                public static encode(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerDefend, writer?: $protobuf.Writer): $protobuf.Writer;
                                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.CombatPlayerDefend;
                                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.CombatPlayerDefend;
                                public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.CombatPlayerDefend, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                public toJSON(): { [k: string]: any };
                            }

                            interface ICombatPlayerAutoAdvance {
                            }

                            class CombatPlayerAutoAdvance implements ICombatPlayerAutoAdvance {
                                constructor(properties?: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerAutoAdvance);
                                public static encode(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerAutoAdvance, writer?: $protobuf.Writer): $protobuf.Writer;
                                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.CombatPlayerAutoAdvance;
                                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.CombatPlayerAutoAdvance;
                                public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.CombatPlayerAutoAdvance, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                public toJSON(): { [k: string]: any };
                            }

                            interface ICombatPlayerAttack {
                            }

                            class CombatPlayerAttack implements ICombatPlayerAttack {
                                constructor(properties?: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerAttack);
                                public static encode(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.ICombatPlayerAttack, writer?: $protobuf.Writer): $protobuf.Writer;
                                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.CombatPlayerAttack;
                                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.CombatPlayerAttack;
                                public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatMoveType.CombatPlayerAttack, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                public toJSON(): { [k: string]: any };
                            }
                        }

                        interface ICombatEnemyStats {
                            stat?: ({ [k: string]: (number|Long) }|null);
                            stat_growth?: ({ [k: string]: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats.ICombatGrowth }|null);
                        }

                        class CombatEnemyStats implements ICombatEnemyStats {
                            constructor(properties?: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatEnemyStats);
                            public stat: { [k: string]: (number|Long) };
                            public stat_growth: { [k: string]: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats.ICombatGrowth };
                            public static encode(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.ICombatEnemyStats, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats;
                            public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        namespace CombatEnemyStats {

                            interface ICombatGrowth {
                                grow_type?: (WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats.CombatGrowth.GrowthType|null);
                                growth_adjustment?: (number|null);
                            }

                            class CombatGrowth implements ICombatGrowth {
                                constructor(properties?: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats.ICombatGrowth);
                                public grow_type: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats.CombatGrowth.GrowthType;
                                public growth_adjustment: number;
                                public static encode(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats.ICombatGrowth, writer?: $protobuf.Writer): $protobuf.Writer;
                                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats.CombatGrowth;
                                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats.CombatGrowth;
                                public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStageCombat.CombatEnemyStats.CombatGrowth, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                public toJSON(): { [k: string]: any };
                            }

                            namespace CombatGrowth {

                                enum GrowthType {
                                    GROWTH_TYPE_UNSET = 0,
                                    LINEAR = 1,
                                    LOGARITHMIC = 2,
                                    EXPONENTIAL = 3
                                }
                            }
                        }
                    }

                    interface IEncounterStagePortkey {
                    }

                    class EncounterStagePortkey implements IEncounterStagePortkey {
                        constructor(properties?: WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStagePortkey);
                        public static encode(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStagePortkey, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStagePortkey;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStagePortkey;
                        public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStagePortkey, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IEncounterStagePicture {
                    }

                    class EncounterStagePicture implements IEncounterStagePicture {
                        constructor(properties?: WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStagePicture);
                        public static encode(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.IEncounterStagePicture, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStagePicture;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStagePicture;
                        public static toObject(message: WUProtos.Data.GmTemplate.Encounter.EncounterStage.EncounterStagePicture, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            interface IEncounterObstacle {
                id?: (string|null);
            }

            class EncounterObstacle implements IEncounterObstacle {
                constructor(properties?: WUProtos.Data.GmTemplate.IEncounterObstacle);
                public id: string;
                public static encode(message: WUProtos.Data.GmTemplate.IEncounterObstacle, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.EncounterObstacle;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.EncounterObstacle;
                public static toObject(message: WUProtos.Data.GmTemplate.EncounterObstacle, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IEncounterType {
                id?: (string|null);
            }

            class EncounterType implements IEncounterType {
                constructor(properties?: WUProtos.Data.GmTemplate.IEncounterType);
                public id: string;
                public static encode(message: WUProtos.Data.GmTemplate.IEncounterType, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.EncounterType;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.EncounterType;
                public static toObject(message: WUProtos.Data.GmTemplate.EncounterType, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDailyRewardMonthlySchedule {
                id?: (string|null);
                number_of_days?: (number|null);
                default_reward?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                daily_rewards?: ({ [k: string]: WUProtos.Data.GmTemplate.DailyRewardMonthlySchedule.IDailyReward }|null);
            }

            class DailyRewardMonthlySchedule implements IDailyRewardMonthlySchedule {
                constructor(properties?: WUProtos.Data.GmTemplate.IDailyRewardMonthlySchedule);
                public id: string;
                public number_of_days: number;
                public default_reward?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public daily_rewards: { [k: string]: WUProtos.Data.GmTemplate.DailyRewardMonthlySchedule.IDailyReward };
                public static encode(message: WUProtos.Data.GmTemplate.IDailyRewardMonthlySchedule, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.DailyRewardMonthlySchedule;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.DailyRewardMonthlySchedule;
                public static toObject(message: WUProtos.Data.GmTemplate.DailyRewardMonthlySchedule, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace DailyRewardMonthlySchedule {

                interface IDailyReward {
                    reward?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                }

                class DailyReward implements IDailyReward {
                    constructor(properties?: WUProtos.Data.GmTemplate.DailyRewardMonthlySchedule.IDailyReward);
                    public reward?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public static encode(message: WUProtos.Data.GmTemplate.DailyRewardMonthlySchedule.IDailyReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.DailyRewardMonthlySchedule.DailyReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.DailyRewardMonthlySchedule.DailyReward;
                    public static toObject(message: WUProtos.Data.GmTemplate.DailyRewardMonthlySchedule.DailyReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IBuff {
                id?: (string|null);
                duration?: (WUProtos.Data.GmTemplate.IBuffDuration|null);
                exclusivity_group?: (WUProtos.Data.GmTemplate.Buff.IBuffExclusivityGroup|null);
                buff_type?: (WUProtos.Data.GmTemplate.Buff.BuffType|null);
                modifiers?: ({ [k: string]: (number|Long) }|null);
                conditional_modifiers?: (WUProtos.Data.GmTemplate.IConditionalModifiers[]|null);
            }

            class Buff implements IBuff {
                constructor(properties?: WUProtos.Data.GmTemplate.IBuff);
                public id: string;
                public duration?: (WUProtos.Data.GmTemplate.IBuffDuration|null);
                public exclusivity_group?: (WUProtos.Data.GmTemplate.Buff.IBuffExclusivityGroup|null);
                public buff_type: WUProtos.Data.GmTemplate.Buff.BuffType;
                public modifiers: { [k: string]: (number|Long) };
                public conditional_modifiers: WUProtos.Data.GmTemplate.IConditionalModifiers[];
                public static encode(message: WUProtos.Data.GmTemplate.IBuff, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Buff;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Buff;
                public static toObject(message: WUProtos.Data.GmTemplate.Buff, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace Buff {

                enum BuffType {
                    NONE = 0,
                    BUFF = 1,
                    DEBUFF = 2
                }

                interface IBuffExclusivityGroup {
                    exclusivity_group?: (string|null);
                    exclusivity_priority?: (number|null);
                }

                class BuffExclusivityGroup implements IBuffExclusivityGroup {
                    constructor(properties?: WUProtos.Data.GmTemplate.Buff.IBuffExclusivityGroup);
                    public exclusivity_group: string;
                    public exclusivity_priority: number;
                    public static encode(message: WUProtos.Data.GmTemplate.Buff.IBuffExclusivityGroup, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Buff.BuffExclusivityGroup;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Buff.BuffExclusivityGroup;
                    public static toObject(message: WUProtos.Data.GmTemplate.Buff.BuffExclusivityGroup, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IBuffDuration {
                time?: (WUProtos.Data.GmTemplate.BuffDuration.ITimeBuffDuration|null);
                charges?: (WUProtos.Data.GmTemplate.BuffDuration.IChargesBuffDuration|null);
                profession?: (WUProtos.Data.GmTemplate.BuffDuration.IProfessionBuffDuration|null);
                permanent?: (WUProtos.Data.GmTemplate.BuffDuration.IPermanentBuffDuration|null);
                instant?: (WUProtos.Data.GmTemplate.BuffDuration.IInstantBuffDuration|null);
                challenge?: (WUProtos.Data.GmTemplate.BuffDuration.IChallengeBuffDuration|null);
            }

            class BuffDuration implements IBuffDuration {
                constructor(properties?: WUProtos.Data.GmTemplate.IBuffDuration);
                public time?: (WUProtos.Data.GmTemplate.BuffDuration.ITimeBuffDuration|null);
                public charges?: (WUProtos.Data.GmTemplate.BuffDuration.IChargesBuffDuration|null);
                public profession?: (WUProtos.Data.GmTemplate.BuffDuration.IProfessionBuffDuration|null);
                public permanent?: (WUProtos.Data.GmTemplate.BuffDuration.IPermanentBuffDuration|null);
                public instant?: (WUProtos.Data.GmTemplate.BuffDuration.IInstantBuffDuration|null);
                public challenge?: (WUProtos.Data.GmTemplate.BuffDuration.IChallengeBuffDuration|null);
                public Type?: ("time"|"charges"|"profession"|"permanent"|"instant"|"challenge");
                public static encode(message: WUProtos.Data.GmTemplate.IBuffDuration, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.BuffDuration;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.BuffDuration;
                public static toObject(message: WUProtos.Data.GmTemplate.BuffDuration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace BuffDuration {

                interface IChargesBuffDuration {
                    num_charges?: (number|null);
                    is_override?: (boolean|null);
                }

                class ChargesBuffDuration implements IChargesBuffDuration {
                    constructor(properties?: WUProtos.Data.GmTemplate.BuffDuration.IChargesBuffDuration);
                    public num_charges: number;
                    public is_override: boolean;
                    public static encode(message: WUProtos.Data.GmTemplate.BuffDuration.IChargesBuffDuration, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.BuffDuration.ChargesBuffDuration;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.BuffDuration.ChargesBuffDuration;
                    public static toObject(message: WUProtos.Data.GmTemplate.BuffDuration.ChargesBuffDuration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IInstantBuffDuration {
                }

                class InstantBuffDuration implements IInstantBuffDuration {
                    constructor(properties?: WUProtos.Data.GmTemplate.BuffDuration.IInstantBuffDuration);
                    public static encode(message: WUProtos.Data.GmTemplate.BuffDuration.IInstantBuffDuration, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.BuffDuration.InstantBuffDuration;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.BuffDuration.InstantBuffDuration;
                    public static toObject(message: WUProtos.Data.GmTemplate.BuffDuration.InstantBuffDuration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPermanentBuffDuration {
                }

                class PermanentBuffDuration implements IPermanentBuffDuration {
                    constructor(properties?: WUProtos.Data.GmTemplate.BuffDuration.IPermanentBuffDuration);
                    public static encode(message: WUProtos.Data.GmTemplate.BuffDuration.IPermanentBuffDuration, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.BuffDuration.PermanentBuffDuration;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.BuffDuration.PermanentBuffDuration;
                    public static toObject(message: WUProtos.Data.GmTemplate.BuffDuration.PermanentBuffDuration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ITimeBuffDuration {
                    time_ms?: (number|Long|null);
                    is_override?: (boolean|null);
                }

                class TimeBuffDuration implements ITimeBuffDuration {
                    constructor(properties?: WUProtos.Data.GmTemplate.BuffDuration.ITimeBuffDuration);
                    public time_ms: (number|Long);
                    public is_override: boolean;
                    public static encode(message: WUProtos.Data.GmTemplate.BuffDuration.ITimeBuffDuration, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.BuffDuration.TimeBuffDuration;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.BuffDuration.TimeBuffDuration;
                    public static toObject(message: WUProtos.Data.GmTemplate.BuffDuration.TimeBuffDuration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IChallengeBuffDuration {
                }

                class ChallengeBuffDuration implements IChallengeBuffDuration {
                    constructor(properties?: WUProtos.Data.GmTemplate.BuffDuration.IChallengeBuffDuration);
                    public static encode(message: WUProtos.Data.GmTemplate.BuffDuration.IChallengeBuffDuration, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.BuffDuration.ChallengeBuffDuration;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.BuffDuration.ChallengeBuffDuration;
                    public static toObject(message: WUProtos.Data.GmTemplate.BuffDuration.ChallengeBuffDuration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProfessionBuffDuration {
                }

                class ProfessionBuffDuration implements IProfessionBuffDuration {
                    constructor(properties?: WUProtos.Data.GmTemplate.BuffDuration.IProfessionBuffDuration);
                    public static encode(message: WUProtos.Data.GmTemplate.BuffDuration.IProfessionBuffDuration, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.BuffDuration.ProfessionBuffDuration;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.BuffDuration.ProfessionBuffDuration;
                    public static toObject(message: WUProtos.Data.GmTemplate.BuffDuration.ProfessionBuffDuration, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IEvent {
                id?: (string|null);
                activation_reqs?: (WUProtos.Data.IRequirements|null);
                running_reqs?: (WUProtos.Data.IRequirements|null);
            }

            class Event implements IEvent {
                constructor(properties?: WUProtos.Data.GmTemplate.IEvent);
                public id: string;
                public activation_reqs?: (WUProtos.Data.IRequirements|null);
                public running_reqs?: (WUProtos.Data.IRequirements|null);
                public static encode(message: WUProtos.Data.GmTemplate.IEvent, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Event;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Event;
                public static toObject(message: WUProtos.Data.GmTemplate.Event, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlayerCountMultipliers {
                multipliers?: (number[]|null);
            }

            class PlayerCountMultipliers implements IPlayerCountMultipliers {
                constructor(properties?: WUProtos.Data.GmTemplate.IPlayerCountMultipliers);
                public multipliers: number[];
                public static encode(message: WUProtos.Data.GmTemplate.IPlayerCountMultipliers, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.PlayerCountMultipliers;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.PlayerCountMultipliers;
                public static toObject(message: WUProtos.Data.GmTemplate.PlayerCountMultipliers, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlayerLevel {
                id?: (string|null);
                required_xp?: (number|null);
            }

            class PlayerLevel implements IPlayerLevel {
                constructor(properties?: WUProtos.Data.GmTemplate.IPlayerLevel);
                public id: string;
                public required_xp: number;
                public static encode(message: WUProtos.Data.GmTemplate.IPlayerLevel, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.PlayerLevel;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.PlayerLevel;
                public static toObject(message: WUProtos.Data.GmTemplate.PlayerLevel, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IProfession {
                id?: (string|null);
                requirements?: (WUProtos.Data.IRequirements[]|null);
                show_in_ui?: (boolean|null);
                profesion_ranks_map?: ({ [k: string]: WUProtos.Data.GmTemplate.Profession.IProfessionRank }|null);
                profession_tiers?: (WUProtos.Data.GmTemplate.Profession.IProfessionTier[]|null);
            }

            class Profession implements IProfession {
                constructor(properties?: WUProtos.Data.GmTemplate.IProfession);
                public id: string;
                public requirements: WUProtos.Data.IRequirements[];
                public show_in_ui: boolean;
                public profesion_ranks_map: { [k: string]: WUProtos.Data.GmTemplate.Profession.IProfessionRank };
                public profession_tiers: WUProtos.Data.GmTemplate.Profession.IProfessionTier[];
                public static encode(message: WUProtos.Data.GmTemplate.IProfession, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Profession;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Profession;
                public static toObject(message: WUProtos.Data.GmTemplate.Profession, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace Profession {

                interface IProfessionTier {
                    rank_points_upper_bound?: (number|null);
                    is_major_upgrade?: (boolean|null);
                }

                class ProfessionTier implements IProfessionTier {
                    constructor(properties?: WUProtos.Data.GmTemplate.Profession.IProfessionTier);
                    public rank_points_upper_bound: number;
                    public is_major_upgrade: boolean;
                    public static encode(message: WUProtos.Data.GmTemplate.Profession.IProfessionTier, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Profession.ProfessionTier;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Profession.ProfessionTier;
                    public static toObject(message: WUProtos.Data.GmTemplate.Profession.ProfessionTier, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProfessionRank {
                    potential_rank_points?: (number|null);
                    requirements?: (WUProtos.Data.IRequirements[]|null);
                    profession_nodes_map?: ({ [k: string]: WUProtos.Data.GmTemplate.Profession.ProfessionRank.IProfessionNode }|null);
                    show_in_ui?: (boolean|null);
                    id?: (string|null);
                }

                class ProfessionRank implements IProfessionRank {
                    constructor(properties?: WUProtos.Data.GmTemplate.Profession.IProfessionRank);
                    public potential_rank_points: number;
                    public requirements: WUProtos.Data.IRequirements[];
                    public profession_nodes_map: { [k: string]: WUProtos.Data.GmTemplate.Profession.ProfessionRank.IProfessionNode };
                    public show_in_ui: boolean;
                    public id: string;
                    public static encode(message: WUProtos.Data.GmTemplate.Profession.IProfessionRank, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Profession.ProfessionRank;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Profession.ProfessionRank;
                    public static toObject(message: WUProtos.Data.GmTemplate.Profession.ProfessionRank, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ProfessionRank {

                    interface IProfessionNode {
                        id?: (string|null);
                        edges?: (WUProtos.Data.IRequirements[]|null);
                        levels?: (WUProtos.Data.GmTemplate.Profession.ProfessionRank.ProfessionNode.IProfessionNodeLevel[]|null);
                        row_pos?: (number|null);
                        col_pos?: (number|null);
                    }

                    class ProfessionNode implements IProfessionNode {
                        constructor(properties?: WUProtos.Data.GmTemplate.Profession.ProfessionRank.IProfessionNode);
                        public id: string;
                        public edges: WUProtos.Data.IRequirements[];
                        public levels: WUProtos.Data.GmTemplate.Profession.ProfessionRank.ProfessionNode.IProfessionNodeLevel[];
                        public row_pos: number;
                        public col_pos: number;
                        public static encode(message: WUProtos.Data.GmTemplate.Profession.ProfessionRank.IProfessionNode, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Profession.ProfessionRank.ProfessionNode;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Profession.ProfessionRank.ProfessionNode;
                        public static toObject(message: WUProtos.Data.GmTemplate.Profession.ProfessionRank.ProfessionNode, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace ProfessionNode {

                        interface IProfessionNodeLevel {
                            buff_gmt_id?: (string|null);
                            prerequisite?: (WUProtos.Data.IRequirements|null);
                            cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                            map_abilities?: (string[]|null);
                            rank_points?: (number|null);
                        }

                        class ProfessionNodeLevel implements IProfessionNodeLevel {
                            constructor(properties?: WUProtos.Data.GmTemplate.Profession.ProfessionRank.ProfessionNode.IProfessionNodeLevel);
                            public buff_gmt_id: string;
                            public prerequisite?: (WUProtos.Data.IRequirements|null);
                            public cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                            public map_abilities: string[];
                            public rank_points: number;
                            public static encode(message: WUProtos.Data.GmTemplate.Profession.ProfessionRank.ProfessionNode.IProfessionNodeLevel, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Profession.ProfessionRank.ProfessionNode.ProfessionNodeLevel;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Profession.ProfessionRank.ProfessionNode.ProfessionNodeLevel;
                            public static toObject(message: WUProtos.Data.GmTemplate.Profession.ProfessionRank.ProfessionNode.ProfessionNodeLevel, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        namespace ProfessionNodeLevel {

                            enum Purpose {
                                none = 0,
                                buff = 1,
                                learn_new_map_ability = 2,
                                upgrade_map_ability = 3
                            }
                        }
                    }
                }
            }

            interface IStoryboard {
                id?: (string|null);
                start_reqs?: (WUProtos.Data.IRequirements|null);
                step_flag_gmt_id?: (string|null);
                complete_flag_gmt_id?: (string|null);
                storyboard_steps?: (WUProtos.Data.GmTemplate.Storyboard.IStoryboardStep[]|null);
                reset_mode?: (WUProtos.Data.GmTemplate.Storyboard.StoryboardResetMode|null);
                reset_reqs?: (WUProtos.Data.IRequirements|null);
            }

            class Storyboard implements IStoryboard {
                constructor(properties?: WUProtos.Data.GmTemplate.IStoryboard);
                public id: string;
                public start_reqs?: (WUProtos.Data.IRequirements|null);
                public step_flag_gmt_id: string;
                public complete_flag_gmt_id: string;
                public storyboard_steps: WUProtos.Data.GmTemplate.Storyboard.IStoryboardStep[];
                public reset_mode: WUProtos.Data.GmTemplate.Storyboard.StoryboardResetMode;
                public reset_reqs?: (WUProtos.Data.IRequirements|null);
                public static encode(message: WUProtos.Data.GmTemplate.IStoryboard, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Storyboard;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Storyboard;
                public static toObject(message: WUProtos.Data.GmTemplate.Storyboard, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace Storyboard {

                enum StoryboardResetMode {
                    STORYBOARD_RESET_UNKNOWN = 0,
                    STORYBOARD_RESET_NOT_ALLOWED = 1,
                    STORYBOARD_RESET_WHEN_INCOMPLETE = 2,
                    STORYBOARD_RESET_WHEN_COMPLETE = 3
                }

                interface IStoryboardStep {
                    rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                }

                class StoryboardStep implements IStoryboardStep {
                    constructor(properties?: WUProtos.Data.GmTemplate.Storyboard.IStoryboardStep);
                    public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public static encode(message: WUProtos.Data.GmTemplate.Storyboard.IStoryboardStep, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.Storyboard.StoryboardStep;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.Storyboard.StoryboardStep;
                    public static toObject(message: WUProtos.Data.GmTemplate.Storyboard.StoryboardStep, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IConditionalModifiers {
                conditions?: (WUProtos.Data.IConditions|null);
                modifiers?: ({ [k: string]: (number|Long) }|null);
            }

            class ConditionalModifiers implements IConditionalModifiers {
                constructor(properties?: WUProtos.Data.GmTemplate.IConditionalModifiers);
                public conditions?: (WUProtos.Data.IConditions|null);
                public modifiers: { [k: string]: (number|Long) };
                public static encode(message: WUProtos.Data.GmTemplate.IConditionalModifiers, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.ConditionalModifiers;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.ConditionalModifiers;
                public static toObject(message: WUProtos.Data.GmTemplate.ConditionalModifiers, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IFeatureFlag {
                id?: (string|null);
                feature_id?: (string|null);
                bval?: (boolean|null);
                lval?: (number|Long|null);
                sval?: (string|null);
                fval?: (number|null);
            }

            class FeatureFlag implements IFeatureFlag {
                constructor(properties?: WUProtos.Data.GmTemplate.IFeatureFlag);
                public id: string;
                public feature_id: string;
                public bval: boolean;
                public lval: (number|Long);
                public sval: string;
                public fval: number;
                public DefaultValue?: ("id"|"feature_id"|"bval"|"lval"|"sval"|"fval");
                public static encode(message: WUProtos.Data.GmTemplate.IFeatureFlag, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.FeatureFlag;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.FeatureFlag;
                public static toObject(message: WUProtos.Data.GmTemplate.FeatureFlag, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IWalkboxTemplate {
                id?: (string|null);
                required_distance_km?: (number|null);
            }

            class WalkboxTemplate implements IWalkboxTemplate {
                constructor(properties?: WUProtos.Data.GmTemplate.IWalkboxTemplate);
                public id: string;
                public required_distance_km: number;
                public static encode(message: WUProtos.Data.GmTemplate.IWalkboxTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.WalkboxTemplate;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.WalkboxTemplate;
                public static toObject(message: WUProtos.Data.GmTemplate.WalkboxTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IMapIngredient {
                id?: (string|null);
                loot?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class MapIngredient implements IMapIngredient {
                constructor(properties?: WUProtos.Data.GmTemplate.IMapIngredient);
                public id: string;
                public loot?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Data.GmTemplate.IMapIngredient, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.MapIngredient;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.MapIngredient;
                public static toObject(message: WUProtos.Data.GmTemplate.MapIngredient, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IMapAbility {
                id?: (string|null);
                target_type?: (WUProtos.Data.GmTemplate.MapAbility.MapAbilityTargetType|null);
                base_buff_gmt_id?: (string|null);
                radius?: (number|null);
                cooldown_ms?: (number|null);
                focus_cost?: (number|null);
                map_ability_levels?: (WUProtos.Data.GmTemplate.MapAbility.IMapAbilityLevel[]|null);
            }

            class MapAbility implements IMapAbility {
                constructor(properties?: WUProtos.Data.GmTemplate.IMapAbility);
                public id: string;
                public target_type: WUProtos.Data.GmTemplate.MapAbility.MapAbilityTargetType;
                public base_buff_gmt_id: string;
                public radius: number;
                public cooldown_ms: number;
                public focus_cost: number;
                public map_ability_levels: WUProtos.Data.GmTemplate.MapAbility.IMapAbilityLevel[];
                public static encode(message: WUProtos.Data.GmTemplate.IMapAbility, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.MapAbility;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.MapAbility;
                public static toObject(message: WUProtos.Data.GmTemplate.MapAbility, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace MapAbility {

                enum MapAbilityTargetType {
                    TARGET_NONE = 0,
                    TARGET_CHOOSE_ONE = 1,
                    TARGET_CHOOSE_FRIEND = 2,
                    TARGET_CHOOSE_ENEMY = 3,
                    TARGET_SELF = 4,
                    TARGET_RANGE = 5,
                    TARGET_ENEMIES_IN_RANGE = 6,
                    TARGET_ENTIRE_FRIENDS = 7,
                    TARGET_RANDOM_ONE = 8,
                    TARGET_RANDOM_FRIEND = 9,
                    TARGET_RANDOM_ENEMY = 10,
                    TARGET_ENTIRE_ENEMIES = 11,
                    TARGET_CHOOSE_FRIEND_NOT_SELF = 12
                }

                interface IMapAbilityLevel {
                    target_type?: (WUProtos.Data.GmTemplate.MapAbility.MapAbilityTargetType|null);
                    radius?: (number|null);
                    cooldown_ms?: (number|null);
                    focus_cost?: (number|null);
                    buff_gmt_id?: (string|null);
                }

                class MapAbilityLevel implements IMapAbilityLevel {
                    constructor(properties?: WUProtos.Data.GmTemplate.MapAbility.IMapAbilityLevel);
                    public target_type: WUProtos.Data.GmTemplate.MapAbility.MapAbilityTargetType;
                    public radius: number;
                    public cooldown_ms: number;
                    public focus_cost: number;
                    public buff_gmt_id: string;
                    public static encode(message: WUProtos.Data.GmTemplate.MapAbility.IMapAbilityLevel, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.MapAbility.MapAbilityLevel;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.MapAbility.MapAbilityLevel;
                    public static toObject(message: WUProtos.Data.GmTemplate.MapAbility.MapAbilityLevel, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IStoreSubcategory {
                id?: (string|null);
            }

            class StoreSubcategory implements IStoreSubcategory {
                constructor(properties?: WUProtos.Data.GmTemplate.IStoreSubcategory);
                public id: string;
                public static encode(message: WUProtos.Data.GmTemplate.IStoreSubcategory, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.StoreSubcategory;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.StoreSubcategory;
                public static toObject(message: WUProtos.Data.GmTemplate.StoreSubcategory, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IStoreConfig {
                id?: (string|null);
            }

            class StoreConfig implements IStoreConfig {
                constructor(properties?: WUProtos.Data.GmTemplate.IStoreConfig);
                public id: string;
                public static encode(message: WUProtos.Data.GmTemplate.IStoreConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.StoreConfig;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.StoreConfig;
                public static toObject(message: WUProtos.Data.GmTemplate.StoreConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IProtegoPattern {
                id?: (string|null);
            }

            class ProtegoPattern implements IProtegoPattern {
                constructor(properties?: WUProtos.Data.GmTemplate.IProtegoPattern);
                public id: string;
                public static encode(message: WUProtos.Data.GmTemplate.IProtegoPattern, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.GmTemplate.ProtegoPattern;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.GmTemplate.ProtegoPattern;
                public static toObject(message: WUProtos.Data.GmTemplate.ProtegoPattern, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface IHookQuestProgress {
            do_encounter?: (WUProtos.Data.HookQuestProgress.IDoEncounterHookQuestProgress|null);
            loot_outposts?: (WUProtos.Data.HookQuestProgress.ILootOutpostsQuestProgress|null);
            win_traces?: (WUProtos.Data.HookQuestProgress.IWinTracesQuestProgress|null);
            collect_potion_ingredients?: (WUProtos.Data.HookQuestProgress.ICollectPotionIngredientsQuestProgress|null);
            brew_potions?: (WUProtos.Data.HookQuestProgress.IBrewPotionsQuestProgress|null);
            walk_distance?: (WUProtos.Data.HookQuestProgress.IWalkDistanceQuestProgress|null);
            play_fortress_challenges?: (WUProtos.Data.HookQuestProgress.IPlayFortressChallengesQuestProgress|null);
            defeat_mob_in_challenges?: (WUProtos.Data.HookQuestProgress.IDefeatMobTypeInWizardingChallengeProgress|null);
            unlock_portmanteau?: (WUProtos.Data.HookQuestProgress.IUnlockPortmanteauProgress|null);
            use_potions?: (WUProtos.Data.HookQuestProgress.IUsePotionsProgress|null);
            place_stickers?: (WUProtos.Data.HookQuestProgress.IPlaceStickersProgress|null);
            collect_stickers?: (WUProtos.Data.HookQuestProgress.ICollectStickersProgress|null);
            cast_spells?: (WUProtos.Data.HookQuestProgress.ICastSpellsProgress|null);
        }

        class HookQuestProgress implements IHookQuestProgress {
            constructor(properties?: WUProtos.Data.IHookQuestProgress);
            public do_encounter?: (WUProtos.Data.HookQuestProgress.IDoEncounterHookQuestProgress|null);
            public loot_outposts?: (WUProtos.Data.HookQuestProgress.ILootOutpostsQuestProgress|null);
            public win_traces?: (WUProtos.Data.HookQuestProgress.IWinTracesQuestProgress|null);
            public collect_potion_ingredients?: (WUProtos.Data.HookQuestProgress.ICollectPotionIngredientsQuestProgress|null);
            public brew_potions?: (WUProtos.Data.HookQuestProgress.IBrewPotionsQuestProgress|null);
            public walk_distance?: (WUProtos.Data.HookQuestProgress.IWalkDistanceQuestProgress|null);
            public play_fortress_challenges?: (WUProtos.Data.HookQuestProgress.IPlayFortressChallengesQuestProgress|null);
            public defeat_mob_in_challenges?: (WUProtos.Data.HookQuestProgress.IDefeatMobTypeInWizardingChallengeProgress|null);
            public unlock_portmanteau?: (WUProtos.Data.HookQuestProgress.IUnlockPortmanteauProgress|null);
            public use_potions?: (WUProtos.Data.HookQuestProgress.IUsePotionsProgress|null);
            public place_stickers?: (WUProtos.Data.HookQuestProgress.IPlaceStickersProgress|null);
            public collect_stickers?: (WUProtos.Data.HookQuestProgress.ICollectStickersProgress|null);
            public cast_spells?: (WUProtos.Data.HookQuestProgress.ICastSpellsProgress|null);
            public Type?: ("do_encounter"|"loot_outposts"|"win_traces"|"collect_potion_ingredients"|"brew_potions"|"walk_distance"|"play_fortress_challenges"|"defeat_mob_in_challenges"|"unlock_portmanteau"|"use_potions"|"place_stickers"|"collect_stickers"|"cast_spells");
            public static encode(message: WUProtos.Data.IHookQuestProgress, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress;
            public static toObject(message: WUProtos.Data.HookQuestProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace HookQuestProgress {

            interface IPlaceStickersProgress {
                current_sticker_place_count?: (number|Long|null);
            }

            class PlaceStickersProgress implements IPlaceStickersProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.IPlaceStickersProgress);
                public current_sticker_place_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.IPlaceStickersProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.PlaceStickersProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.PlaceStickersProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.PlaceStickersProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlayFortressChallengesQuestProgress {
                current_challenge_count?: (number|Long|null);
            }

            class PlayFortressChallengesQuestProgress implements IPlayFortressChallengesQuestProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.IPlayFortressChallengesQuestProgress);
                public current_challenge_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.IPlayFortressChallengesQuestProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.PlayFortressChallengesQuestProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.PlayFortressChallengesQuestProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.PlayFortressChallengesQuestProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IUnlockPortmanteauProgress {
                current_unlock_count?: (number|Long|null);
            }

            class UnlockPortmanteauProgress implements IUnlockPortmanteauProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.IUnlockPortmanteauProgress);
                public current_unlock_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.IUnlockPortmanteauProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.UnlockPortmanteauProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.UnlockPortmanteauProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.UnlockPortmanteauProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IUsePotionsProgress {
                current_use_count?: (number|Long|null);
            }

            class UsePotionsProgress implements IUsePotionsProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.IUsePotionsProgress);
                public current_use_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.IUsePotionsProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.UsePotionsProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.UsePotionsProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.UsePotionsProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IWalkDistanceQuestProgress {
                current_micrometers_walked?: (number|Long|null);
            }

            class WalkDistanceQuestProgress implements IWalkDistanceQuestProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.IWalkDistanceQuestProgress);
                public current_micrometers_walked: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.IWalkDistanceQuestProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.WalkDistanceQuestProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.WalkDistanceQuestProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.WalkDistanceQuestProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IBrewPotionsQuestProgress {
                current_brew_count?: (number|Long|null);
            }

            class BrewPotionsQuestProgress implements IBrewPotionsQuestProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.IBrewPotionsQuestProgress);
                public current_brew_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.IBrewPotionsQuestProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.BrewPotionsQuestProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.BrewPotionsQuestProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.BrewPotionsQuestProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ICastSpellsProgress {
                current_spell_count?: (number|Long|null);
            }

            class CastSpellsProgress implements ICastSpellsProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.ICastSpellsProgress);
                public current_spell_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.ICastSpellsProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.CastSpellsProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.CastSpellsProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.CastSpellsProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ICollectPotionIngredientsQuestProgress {
                current_potion_ingredient_count?: (number|Long|null);
            }

            class CollectPotionIngredientsQuestProgress implements ICollectPotionIngredientsQuestProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.ICollectPotionIngredientsQuestProgress);
                public current_potion_ingredient_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.ICollectPotionIngredientsQuestProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.CollectPotionIngredientsQuestProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.CollectPotionIngredientsQuestProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.CollectPotionIngredientsQuestProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ICollectStickersProgress {
                current_collect_count?: (number|Long|null);
            }

            class CollectStickersProgress implements ICollectStickersProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.ICollectStickersProgress);
                public current_collect_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.ICollectStickersProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.CollectStickersProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.CollectStickersProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.CollectStickersProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ILootOutpostsQuestProgress {
                current_outpost_count?: (number|Long|null);
            }

            class LootOutpostsQuestProgress implements ILootOutpostsQuestProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.ILootOutpostsQuestProgress);
                public current_outpost_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.ILootOutpostsQuestProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.LootOutpostsQuestProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.LootOutpostsQuestProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.LootOutpostsQuestProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDefeatMobTypeInWizardingChallengeProgress {
                current_defeat_count?: (number|Long|null);
            }

            class DefeatMobTypeInWizardingChallengeProgress implements IDefeatMobTypeInWizardingChallengeProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.IDefeatMobTypeInWizardingChallengeProgress);
                public current_defeat_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.IDefeatMobTypeInWizardingChallengeProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.DefeatMobTypeInWizardingChallengeProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.DefeatMobTypeInWizardingChallengeProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.DefeatMobTypeInWizardingChallengeProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDoEncounterHookQuestProgress {
                current_win_count?: (number|Long|null);
            }

            class DoEncounterHookQuestProgress implements IDoEncounterHookQuestProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.IDoEncounterHookQuestProgress);
                public current_win_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.IDoEncounterHookQuestProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.DoEncounterHookQuestProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.DoEncounterHookQuestProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.DoEncounterHookQuestProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IWinTracesQuestProgress {
                current_trace_count?: (number|Long|null);
            }

            class WinTracesQuestProgress implements IWinTracesQuestProgress {
                constructor(properties?: WUProtos.Data.HookQuestProgress.IWinTracesQuestProgress);
                public current_trace_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestProgress.IWinTracesQuestProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestProgress.WinTracesQuestProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestProgress.WinTracesQuestProgress;
                public static toObject(message: WUProtos.Data.HookQuestProgress.WinTracesQuestProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface IHookQuestTask {
            do_encounter?: (WUProtos.Data.HookQuestTask.IDoEncounterHookQuestTask|null);
            loot_outposts?: (WUProtos.Data.HookQuestTask.ILootOutpostsQuestTask|null);
            win_traces?: (WUProtos.Data.HookQuestTask.IWinTracesQuestTask|null);
            collect_potion_ingredients?: (WUProtos.Data.HookQuestTask.ICollectPotionIngredientsQuestTask|null);
            brew_potions?: (WUProtos.Data.HookQuestTask.IBrewPotionsQuestTask|null);
            walk_distance?: (WUProtos.Data.HookQuestTask.IWalkDistanceQuestTask|null);
            play_fortress_challenges?: (WUProtos.Data.HookQuestTask.IPlayFortressChallengesQuestTask|null);
            defeat_mob_in_challenges?: (WUProtos.Data.HookQuestTask.IDefeatMobTypeInWizardingChallengeQuestTask|null);
            unlock_portmanteau?: (WUProtos.Data.HookQuestTask.IUnlockPortmanteauQuestTask|null);
            use_potions?: (WUProtos.Data.HookQuestTask.IUsePotionsQuestTask|null);
            place_stickers?: (WUProtos.Data.HookQuestTask.IPlaceStickersQuestTask|null);
            collect_stickers?: (WUProtos.Data.HookQuestTask.ICollectStickersQuestTask|null);
            cast_spells?: (WUProtos.Data.HookQuestTask.ICastSpellsQuestTask|null);
        }

        class HookQuestTask implements IHookQuestTask {
            constructor(properties?: WUProtos.Data.IHookQuestTask);
            public do_encounter?: (WUProtos.Data.HookQuestTask.IDoEncounterHookQuestTask|null);
            public loot_outposts?: (WUProtos.Data.HookQuestTask.ILootOutpostsQuestTask|null);
            public win_traces?: (WUProtos.Data.HookQuestTask.IWinTracesQuestTask|null);
            public collect_potion_ingredients?: (WUProtos.Data.HookQuestTask.ICollectPotionIngredientsQuestTask|null);
            public brew_potions?: (WUProtos.Data.HookQuestTask.IBrewPotionsQuestTask|null);
            public walk_distance?: (WUProtos.Data.HookQuestTask.IWalkDistanceQuestTask|null);
            public play_fortress_challenges?: (WUProtos.Data.HookQuestTask.IPlayFortressChallengesQuestTask|null);
            public defeat_mob_in_challenges?: (WUProtos.Data.HookQuestTask.IDefeatMobTypeInWizardingChallengeQuestTask|null);
            public unlock_portmanteau?: (WUProtos.Data.HookQuestTask.IUnlockPortmanteauQuestTask|null);
            public use_potions?: (WUProtos.Data.HookQuestTask.IUsePotionsQuestTask|null);
            public place_stickers?: (WUProtos.Data.HookQuestTask.IPlaceStickersQuestTask|null);
            public collect_stickers?: (WUProtos.Data.HookQuestTask.ICollectStickersQuestTask|null);
            public cast_spells?: (WUProtos.Data.HookQuestTask.ICastSpellsQuestTask|null);
            public Type?: ("do_encounter"|"loot_outposts"|"win_traces"|"collect_potion_ingredients"|"brew_potions"|"walk_distance"|"play_fortress_challenges"|"defeat_mob_in_challenges"|"unlock_portmanteau"|"use_potions"|"place_stickers"|"collect_stickers"|"cast_spells");
            public static encode(message: WUProtos.Data.IHookQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask;
            public static toObject(message: WUProtos.Data.HookQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace HookQuestTask {

            interface IPlaceStickersQuestTask {
                required_place_count?: (number|Long|null);
                sticker_gmt_id?: (string|null);
                sticker_page_gmt_id?: (string|null);
                sticker_family_gmt_id?: (string|null);
            }

            class PlaceStickersQuestTask implements IPlaceStickersQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.IPlaceStickersQuestTask);
                public required_place_count: (number|Long);
                public sticker_gmt_id: string;
                public sticker_page_gmt_id: string;
                public sticker_family_gmt_id: string;
                public static encode(message: WUProtos.Data.HookQuestTask.IPlaceStickersQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.PlaceStickersQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.PlaceStickersQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.PlaceStickersQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlayFortressChallengesQuestTask {
                required_challenge_count?: (number|Long|null);
                required_least_player_count?: (number|Long|null);
            }

            class PlayFortressChallengesQuestTask implements IPlayFortressChallengesQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.IPlayFortressChallengesQuestTask);
                public required_challenge_count: (number|Long);
                public required_least_player_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestTask.IPlayFortressChallengesQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.PlayFortressChallengesQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.PlayFortressChallengesQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.PlayFortressChallengesQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IUnlockPortmanteauQuestTask {
                required_unlock_count?: (number|Long|null);
                minimum_distance_type?: (number|null);
            }

            class UnlockPortmanteauQuestTask implements IUnlockPortmanteauQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.IUnlockPortmanteauQuestTask);
                public required_unlock_count: (number|Long);
                public minimum_distance_type: number;
                public static encode(message: WUProtos.Data.HookQuestTask.IUnlockPortmanteauQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.UnlockPortmanteauQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.UnlockPortmanteauQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.UnlockPortmanteauQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IWalkDistanceQuestTask {
                required_micrometers_to_walk?: (number|Long|null);
            }

            class WalkDistanceQuestTask implements IWalkDistanceQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.IWalkDistanceQuestTask);
                public required_micrometers_to_walk: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestTask.IWalkDistanceQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.WalkDistanceQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.WalkDistanceQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.WalkDistanceQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IUsePotionsQuestTask {
                required_use_count?: (number|Long|null);
                required_potion?: (string|null);
            }

            class UsePotionsQuestTask implements IUsePotionsQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.IUsePotionsQuestTask);
                public required_use_count: (number|Long);
                public required_potion: string;
                public static encode(message: WUProtos.Data.HookQuestTask.IUsePotionsQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.UsePotionsQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.UsePotionsQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.UsePotionsQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IBrewPotionsQuestTask {
                required_brew_count?: (number|Long|null);
            }

            class BrewPotionsQuestTask implements IBrewPotionsQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.IBrewPotionsQuestTask);
                public required_brew_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestTask.IBrewPotionsQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.BrewPotionsQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.BrewPotionsQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.BrewPotionsQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ICastSpellsQuestTask {
                required_spell_count?: (number|Long|null);
                required_mastery_level?: (number|null);
            }

            class CastSpellsQuestTask implements ICastSpellsQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.ICastSpellsQuestTask);
                public required_spell_count: (number|Long);
                public required_mastery_level: number;
                public static encode(message: WUProtos.Data.HookQuestTask.ICastSpellsQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.CastSpellsQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.CastSpellsQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.CastSpellsQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ICollectPotionIngredientsQuestTask {
                required_potion_ingredient_count?: (number|Long|null);
                ingredient_gmt_id?: (string|null);
            }

            class CollectPotionIngredientsQuestTask implements ICollectPotionIngredientsQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.ICollectPotionIngredientsQuestTask);
                public required_potion_ingredient_count: (number|Long);
                public ingredient_gmt_id: string;
                public static encode(message: WUProtos.Data.HookQuestTask.ICollectPotionIngredientsQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.CollectPotionIngredientsQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.CollectPotionIngredientsQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.CollectPotionIngredientsQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ICollectStickersQuestTask {
                required_collect_count?: (number|Long|null);
                sticker_gmt_id?: (string|null);
                sticker_page_gmt_id?: (string|null);
                sticker_family_gmt_id?: (string|null);
            }

            class CollectStickersQuestTask implements ICollectStickersQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.ICollectStickersQuestTask);
                public required_collect_count: (number|Long);
                public sticker_gmt_id: string;
                public sticker_page_gmt_id: string;
                public sticker_family_gmt_id: string;
                public static encode(message: WUProtos.Data.HookQuestTask.ICollectStickersQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.CollectStickersQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.CollectStickersQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.CollectStickersQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ILootOutpostsQuestTask {
                required_outposts_count?: (number|Long|null);
            }

            class LootOutpostsQuestTask implements ILootOutpostsQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.ILootOutpostsQuestTask);
                public required_outposts_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestTask.ILootOutpostsQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.LootOutpostsQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.LootOutpostsQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.LootOutpostsQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDefeatMobTypeInWizardingChallengeQuestTask {
                required_defeat_count?: (number|Long|null);
                encounter_gmt_id?: (string|null);
            }

            class DefeatMobTypeInWizardingChallengeQuestTask implements IDefeatMobTypeInWizardingChallengeQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.IDefeatMobTypeInWizardingChallengeQuestTask);
                public required_defeat_count: (number|Long);
                public encounter_gmt_id: string;
                public static encode(message: WUProtos.Data.HookQuestTask.IDefeatMobTypeInWizardingChallengeQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.DefeatMobTypeInWizardingChallengeQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.DefeatMobTypeInWizardingChallengeQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.DefeatMobTypeInWizardingChallengeQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDoEncounterHookQuestTask {
                encounter_gmt_id?: (string|null);
                required_win_count?: (number|Long|null);
            }

            class DoEncounterHookQuestTask implements IDoEncounterHookQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.IDoEncounterHookQuestTask);
                public encounter_gmt_id: string;
                public required_win_count: (number|Long);
                public static encode(message: WUProtos.Data.HookQuestTask.IDoEncounterHookQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.DoEncounterHookQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.DoEncounterHookQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.DoEncounterHookQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IWinTracesQuestTask {
                required_trace_count?: (number|Long|null);
                encounter_gmt_id?: (string|null);
                registry_page_gmt_id?: (string|null);
                family_gmt_id?: (string|null);
                difficulty?: (number|null);
            }

            class WinTracesQuestTask implements IWinTracesQuestTask {
                constructor(properties?: WUProtos.Data.HookQuestTask.IWinTracesQuestTask);
                public required_trace_count: (number|Long);
                public encounter_gmt_id: string;
                public registry_page_gmt_id: string;
                public family_gmt_id: string;
                public difficulty: number;
                public static encode(message: WUProtos.Data.HookQuestTask.IWinTracesQuestTask, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.HookQuestTask.WinTracesQuestTask;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.HookQuestTask.WinTracesQuestTask;
                public static toObject(message: WUProtos.Data.HookQuestTask.WinTracesQuestTask, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface ILexiconApprovedClientTelemetry {
            startup?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStartup|null);
            swish_spell_game_start?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySwishSpellGameStart|null);
            swish_spell_game_end?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySwishSpellGameEnd|null);
            asset_load?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryAssetLoad|null);
            bundle_download?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryBundleDownload|null);
            stopwatch?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStopwatch|null);
            smoke_test?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySmokeTest|null);
            environmental_tags_ui_entered?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEnvironmentalTagsUIEntered|null);
            environmental_tags_weather_acknowledged?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEnvironmentalTagSevereWeatherAcknowledged|null);
            avatar_interact?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryAvatarInteract|null);
            rewards_flow?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRewardsFlow|null);
            portkeys_wrackspurt_tapped?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysWrackspurtTapped|null);
            portkeys_out_of_bounds_reached?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysOutOfBoundsReached|null);
            portkeys_advanced_ar_check?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysAdvancedARCheck|null);
            profession_main_menu?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionMainMenu|null);
            profession_node_selected?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionNodeSelected|null);
            button_press?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryButtonPress|null);
            select_mob?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryWizardingChallengeSelectMob|null);
            more_info?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryWizardingChallengeMoreInfo|null);
            landmark_interact?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLandmarkInteract|null);
            lock_on_attempt?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOffensiveLockOnAttempt|null);
            offensive_trace_attempt?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOffensiveTraceAttempt|null);
            protego_cast_attempt?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameProtegoCastAttempt|null);
            out_of_energy_shown?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOutOfEnergyDialogShown|null);
            out_of_energy_purchase?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOutOfEnergyPurchaseButton|null);
            combat_potion_button?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGamePotionButton|null);
            impression?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryImpression|null);
            description_clickthrough?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryDescriptionClickthrough|null);
            hyperlink_clickthrough?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryHyperlinkClickthrough|null);
            surface_detection?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySurfaceDetection|null);
            encounter_start?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEncounterStart|null);
            permission_requested?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPermissionsRequested|null);
            permission_check_failed?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPermissionsCheckFailed|null);
            deeplink_triggered?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryDeeplinkTriggered|null);
            login_start?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLoginStart|null);
            login_complete?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLoginComplete|null);
            potions_master_note_attempt?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPotionsMasterNoteAttempt|null);
            profile_portrait_action?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfilePortraitAction|null);
            profile_button_randomize?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonRandomize|null);
            profile_button_lens?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonLens|null);
            profile_button_asset?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonAssset|null);
            profile_screengrab?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileScreenGrab|null);
            outpost_interact?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryOutpostInteract|null);
            greenhouse_interact?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryGreenhouseInteract|null);
            family_details_clicked?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryFamilyDetails|null);
            sticker_details_clicked?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStickerDetails|null);
            registry_info_clicked?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRegistryInfo|null);
            rate_app?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRateApp|null);
            exception_info?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryException|null);
            ar_mode_toggled?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsARModeToggled|null);
            battery_mode_toggled?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsBatteryModeToggled|null);
            auth_updated?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsAuthUpdated|null);
            store_popup_open?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStorePopupOpen|null);
            store_tab_open?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStoreTabOpen|null);
            vault_popup_open?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryVaultItemImpression|null);
            vault_tab_open?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryVaultTabImpression|null);
            server_data?: (WUProtos.Data.LexiconApprovedClientTelemetry.IPlatformServerData|null);
        }

        class LexiconApprovedClientTelemetry implements ILexiconApprovedClientTelemetry {
            constructor(properties?: WUProtos.Data.ILexiconApprovedClientTelemetry);
            public startup?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStartup|null);
            public swish_spell_game_start?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySwishSpellGameStart|null);
            public swish_spell_game_end?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySwishSpellGameEnd|null);
            public asset_load?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryAssetLoad|null);
            public bundle_download?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryBundleDownload|null);
            public stopwatch?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStopwatch|null);
            public smoke_test?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySmokeTest|null);
            public environmental_tags_ui_entered?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEnvironmentalTagsUIEntered|null);
            public environmental_tags_weather_acknowledged?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEnvironmentalTagSevereWeatherAcknowledged|null);
            public avatar_interact?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryAvatarInteract|null);
            public rewards_flow?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRewardsFlow|null);
            public portkeys_wrackspurt_tapped?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysWrackspurtTapped|null);
            public portkeys_out_of_bounds_reached?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysOutOfBoundsReached|null);
            public portkeys_advanced_ar_check?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysAdvancedARCheck|null);
            public profession_main_menu?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionMainMenu|null);
            public profession_node_selected?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionNodeSelected|null);
            public button_press?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryButtonPress|null);
            public select_mob?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryWizardingChallengeSelectMob|null);
            public more_info?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryWizardingChallengeMoreInfo|null);
            public landmark_interact?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLandmarkInteract|null);
            public lock_on_attempt?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOffensiveLockOnAttempt|null);
            public offensive_trace_attempt?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOffensiveTraceAttempt|null);
            public protego_cast_attempt?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameProtegoCastAttempt|null);
            public out_of_energy_shown?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOutOfEnergyDialogShown|null);
            public out_of_energy_purchase?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOutOfEnergyPurchaseButton|null);
            public combat_potion_button?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGamePotionButton|null);
            public impression?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryImpression|null);
            public description_clickthrough?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryDescriptionClickthrough|null);
            public hyperlink_clickthrough?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryHyperlinkClickthrough|null);
            public surface_detection?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySurfaceDetection|null);
            public encounter_start?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEncounterStart|null);
            public permission_requested?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPermissionsRequested|null);
            public permission_check_failed?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPermissionsCheckFailed|null);
            public deeplink_triggered?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryDeeplinkTriggered|null);
            public login_start?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLoginStart|null);
            public login_complete?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLoginComplete|null);
            public potions_master_note_attempt?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPotionsMasterNoteAttempt|null);
            public profile_portrait_action?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfilePortraitAction|null);
            public profile_button_randomize?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonRandomize|null);
            public profile_button_lens?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonLens|null);
            public profile_button_asset?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonAssset|null);
            public profile_screengrab?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileScreenGrab|null);
            public outpost_interact?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryOutpostInteract|null);
            public greenhouse_interact?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryGreenhouseInteract|null);
            public family_details_clicked?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryFamilyDetails|null);
            public sticker_details_clicked?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStickerDetails|null);
            public registry_info_clicked?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRegistryInfo|null);
            public rate_app?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRateApp|null);
            public exception_info?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryException|null);
            public ar_mode_toggled?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsARModeToggled|null);
            public battery_mode_toggled?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsBatteryModeToggled|null);
            public auth_updated?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsAuthUpdated|null);
            public store_popup_open?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStorePopupOpen|null);
            public store_tab_open?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStoreTabOpen|null);
            public vault_popup_open?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryVaultItemImpression|null);
            public vault_tab_open?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryVaultTabImpression|null);
            public server_data?: (WUProtos.Data.LexiconApprovedClientTelemetry.IPlatformServerData|null);
            public TelemetryData?: ("startup"|"swish_spell_game_start"|"swish_spell_game_end"|"asset_load"|"bundle_download"|"stopwatch"|"smoke_test"|"environmental_tags_ui_entered"|"environmental_tags_weather_acknowledged"|"avatar_interact"|"rewards_flow"|"portkeys_wrackspurt_tapped"|"portkeys_out_of_bounds_reached"|"portkeys_advanced_ar_check"|"profession_main_menu"|"profession_node_selected"|"button_press"|"select_mob"|"more_info"|"landmark_interact"|"lock_on_attempt"|"offensive_trace_attempt"|"protego_cast_attempt"|"out_of_energy_shown"|"out_of_energy_purchase"|"combat_potion_button"|"impression"|"description_clickthrough"|"hyperlink_clickthrough"|"surface_detection"|"encounter_start"|"permission_requested"|"permission_check_failed"|"deeplink_triggered"|"login_start"|"login_complete"|"potions_master_note_attempt"|"profile_portrait_action"|"profile_button_randomize"|"profile_button_lens"|"profile_button_asset"|"profile_screengrab"|"outpost_interact"|"greenhouse_interact"|"family_details_clicked"|"sticker_details_clicked"|"registry_info_clicked"|"rate_app"|"exception_info"|"ar_mode_toggled"|"battery_mode_toggled"|"auth_updated"|"store_popup_open"|"store_tab_open"|"vault_popup_open"|"vault_tab_open");
            public static encode(message: WUProtos.Data.ILexiconApprovedClientTelemetry, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry;
            public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace LexiconApprovedClientTelemetry {

            interface IClientTelemetrySwishSpellGameStart {
                encounter_id?: (string|null);
                attempt_number?: (number|null);
                player_level?: (number|null);
                encounter_proto_id?: (string|null);
                spell_pattern?: (string|null);
                ar_mode?: (WUProtos.Data.ARMode|null);
            }

            class ClientTelemetrySwishSpellGameStart implements IClientTelemetrySwishSpellGameStart {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySwishSpellGameStart);
                public encounter_id: string;
                public attempt_number: number;
                public player_level: number;
                public encounter_proto_id: string;
                public spell_pattern: string;
                public ar_mode: WUProtos.Data.ARMode;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySwishSpellGameStart, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySwishSpellGameStart;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySwishSpellGameStart;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySwishSpellGameStart, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryWizardingChallengeSelectMob {
                mob_level?: (number|null);
                mob_affinity?: (string|null);
                mob_gmt_id?: (string|null);
                player_profession_rank?: (number|null);
                player_profession_gmt_id?: (string|null);
                is_mob_already_engaged?: (WUProtos.Enums.ActiveEngagement|null);
                player_engagement_with_mob?: (string|null);
            }

            class ClientTelemetryWizardingChallengeSelectMob implements IClientTelemetryWizardingChallengeSelectMob {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryWizardingChallengeSelectMob);
                public mob_level: number;
                public mob_affinity: string;
                public mob_gmt_id: string;
                public player_profession_rank: number;
                public player_profession_gmt_id: string;
                public is_mob_already_engaged: WUProtos.Enums.ActiveEngagement;
                public player_engagement_with_mob: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryWizardingChallengeSelectMob, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryWizardingChallengeSelectMob;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryWizardingChallengeSelectMob;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryWizardingChallengeSelectMob, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryWizardingChallengeMoreInfo {
                mob_level?: (number|null);
                mob_affinity?: (string|null);
                player_profession_rank?: (number|null);
                player_profession_gmt_id?: (string|null);
                is_mob_already_engaged?: (WUProtos.Enums.ActiveEngagement|null);
            }

            class ClientTelemetryWizardingChallengeMoreInfo implements IClientTelemetryWizardingChallengeMoreInfo {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryWizardingChallengeMoreInfo);
                public mob_level: number;
                public mob_affinity: string;
                public player_profession_rank: number;
                public player_profession_gmt_id: string;
                public is_mob_already_engaged: WUProtos.Enums.ActiveEngagement;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryWizardingChallengeMoreInfo, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryWizardingChallengeMoreInfo;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryWizardingChallengeMoreInfo;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryWizardingChallengeMoreInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryStartup {
                client_version?: (string|null);
                device_type?: (string|null);
                first_time?: (boolean|null);
                load_to_tos_login_time?: (number|null);
                load_to_map_time?: (number|null);
                device_os?: (string|null);
                graphics_device_vendor?: (string|null);
                graphics_device_name?: (string|null);
                graphics_device_type?: (string|null);
                graphics_shader_level?: (number|null);
                subsystem_load_times?: (WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStartup.IClientTelemetrySubsystemStartup[]|null);
                player_nickname?: (string|null);
            }

            class ClientTelemetryStartup implements IClientTelemetryStartup {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStartup);
                public client_version: string;
                public device_type: string;
                public first_time: boolean;
                public load_to_tos_login_time: number;
                public load_to_map_time: number;
                public device_os: string;
                public graphics_device_vendor: string;
                public graphics_device_name: string;
                public graphics_device_type: string;
                public graphics_shader_level: number;
                public subsystem_load_times: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStartup.IClientTelemetrySubsystemStartup[];
                public player_nickname: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStartup, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStartup;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStartup;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStartup, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientTelemetryStartup {

                interface IClientTelemetrySubsystemStartup {
                    system_name?: (string|null);
                    load_time?: (number|null);
                }

                class ClientTelemetrySubsystemStartup implements IClientTelemetrySubsystemStartup {
                    constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStartup.IClientTelemetrySubsystemStartup);
                    public system_name: string;
                    public load_time: number;
                    public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStartup.IClientTelemetrySubsystemStartup, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStartup.ClientTelemetrySubsystemStartup;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStartup.ClientTelemetrySubsystemStartup;
                    public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStartup.ClientTelemetrySubsystemStartup, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IClientTelemetrySettingsARModeToggled {
                ar_mode?: (WUProtos.Data.ARMode|null);
            }

            class ClientTelemetrySettingsARModeToggled implements IClientTelemetrySettingsARModeToggled {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsARModeToggled);
                public ar_mode: WUProtos.Data.ARMode;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsARModeToggled, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySettingsARModeToggled;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySettingsARModeToggled;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySettingsARModeToggled, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryProfileScreenGrab {
                screengrab_location?: (WUProtos.Enums.CategoryShareLocation|null);
            }

            class ClientTelemetryProfileScreenGrab implements IClientTelemetryProfileScreenGrab {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileScreenGrab);
                public screengrab_location: WUProtos.Enums.CategoryShareLocation;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileScreenGrab, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileScreenGrab;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileScreenGrab;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileScreenGrab, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryProfilePortraitAction {
                baseline_src?: (WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfilePortraitAction.ProfileTabSource|null);
                portrait_format?: (WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfilePortraitAction.PortraitType|null);
                portrait_action?: (WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfilePortraitAction.PortraitAction|null);
                portrait_lens_top?: (string|null);
                portrait_lens_mid?: (string|null);
                portrait_lens_bottom?: (string|null);
                portrait_frame?: (string|null);
                portrait_filter?: (string|null);
                portrait_sticker_ids?: (string[]|null);
                portrait_sticker_count?: (number|null);
                share_source?: (WUProtos.Enums.CategoryShareLocation|null);
                share_type?: (WUProtos.Enums.DownloadType|null);
                share_network?: (string|null);
                download_source?: (WUProtos.Enums.CategoryShareLocation|null);
                download_type?: (WUProtos.Enums.DownloadType|null);
            }

            class ClientTelemetryProfilePortraitAction implements IClientTelemetryProfilePortraitAction {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfilePortraitAction);
                public baseline_src: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfilePortraitAction.ProfileTabSource;
                public portrait_format: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfilePortraitAction.PortraitType;
                public portrait_action: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfilePortraitAction.PortraitAction;
                public portrait_lens_top: string;
                public portrait_lens_mid: string;
                public portrait_lens_bottom: string;
                public portrait_frame: string;
                public portrait_filter: string;
                public portrait_sticker_ids: string[];
                public portrait_sticker_count: number;
                public share_source: WUProtos.Enums.CategoryShareLocation;
                public share_type: WUProtos.Enums.DownloadType;
                public share_network: string;
                public download_source: WUProtos.Enums.CategoryShareLocation;
                public download_type: WUProtos.Enums.DownloadType;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfilePortraitAction, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfilePortraitAction;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfilePortraitAction;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfilePortraitAction, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientTelemetryProfilePortraitAction {

                enum PortraitAction {
                    PORTRATE_ACTION_UNSET = 0,
                    PORTRAIT_ACTION_SAVE = 1,
                    PORTRAIT_ACTION_DOWNLOAD = 2,
                    PORTRAIT_ACTION_SHARE = 3
                }

                enum PortraitType {
                    PORTRAIT_TYPE_UNSET = 0,
                    PORTRAIT_PHOTO = 1,
                    PORTRAIT_VIDEO = 2
                }

                enum ProfileTabSource {
                    PROFILE_TAB_SOURCE_UNSET = 0,
                    TAB_NEW = 1,
                    TAB_LAST_PHOTO = 2,
                    TAB_STOCK_PHOTO = 3,
                    TAB_GALLERY = 4
                }
            }

            interface IClientTelemetryProfessionProgress {
                profession_gmt_id?: (string|null);
                rank_points?: (number|null);
            }

            class ClientTelemetryProfessionProgress implements IClientTelemetryProfessionProgress {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionProgress);
                public profession_gmt_id: string;
                public rank_points: number;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfessionProgress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfessionProgress;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfessionProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryProfessionNodeSelected {
                player_level?: (number|null);
                active_profession_gmt_id?: (string|null);
                profession_progress?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionProgress[]|null);
                node_id?: (string|null);
            }

            class ClientTelemetryProfessionNodeSelected implements IClientTelemetryProfessionNodeSelected {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionNodeSelected);
                public player_level: number;
                public active_profession_gmt_id: string;
                public profession_progress: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionProgress[];
                public node_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionNodeSelected, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfessionNodeSelected;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfessionNodeSelected;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfessionNodeSelected, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryProfessionMainMenu {
                player_level?: (number|null);
                active_profession_gmt_id?: (string|null);
                profession_progress?: (WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionProgress[]|null);
            }

            class ClientTelemetryProfessionMainMenu implements IClientTelemetryProfessionMainMenu {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionMainMenu);
                public player_level: number;
                public active_profession_gmt_id: string;
                public profession_progress: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionProgress[];
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfessionMainMenu, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfessionMainMenu;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfessionMainMenu;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfessionMainMenu, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryOutpostInteract {
                outpost_type?: (string|null);
                common_data?: (WUProtos.Data.IPOIInteract|null);
            }

            class ClientTelemetryOutpostInteract implements IClientTelemetryOutpostInteract {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryOutpostInteract);
                public outpost_type: string;
                public common_data?: (WUProtos.Data.IPOIInteract|null);
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryOutpostInteract, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryOutpostInteract;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryOutpostInteract;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryOutpostInteract, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryLandmarkInteract {
                landmark_type?: (string|null);
                common_data?: (WUProtos.Data.IPOIInteract|null);
            }

            class ClientTelemetryLandmarkInteract implements IClientTelemetryLandmarkInteract {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLandmarkInteract);
                public landmark_type: string;
                public common_data?: (WUProtos.Data.IPOIInteract|null);
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLandmarkInteract, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryLandmarkInteract;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryLandmarkInteract;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryLandmarkInteract, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryGreenhouseInteract {
                common_data?: (WUProtos.Data.IPOIInteract|null);
            }

            class ClientTelemetryGreenhouseInteract implements IClientTelemetryGreenhouseInteract {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryGreenhouseInteract);
                public common_data?: (WUProtos.Data.IPOIInteract|null);
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryGreenhouseInteract, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryGreenhouseInteract;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryGreenhouseInteract;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryGreenhouseInteract, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryCombatGameProtegoCastAttempt {
                player_level?: (number|null);
                encounter_id?: (string|null);
                spell_id?: (string|null);
                outcome?: (WUProtos.Enums.CombatPhaseOutcome|null);
                checkpoint_fail_round?: (number|null);
            }

            class ClientTelemetryCombatGameProtegoCastAttempt implements IClientTelemetryCombatGameProtegoCastAttempt {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameProtegoCastAttempt);
                public player_level: number;
                public encounter_id: string;
                public spell_id: string;
                public outcome: WUProtos.Enums.CombatPhaseOutcome;
                public checkpoint_fail_round: number;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameProtegoCastAttempt, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameProtegoCastAttempt;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameProtegoCastAttempt;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameProtegoCastAttempt, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryCombatGameOffensiveTraceAttempt {
                player_level?: (number|null);
                encounter_id?: (string|null);
                spell_id?: (string|null);
                outcome?: (WUProtos.Enums.CombatPhaseOutcome|null);
                checkpoint_fail_round?: (number|null);
            }

            class ClientTelemetryCombatGameOffensiveTraceAttempt implements IClientTelemetryCombatGameOffensiveTraceAttempt {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOffensiveTraceAttempt);
                public player_level: number;
                public encounter_id: string;
                public spell_id: string;
                public outcome: WUProtos.Enums.CombatPhaseOutcome;
                public checkpoint_fail_round: number;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOffensiveTraceAttempt, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOffensiveTraceAttempt;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOffensiveTraceAttempt;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOffensiveTraceAttempt, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryCombatGameOffensiveLockOnAttempt {
                player_level?: (number|null);
                encounter_id?: (string|null);
                node_location?: (string|null);
                outcome?: (WUProtos.Enums.CombatPhaseOutcome|null);
            }

            class ClientTelemetryCombatGameOffensiveLockOnAttempt implements IClientTelemetryCombatGameOffensiveLockOnAttempt {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOffensiveLockOnAttempt);
                public player_level: number;
                public encounter_id: string;
                public node_location: string;
                public outcome: WUProtos.Enums.CombatPhaseOutcome;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOffensiveLockOnAttempt, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOffensiveLockOnAttempt;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOffensiveLockOnAttempt;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOffensiveLockOnAttempt, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryPortkeysAdvancedARCheck {
                advanced_ar_on?: (boolean|null);
                portkey_id?: (string|null);
                ar_mode?: (WUProtos.Data.ARMode|null);
            }

            class ClientTelemetryPortkeysAdvancedARCheck implements IClientTelemetryPortkeysAdvancedARCheck {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysAdvancedARCheck);
                public advanced_ar_on: boolean;
                public portkey_id: string;
                public ar_mode: WUProtos.Data.ARMode;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysAdvancedARCheck, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPortkeysAdvancedARCheck;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPortkeysAdvancedARCheck;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPortkeysAdvancedARCheck, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryVaultTabImpression {
                category_name?: (string|null);
            }

            class ClientTelemetryVaultTabImpression implements IClientTelemetryVaultTabImpression {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryVaultTabImpression);
                public category_name: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryVaultTabImpression, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryVaultTabImpression;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryVaultTabImpression;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryVaultTabImpression, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryVaultItemImpression {
                vault_item_id?: (string|null);
            }

            class ClientTelemetryVaultItemImpression implements IClientTelemetryVaultItemImpression {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryVaultItemImpression);
                public vault_item_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryVaultItemImpression, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryVaultItemImpression;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryVaultItemImpression;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryVaultItemImpression, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetrySwishSpellGameEnd {
                encounter_id?: (string|null);
                attempt_number?: (number|null);
                success?: (boolean|null);
                fail_reason?: (WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySwishSpellGameEnd.FailReason|null);
                cast_time?: (number|null);
                failed_checkpoint_number?: (number|null);
                average_drawing_error?: (number|null);
                median_drawing_error?: (number|null);
                final_spellbar_score?: (number|null);
                encounter_proto_id?: (string|null);
            }

            class ClientTelemetrySwishSpellGameEnd implements IClientTelemetrySwishSpellGameEnd {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySwishSpellGameEnd);
                public encounter_id: string;
                public attempt_number: number;
                public success: boolean;
                public fail_reason: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySwishSpellGameEnd.FailReason;
                public cast_time: number;
                public failed_checkpoint_number: number;
                public average_drawing_error: number;
                public median_drawing_error: number;
                public final_spellbar_score: number;
                public encounter_proto_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySwishSpellGameEnd, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySwishSpellGameEnd;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySwishSpellGameEnd;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySwishSpellGameEnd, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientTelemetrySwishSpellGameEnd {

                enum FailReason {
                    none = 0,
                    timer = 1,
                    checkpoint = 2,
                    score = 3
                }
            }

            interface IClientTelemetrySurfaceDetection {
                encounter_gmt_id?: (string|null);
                found_surface?: (boolean|null);
            }

            class ClientTelemetrySurfaceDetection implements IClientTelemetrySurfaceDetection {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySurfaceDetection);
                public encounter_gmt_id: string;
                public found_surface: boolean;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySurfaceDetection, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySurfaceDetection;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySurfaceDetection;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySurfaceDetection, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryStoreTabOpen {
                page_id?: (string|null);
            }

            class ClientTelemetryStoreTabOpen implements IClientTelemetryStoreTabOpen {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStoreTabOpen);
                public page_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStoreTabOpen, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStoreTabOpen;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStoreTabOpen;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStoreTabOpen, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryStorePopupOpen {
                pack_id?: (string|null);
                player_can_afford?: (boolean|null);
                currency_type?: (string[]|null);
                cost?: ((number|Long)[]|null);
                player_wallet?: ((number|Long)[]|null);
                real_money_cost?: (number|null);
                real_money_currency_code?: (string|null);
            }

            class ClientTelemetryStorePopupOpen implements IClientTelemetryStorePopupOpen {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStorePopupOpen);
                public pack_id: string;
                public player_can_afford: boolean;
                public currency_type: string[];
                public cost: (number|Long)[];
                public player_wallet: (number|Long)[];
                public real_money_cost: number;
                public real_money_currency_code: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStorePopupOpen, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStorePopupOpen;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStorePopupOpen;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStorePopupOpen, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryStopwatch {
                event_name?: (string|null);
                min?: (number|null);
                max?: (number|null);
                average?: (number|null);
            }

            class ClientTelemetryStopwatch implements IClientTelemetryStopwatch {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStopwatch);
                public event_name: string;
                public min: number;
                public max: number;
                public average: number;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStopwatch, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStopwatch;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStopwatch;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStopwatch, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetrySettingsBatteryModeToggled {
                battery_mode?: (boolean|null);
            }

            class ClientTelemetrySettingsBatteryModeToggled implements IClientTelemetrySettingsBatteryModeToggled {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsBatteryModeToggled);
                public battery_mode: boolean;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsBatteryModeToggled, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySettingsBatteryModeToggled;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySettingsBatteryModeToggled;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySettingsBatteryModeToggled, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetrySettingsAuthUpdated {
                primary_auth_channel?: (string|null);
                secondary_auth_channel?: (string|null);
                platform?: (string|null);
            }

            class ClientTelemetrySettingsAuthUpdated implements IClientTelemetrySettingsAuthUpdated {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsAuthUpdated);
                public primary_auth_channel: string;
                public secondary_auth_channel: string;
                public platform: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySettingsAuthUpdated, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySettingsAuthUpdated;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySettingsAuthUpdated;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySettingsAuthUpdated, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryStickerDetails {
                collection_id?: (string|null);
            }

            class ClientTelemetryStickerDetails implements IClientTelemetryStickerDetails {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStickerDetails);
                public collection_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryStickerDetails, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStickerDetails;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStickerDetails;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryStickerDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryProfileButtonRandomize {
                category?: (WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonRandomize.CategoryRandomize|null);
            }

            class ClientTelemetryProfileButtonRandomize implements IClientTelemetryProfileButtonRandomize {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonRandomize);
                public category: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonRandomize.CategoryRandomize;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonRandomize, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonRandomize;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonRandomize;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonRandomize, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientTelemetryProfileButtonRandomize {

                enum CategoryRandomize {
                    CATEGORY_RANDOMIZE_UNSET = 0,
                    RANDOMIZE_LENS = 1,
                    RANDOMIZE_FILTER_FRAME = 2
                }
            }

            interface IClientTelemetryProfileButtonLens {
                pressed_button_id?: (string|null);
                lens_category?: (WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonLens.CategoryLens|null);
            }

            class ClientTelemetryProfileButtonLens implements IClientTelemetryProfileButtonLens {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonLens);
                public pressed_button_id: string;
                public lens_category: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonLens.CategoryLens;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonLens, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonLens;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonLens;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonLens, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientTelemetryProfileButtonLens {

                enum CategoryLens {
                    CATEGORY_LENS_UNSET = 0,
                    CATEGORY_LENS_TOP = 1,
                    CATEGORY_LENS_MIDDLE = 2,
                    CATEGORY_LENS_BOTTOM = 3
                }
            }

            interface IClientTelemetryProfileButtonAssset {
                pressed_button_id?: (string|null);
                sticker_add?: (boolean|null);
                asset_type?: (WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonAssset.CategoryAssetType|null);
            }

            class ClientTelemetryProfileButtonAssset implements IClientTelemetryProfileButtonAssset {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonAssset);
                public pressed_button_id: string;
                public sticker_add: boolean;
                public asset_type: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonAssset.CategoryAssetType;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryProfileButtonAssset, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonAssset;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonAssset;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryProfileButtonAssset, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientTelemetryProfileButtonAssset {

                enum CategoryAssetType {
                    CATEGORY_ASSET_TYPE_UNSET = 0,
                    CATEGORY_ASSET_LENS = 1,
                    CATEGORY_ASSET_FILTER = 2,
                    CATEGORY_ASSET_FRAME = 3,
                    CATEGORY_ASSET_STICKER = 4
                }
            }

            interface IClientTelemetryPotionsMasterNoteAttempt {
                potion_name_id?: (string|null);
                cauldron_id?: (string|null);
                master_note_id?: (string|null);
                gesture_count?: (number|null);
                gesture_steps?: (string[]|null);
                master_note_start?: (boolean|null);
                gesture_attempt_step?: (number|null);
                gesture_success?: (boolean|null);
            }

            class ClientTelemetryPotionsMasterNoteAttempt implements IClientTelemetryPotionsMasterNoteAttempt {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPotionsMasterNoteAttempt);
                public potion_name_id: string;
                public cauldron_id: string;
                public master_note_id: string;
                public gesture_count: number;
                public gesture_steps: string[];
                public master_note_start: boolean;
                public gesture_attempt_step: number;
                public gesture_success: boolean;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPotionsMasterNoteAttempt, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPotionsMasterNoteAttempt;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPotionsMasterNoteAttempt;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPotionsMasterNoteAttempt, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryPortkeysWrackspurtTapped {
                wrackspurt_id?: (string|null);
                portkey_id?: (string|null);
            }

            class ClientTelemetryPortkeysWrackspurtTapped implements IClientTelemetryPortkeysWrackspurtTapped {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysWrackspurtTapped);
                public wrackspurt_id: string;
                public portkey_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysWrackspurtTapped, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPortkeysWrackspurtTapped;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPortkeysWrackspurtTapped;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPortkeysWrackspurtTapped, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryPortkeysOutOfBoundsReached {
                portkey_id?: (string|null);
            }

            class ClientTelemetryPortkeysOutOfBoundsReached implements IClientTelemetryPortkeysOutOfBoundsReached {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysOutOfBoundsReached);
                public portkey_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPortkeysOutOfBoundsReached, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPortkeysOutOfBoundsReached;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPortkeysOutOfBoundsReached;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPortkeysOutOfBoundsReached, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryPermissionsRequested {
                permission_type?: (string|null);
                granted?: (boolean|null);
            }

            class ClientTelemetryPermissionsRequested implements IClientTelemetryPermissionsRequested {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPermissionsRequested);
                public permission_type: string;
                public granted: boolean;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPermissionsRequested, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPermissionsRequested;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPermissionsRequested;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPermissionsRequested, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryPermissionsCheckFailed {
                permission_type?: (string|null);
            }

            class ClientTelemetryPermissionsCheckFailed implements IClientTelemetryPermissionsCheckFailed {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPermissionsCheckFailed);
                public permission_type: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryPermissionsCheckFailed, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPermissionsCheckFailed;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPermissionsCheckFailed;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryPermissionsCheckFailed, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryLoginStart {
                auth_provider_id?: (string|null);
            }

            class ClientTelemetryLoginStart implements IClientTelemetryLoginStart {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLoginStart);
                public auth_provider_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLoginStart, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryLoginStart;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryLoginStart;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryLoginStart, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryLoginComplete {
                auth_provider_id?: (string|null);
                auth_status?: (string|null);
            }

            class ClientTelemetryLoginComplete implements IClientTelemetryLoginComplete {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLoginComplete);
                public auth_provider_id: string;
                public auth_status: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryLoginComplete, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryLoginComplete;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryLoginComplete;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryLoginComplete, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryImpression {
                outpost_id?: (string|null);
                partner_id?: (string|null);
            }

            class ClientTelemetryImpression implements IClientTelemetryImpression {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryImpression);
                public outpost_id: string;
                public partner_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryImpression, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryImpression;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryImpression;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryImpression, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryHyperlinkClickthrough {
                url?: (string|null);
                outpost_id?: (string|null);
                partner_id?: (string|null);
            }

            class ClientTelemetryHyperlinkClickthrough implements IClientTelemetryHyperlinkClickthrough {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryHyperlinkClickthrough);
                public url: string;
                public outpost_id: string;
                public partner_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryHyperlinkClickthrough, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryHyperlinkClickthrough;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryHyperlinkClickthrough;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryHyperlinkClickthrough, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryFamilyDetails {
                family_id?: (string|null);
            }

            class ClientTelemetryFamilyDetails implements IClientTelemetryFamilyDetails {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryFamilyDetails);
                public family_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryFamilyDetails, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryFamilyDetails;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryFamilyDetails;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryFamilyDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryException {
                exception_type?: (string|null);
                stack_trace?: (string|null);
            }

            class ClientTelemetryException implements IClientTelemetryException {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryException);
                public exception_type: string;
                public stack_trace: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryException, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryException;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryException;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryException, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryEnvironmentalTagsUIEntered {
                player_level?: (number|null);
                warning_severity?: (string|null);
                weather_tag?: (string|null);
                moon_tag?: (string|null);
                time_of_day_tag?: (string|null);
            }

            class ClientTelemetryEnvironmentalTagsUIEntered implements IClientTelemetryEnvironmentalTagsUIEntered {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEnvironmentalTagsUIEntered);
                public player_level: number;
                public warning_severity: string;
                public weather_tag: string;
                public moon_tag: string;
                public time_of_day_tag: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEnvironmentalTagsUIEntered, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryEnvironmentalTagsUIEntered;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryEnvironmentalTagsUIEntered;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryEnvironmentalTagsUIEntered, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryEnvironmentalTagSevereWeatherAcknowledged {
                player_level?: (number|null);
                warning_severity?: (string|null);
            }

            class ClientTelemetryEnvironmentalTagSevereWeatherAcknowledged implements IClientTelemetryEnvironmentalTagSevereWeatherAcknowledged {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEnvironmentalTagSevereWeatherAcknowledged);
                public player_level: number;
                public warning_severity: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEnvironmentalTagSevereWeatherAcknowledged, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryEnvironmentalTagSevereWeatherAcknowledged;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryEnvironmentalTagSevereWeatherAcknowledged;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryEnvironmentalTagSevereWeatherAcknowledged, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryEncounterStart {
                battery_saver_on?: (boolean|null);
            }

            class ClientTelemetryEncounterStart implements IClientTelemetryEncounterStart {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEncounterStart);
                public battery_saver_on: boolean;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryEncounterStart, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryEncounterStart;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryEncounterStart;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryEncounterStart, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryDescriptionClickthrough {
                outpost_id?: (string|null);
                partner_id?: (string|null);
            }

            class ClientTelemetryDescriptionClickthrough implements IClientTelemetryDescriptionClickthrough {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryDescriptionClickthrough);
                public outpost_id: string;
                public partner_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryDescriptionClickthrough, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryDescriptionClickthrough;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryDescriptionClickthrough;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryDescriptionClickthrough, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryDeeplinkTriggered {
                link?: (string|null);
                rejected?: (boolean|null);
                rejection_reason?: (string|null);
            }

            class ClientTelemetryDeeplinkTriggered implements IClientTelemetryDeeplinkTriggered {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryDeeplinkTriggered);
                public link: string;
                public rejected: boolean;
                public rejection_reason: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryDeeplinkTriggered, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryDeeplinkTriggered;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryDeeplinkTriggered;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryDeeplinkTriggered, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryCombatGamePotionButton {
                player_level?: (number|null);
                encounter_id?: (string|null);
                attempt?: (number|null);
            }

            class ClientTelemetryCombatGamePotionButton implements IClientTelemetryCombatGamePotionButton {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGamePotionButton);
                public player_level: number;
                public encounter_id: string;
                public attempt: number;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGamePotionButton, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGamePotionButton;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGamePotionButton;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGamePotionButton, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryCombatGameOutOfEnergyPurchaseButton {
                player_level?: (number|null);
                encounter_id?: (string|null);
            }

            class ClientTelemetryCombatGameOutOfEnergyPurchaseButton implements IClientTelemetryCombatGameOutOfEnergyPurchaseButton {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOutOfEnergyPurchaseButton);
                public player_level: number;
                public encounter_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOutOfEnergyPurchaseButton, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOutOfEnergyPurchaseButton;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOutOfEnergyPurchaseButton;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOutOfEnergyPurchaseButton, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryCombatGameOutOfEnergyDialogShown {
                player_level?: (number|null);
                encounter_id?: (string|null);
            }

            class ClientTelemetryCombatGameOutOfEnergyDialogShown implements IClientTelemetryCombatGameOutOfEnergyDialogShown {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOutOfEnergyDialogShown);
                public player_level: number;
                public encounter_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryCombatGameOutOfEnergyDialogShown, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOutOfEnergyDialogShown;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOutOfEnergyDialogShown;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryCombatGameOutOfEnergyDialogShown, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryButtonPress {
                pressed_button_id?: (string|null);
            }

            class ClientTelemetryButtonPress implements IClientTelemetryButtonPress {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryButtonPress);
                public pressed_button_id: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryButtonPress, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryButtonPress;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryButtonPress;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryButtonPress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryBundleDownload {
                bundle_name?: (string|null);
                bundle_url?: (string|null);
                load_time?: (number|null);
            }

            class ClientTelemetryBundleDownload implements IClientTelemetryBundleDownload {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryBundleDownload);
                public bundle_name: string;
                public bundle_url: string;
                public load_time: number;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryBundleDownload, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryBundleDownload;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryBundleDownload;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryBundleDownload, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryAvatarInteract {
                player_level?: (number|Long|null);
            }

            class ClientTelemetryAvatarInteract implements IClientTelemetryAvatarInteract {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryAvatarInteract);
                public player_level: (number|Long);
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryAvatarInteract, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryAvatarInteract;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryAvatarInteract;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryAvatarInteract, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryAssetLoad {
                asset_name?: (string|null);
                total_load_time?: (number|null);
                bundle_name?: (string[]|null);
            }

            class ClientTelemetryAssetLoad implements IClientTelemetryAssetLoad {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryAssetLoad);
                public asset_name: string;
                public total_load_time: number;
                public bundle_name: string[];
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryAssetLoad, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryAssetLoad;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryAssetLoad;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryAssetLoad, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryRewardsFlow {
                skipped_long_rewards?: (boolean|null);
                current_player_level?: (number|null);
            }

            class ClientTelemetryRewardsFlow implements IClientTelemetryRewardsFlow {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRewardsFlow);
                public skipped_long_rewards: boolean;
                public current_player_level: number;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRewardsFlow, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryRewardsFlow;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryRewardsFlow;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryRewardsFlow, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryRateApp {
                having_fun_response?: (boolean|null);
                platform?: (string|null);
                client_version?: (string|null);
            }

            class ClientTelemetryRateApp implements IClientTelemetryRateApp {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRateApp);
                public having_fun_response: boolean;
                public platform: string;
                public client_version: string;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRateApp, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryRateApp;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryRateApp;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryRateApp, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetrySmokeTest {
                current_bot_program_name?: (string|null);
                time_start?: (number|null);
                time_end?: (number|null);
                time_delta?: (number|null);
                smoke_test_count?: (number|null);
            }

            class ClientTelemetrySmokeTest implements IClientTelemetrySmokeTest {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySmokeTest);
                public current_bot_program_name: string;
                public time_start: number;
                public time_end: number;
                public time_delta: number;
                public smoke_test_count: number;
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetrySmokeTest, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySmokeTest;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySmokeTest;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetrySmokeTest, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryRegistryInfo {
            }

            class ClientTelemetryRegistryInfo implements IClientTelemetryRegistryInfo {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRegistryInfo);
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IClientTelemetryRegistryInfo, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryRegistryInfo;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryRegistryInfo;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.ClientTelemetryRegistryInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlatformServerData {
                user_id?: (string|null);
                telemetry_id?: (string|null);
                session_id?: (string|null);
                experiment_ids?: (number[]|null);
            }

            class PlatformServerData implements IPlatformServerData {
                constructor(properties?: WUProtos.Data.LexiconApprovedClientTelemetry.IPlatformServerData);
                public user_id: string;
                public telemetry_id: string;
                public session_id: string;
                public experiment_ids: number[];
                public static encode(message: WUProtos.Data.LexiconApprovedClientTelemetry.IPlatformServerData, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LexiconApprovedClientTelemetry.PlatformServerData;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.LexiconApprovedClientTelemetry.PlatformServerData;
                public static toObject(message: WUProtos.Data.LexiconApprovedClientTelemetry.PlatformServerData, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface ILoginDetail {
            identity_provider?: (WUProtos.Enums.IdentityProvider|null);
            email?: (string|null);
        }

        class LoginDetail implements ILoginDetail {
            constructor(properties?: WUProtos.Data.ILoginDetail);
            public identity_provider: WUProtos.Enums.IdentityProvider;
            public email: string;
            public static encode(message: WUProtos.Data.ILoginDetail, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.LoginDetail;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.LoginDetail;
            public static toObject(message: WUProtos.Data.LoginDetail, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace Loot {

            interface ILootReward {
                item_reward?: (WUProtos.Data.Loot.LootReward.IVaultItemLootReward|null);
                collection_family_reward?: (WUProtos.Data.Loot.LootReward.ICollectionFamilyLootReward|null);
                collection_reward?: (WUProtos.Data.Loot.LootReward.ICollectionItemReward|null);
                walkbox_reward?: (WUProtos.Data.Loot.LootReward.IWalkboxReward|null);
                portkey_reward?: (WUProtos.Data.Loot.LootReward.IPortkeyReward|null);
                loot_table_reward?: (WUProtos.Data.Loot.LootReward.ILootTableReward|null);
                vault_capacity_reward?: (WUProtos.Data.Loot.LootReward.IVaultCapacityLootReward|null);
                generic_runestone?: (WUProtos.Data.Loot.LootReward.IGenericRunestoneReward|null);
                potion_reward?: (WUProtos.Data.Loot.LootReward.IPotionReward|null);
                portkey_collectible?: (WUProtos.Data.Loot.LootReward.IPortkeyCollectibleReward|null);
                generic_collection_family_reward?: (WUProtos.Data.Loot.LootReward.IGenericCollectionFamilyLootReward|null);
                cauldron_reward?: (WUProtos.Data.Loot.LootReward.ICauldronReward|null);
                currency_reward?: (WUProtos.Data.Loot.LootReward.ICurrencyReward|null);
                quest_reward?: (WUProtos.Data.Loot.LootReward.IQuestReward|null);
                map_ingredient_reward?: (WUProtos.Data.Loot.LootReward.IMapIngredientReward|null);
                bonus_metadata?: (WUProtos.Data.Loot.LootReward.IBonusMetadata|null);
            }

            class LootReward implements ILootReward {
                constructor(properties?: WUProtos.Data.Loot.ILootReward);
                public item_reward?: (WUProtos.Data.Loot.LootReward.IVaultItemLootReward|null);
                public collection_family_reward?: (WUProtos.Data.Loot.LootReward.ICollectionFamilyLootReward|null);
                public collection_reward?: (WUProtos.Data.Loot.LootReward.ICollectionItemReward|null);
                public walkbox_reward?: (WUProtos.Data.Loot.LootReward.IWalkboxReward|null);
                public portkey_reward?: (WUProtos.Data.Loot.LootReward.IPortkeyReward|null);
                public loot_table_reward?: (WUProtos.Data.Loot.LootReward.ILootTableReward|null);
                public vault_capacity_reward?: (WUProtos.Data.Loot.LootReward.IVaultCapacityLootReward|null);
                public generic_runestone?: (WUProtos.Data.Loot.LootReward.IGenericRunestoneReward|null);
                public potion_reward?: (WUProtos.Data.Loot.LootReward.IPotionReward|null);
                public portkey_collectible?: (WUProtos.Data.Loot.LootReward.IPortkeyCollectibleReward|null);
                public generic_collection_family_reward?: (WUProtos.Data.Loot.LootReward.IGenericCollectionFamilyLootReward|null);
                public cauldron_reward?: (WUProtos.Data.Loot.LootReward.ICauldronReward|null);
                public currency_reward?: (WUProtos.Data.Loot.LootReward.ICurrencyReward|null);
                public quest_reward?: (WUProtos.Data.Loot.LootReward.IQuestReward|null);
                public map_ingredient_reward?: (WUProtos.Data.Loot.LootReward.IMapIngredientReward|null);
                public bonus_metadata?: (WUProtos.Data.Loot.LootReward.IBonusMetadata|null);
                public RewardData?: ("item_reward"|"collection_family_reward"|"collection_reward"|"walkbox_reward"|"portkey_reward"|"loot_table_reward"|"vault_capacity_reward"|"generic_runestone"|"potion_reward"|"portkey_collectible"|"generic_collection_family_reward"|"cauldron_reward"|"currency_reward"|"quest_reward"|"map_ingredient_reward");
                public static encode(message: WUProtos.Data.Loot.ILootReward, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward;
                public static toObject(message: WUProtos.Data.Loot.LootReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace LootReward {

                interface IGenericCollectionFamilyLootReward {
                    amount?: (number|null);
                }

                class GenericCollectionFamilyLootReward implements IGenericCollectionFamilyLootReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.IGenericCollectionFamilyLootReward);
                    public amount: number;
                    public static encode(message: WUProtos.Data.Loot.LootReward.IGenericCollectionFamilyLootReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.GenericCollectionFamilyLootReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.GenericCollectionFamilyLootReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.GenericCollectionFamilyLootReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGenericRunestoneReward {
                    rank?: (number|null);
                    amount?: (number|Long|null);
                }

                class GenericRunestoneReward implements IGenericRunestoneReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.IGenericRunestoneReward);
                    public rank: number;
                    public amount: (number|Long);
                    public static encode(message: WUProtos.Data.Loot.LootReward.IGenericRunestoneReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.GenericRunestoneReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.GenericRunestoneReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.GenericRunestoneReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPortkeyCollectibleReward {
                    collection_item_id?: (string|null);
                }

                class PortkeyCollectibleReward implements IPortkeyCollectibleReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.IPortkeyCollectibleReward);
                    public collection_item_id: string;
                    public static encode(message: WUProtos.Data.Loot.LootReward.IPortkeyCollectibleReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.PortkeyCollectibleReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.PortkeyCollectibleReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.PortkeyCollectibleReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPortkeyReward {
                    portkey_id?: (string|null);
                }

                class PortkeyReward implements IPortkeyReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.IPortkeyReward);
                    public portkey_id: string;
                    public static encode(message: WUProtos.Data.Loot.LootReward.IPortkeyReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.PortkeyReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.PortkeyReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.PortkeyReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IBonusMetadata {
                    potion?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IPotionBonusMetadata|null);
                    wrackspurt?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IWrackspurtBonusMetadata|null);
                    first_time_collection?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IFirstTimeCollectionBonusMetadata|null);
                    challenge?: (WUProtos.Data.Challenge.IChallengeBonus|null);
                    spell_game?: (WUProtos.Data.Loot.LootReward.BonusMetadata.ISpellGameBonusMetadata|null);
                    challenge_bonus?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeBonusMetadata|null);
                    shard_conversion?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IShardConversionBonusMetadata|null);
                    challenge_chamber_bonus?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeChamberBonusMetadata|null);
                    challenge_social_bonus?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeSocialBonusMetadata|null);
                }

                class BonusMetadata implements IBonusMetadata {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.IBonusMetadata);
                    public potion?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IPotionBonusMetadata|null);
                    public wrackspurt?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IWrackspurtBonusMetadata|null);
                    public first_time_collection?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IFirstTimeCollectionBonusMetadata|null);
                    public challenge?: (WUProtos.Data.Challenge.IChallengeBonus|null);
                    public spell_game?: (WUProtos.Data.Loot.LootReward.BonusMetadata.ISpellGameBonusMetadata|null);
                    public challenge_bonus?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeBonusMetadata|null);
                    public shard_conversion?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IShardConversionBonusMetadata|null);
                    public challenge_chamber_bonus?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeChamberBonusMetadata|null);
                    public challenge_social_bonus?: (WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeSocialBonusMetadata|null);
                    public MetadataType?: ("potion"|"wrackspurt"|"first_time_collection"|"challenge"|"spell_game"|"challenge_bonus"|"shard_conversion"|"challenge_chamber_bonus"|"challenge_social_bonus");
                    public static encode(message: WUProtos.Data.Loot.LootReward.IBonusMetadata, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.BonusMetadata;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.BonusMetadata;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.BonusMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace BonusMetadata {

                    interface IFirstTimeCollectionBonusMetadata {
                    }

                    class FirstTimeCollectionBonusMetadata implements IFirstTimeCollectionBonusMetadata {
                        constructor(properties?: WUProtos.Data.Loot.LootReward.BonusMetadata.IFirstTimeCollectionBonusMetadata);
                        public static encode(message: WUProtos.Data.Loot.LootReward.BonusMetadata.IFirstTimeCollectionBonusMetadata, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.BonusMetadata.FirstTimeCollectionBonusMetadata;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.BonusMetadata.FirstTimeCollectionBonusMetadata;
                        public static toObject(message: WUProtos.Data.Loot.LootReward.BonusMetadata.FirstTimeCollectionBonusMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IShardConversionBonusMetadata {
                        amount?: (number|null);
                    }

                    class ShardConversionBonusMetadata implements IShardConversionBonusMetadata {
                        constructor(properties?: WUProtos.Data.Loot.LootReward.BonusMetadata.IShardConversionBonusMetadata);
                        public amount: number;
                        public static encode(message: WUProtos.Data.Loot.LootReward.BonusMetadata.IShardConversionBonusMetadata, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.BonusMetadata.ShardConversionBonusMetadata;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.BonusMetadata.ShardConversionBonusMetadata;
                        public static toObject(message: WUProtos.Data.Loot.LootReward.BonusMetadata.ShardConversionBonusMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IPotionBonusMetadata {
                        potion_id?: (string|null);
                    }

                    class PotionBonusMetadata implements IPotionBonusMetadata {
                        constructor(properties?: WUProtos.Data.Loot.LootReward.BonusMetadata.IPotionBonusMetadata);
                        public potion_id: string;
                        public static encode(message: WUProtos.Data.Loot.LootReward.BonusMetadata.IPotionBonusMetadata, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.BonusMetadata.PotionBonusMetadata;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.BonusMetadata.PotionBonusMetadata;
                        public static toObject(message: WUProtos.Data.Loot.LootReward.BonusMetadata.PotionBonusMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IWrackspurtBonusMetadata {
                        multiplier?: (number|null);
                    }

                    class WrackspurtBonusMetadata implements IWrackspurtBonusMetadata {
                        constructor(properties?: WUProtos.Data.Loot.LootReward.BonusMetadata.IWrackspurtBonusMetadata);
                        public multiplier: number;
                        public static encode(message: WUProtos.Data.Loot.LootReward.BonusMetadata.IWrackspurtBonusMetadata, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.BonusMetadata.WrackspurtBonusMetadata;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.BonusMetadata.WrackspurtBonusMetadata;
                        public static toObject(message: WUProtos.Data.Loot.LootReward.BonusMetadata.WrackspurtBonusMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IChallengeChamberBonusMetadata {
                        chamber_template_gmt_id?: (string|null);
                    }

                    class ChallengeChamberBonusMetadata implements IChallengeChamberBonusMetadata {
                        constructor(properties?: WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeChamberBonusMetadata);
                        public chamber_template_gmt_id: string;
                        public static encode(message: WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeChamberBonusMetadata, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.BonusMetadata.ChallengeChamberBonusMetadata;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.BonusMetadata.ChallengeChamberBonusMetadata;
                        public static toObject(message: WUProtos.Data.Loot.LootReward.BonusMetadata.ChallengeChamberBonusMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IChallengeBonusMetadata {
                        challenge_bonus_gmt_id?: (string|null);
                    }

                    class ChallengeBonusMetadata implements IChallengeBonusMetadata {
                        constructor(properties?: WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeBonusMetadata);
                        public challenge_bonus_gmt_id: string;
                        public static encode(message: WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeBonusMetadata, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.BonusMetadata.ChallengeBonusMetadata;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.BonusMetadata.ChallengeBonusMetadata;
                        public static toObject(message: WUProtos.Data.Loot.LootReward.BonusMetadata.ChallengeBonusMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IChallengeSocialBonusMetadata {
                        social_friend_bonus_gmt_id?: (string|null);
                        challenge_bonus_gmt_id?: (string|null);
                    }

                    class ChallengeSocialBonusMetadata implements IChallengeSocialBonusMetadata {
                        constructor(properties?: WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeSocialBonusMetadata);
                        public social_friend_bonus_gmt_id: string;
                        public challenge_bonus_gmt_id: string;
                        public static encode(message: WUProtos.Data.Loot.LootReward.BonusMetadata.IChallengeSocialBonusMetadata, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.BonusMetadata.ChallengeSocialBonusMetadata;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.BonusMetadata.ChallengeSocialBonusMetadata;
                        public static toObject(message: WUProtos.Data.Loot.LootReward.BonusMetadata.ChallengeSocialBonusMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface ISpellGameBonusMetadata {
                        id?: (string|null);
                    }

                    class SpellGameBonusMetadata implements ISpellGameBonusMetadata {
                        constructor(properties?: WUProtos.Data.Loot.LootReward.BonusMetadata.ISpellGameBonusMetadata);
                        public id: string;
                        public static encode(message: WUProtos.Data.Loot.LootReward.BonusMetadata.ISpellGameBonusMetadata, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.BonusMetadata.SpellGameBonusMetadata;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.BonusMetadata.SpellGameBonusMetadata;
                        public static toObject(message: WUProtos.Data.Loot.LootReward.BonusMetadata.SpellGameBonusMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface ICauldronReward {
                    template_id?: (string|null);
                    cauldron_id?: (number|Long|null);
                    availability_time?: (number|Long|null);
                }

                class CauldronReward implements ICauldronReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.ICauldronReward);
                    public template_id: string;
                    public cauldron_id: (number|Long);
                    public availability_time: (number|Long);
                    public static encode(message: WUProtos.Data.Loot.LootReward.ICauldronReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.CauldronReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.CauldronReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.CauldronReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICollectionFamilyLootReward {
                    family_id?: (string|null);
                    amount?: (number|null);
                }

                class CollectionFamilyLootReward implements ICollectionFamilyLootReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.ICollectionFamilyLootReward);
                    public family_id: string;
                    public amount: number;
                    public static encode(message: WUProtos.Data.Loot.LootReward.ICollectionFamilyLootReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.CollectionFamilyLootReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.CollectionFamilyLootReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.CollectionFamilyLootReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICollectionItemReward {
                    item_id?: (string|null);
                    shard_count?: (number|null);
                }

                class CollectionItemReward implements ICollectionItemReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.ICollectionItemReward);
                    public item_id: string;
                    public shard_count: number;
                    public static encode(message: WUProtos.Data.Loot.LootReward.ICollectionItemReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.CollectionItemReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.CollectionItemReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.CollectionItemReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPotionReward {
                    rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    time_to_brew?: (number|Long|null);
                    cauldron_id?: (number|Long|null);
                    recipe_gmt_id?: (string|null);
                }

                class PotionReward implements IPotionReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.IPotionReward);
                    public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public time_to_brew: (number|Long);
                    public cauldron_id: (number|Long);
                    public recipe_gmt_id: string;
                    public static encode(message: WUProtos.Data.Loot.LootReward.IPotionReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.PotionReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.PotionReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.PotionReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ILootTableReward {
                    loot_table_id?: (string|null);
                }

                class LootTableReward implements ILootTableReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.ILootTableReward);
                    public loot_table_id: string;
                    public static encode(message: WUProtos.Data.Loot.LootReward.ILootTableReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.LootTableReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.LootTableReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.LootTableReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ILootCollection {
                    rewards?: (WUProtos.Data.Loot.ILootReward[]|null);
                    escrowed_rewards?: (WUProtos.Data.Loot.ILootReward[]|null);
                }

                class LootCollection implements ILootCollection {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.ILootCollection);
                    public rewards: WUProtos.Data.Loot.ILootReward[];
                    public escrowed_rewards: WUProtos.Data.Loot.ILootReward[];
                    public static encode(message: WUProtos.Data.Loot.LootReward.ILootCollection, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.LootCollection;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.LootCollection;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.LootCollection, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICurrencyReward {
                    currency_id?: (string|null);
                    amount?: (number|Long|null);
                }

                class CurrencyReward implements ICurrencyReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.ICurrencyReward);
                    public currency_id: string;
                    public amount: (number|Long);
                    public static encode(message: WUProtos.Data.Loot.LootReward.ICurrencyReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.CurrencyReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.CurrencyReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.CurrencyReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IVaultCapacityLootReward {
                    vault_category_gmt_id?: (string|null);
                    amount?: (number|Long|null);
                }

                class VaultCapacityLootReward implements IVaultCapacityLootReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.IVaultCapacityLootReward);
                    public vault_category_gmt_id: string;
                    public amount: (number|Long);
                    public static encode(message: WUProtos.Data.Loot.LootReward.IVaultCapacityLootReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.VaultCapacityLootReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.VaultCapacityLootReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.VaultCapacityLootReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IVaultItemLootReward {
                    item_id?: (string|null);
                    amount?: (number|Long|null);
                }

                class VaultItemLootReward implements IVaultItemLootReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.IVaultItemLootReward);
                    public item_id: string;
                    public amount: (number|Long);
                    public static encode(message: WUProtos.Data.Loot.LootReward.IVaultItemLootReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.VaultItemLootReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.VaultItemLootReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.VaultItemLootReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IWalkboxReward {
                    walkbox_template_id?: (string|null);
                }

                class WalkboxReward implements IWalkboxReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.IWalkboxReward);
                    public walkbox_template_id: string;
                    public static encode(message: WUProtos.Data.Loot.LootReward.IWalkboxReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.WalkboxReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.WalkboxReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.WalkboxReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IMapIngredientReward {
                    ingredient_gmt_id?: (string|null);
                    amount?: (number|Long|null);
                }

                class MapIngredientReward implements IMapIngredientReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.IMapIngredientReward);
                    public ingredient_gmt_id: string;
                    public amount: (number|Long);
                    public static encode(message: WUProtos.Data.Loot.LootReward.IMapIngredientReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.MapIngredientReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.MapIngredientReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.MapIngredientReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IQuestReward {
                    quest_gmt_id?: (string|null);
                }

                class QuestReward implements IQuestReward {
                    constructor(properties?: WUProtos.Data.Loot.LootReward.IQuestReward);
                    public quest_gmt_id: string;
                    public static encode(message: WUProtos.Data.Loot.LootReward.IQuestReward, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Loot.LootReward.QuestReward;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Loot.LootReward.QuestReward;
                    public static toObject(message: WUProtos.Data.Loot.LootReward.QuestReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        namespace Mob {

            interface IMobReward {
                focus?: (WUProtos.Data.Mob.MobReward.IMobRewardFocus|null);
                time?: (WUProtos.Data.Mob.MobReward.IMobRewardTime|null);
                victory_points?: (WUProtos.Data.Mob.MobReward.IMobRewardVictoryPoints|null);
            }

            class MobReward implements IMobReward {
                constructor(properties?: WUProtos.Data.Mob.IMobReward);
                public focus?: (WUProtos.Data.Mob.MobReward.IMobRewardFocus|null);
                public time?: (WUProtos.Data.Mob.MobReward.IMobRewardTime|null);
                public victory_points?: (WUProtos.Data.Mob.MobReward.IMobRewardVictoryPoints|null);
                public Reward?: ("focus"|"time"|"victory_points");
                public static encode(message: WUProtos.Data.Mob.IMobReward, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Mob.MobReward;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Mob.MobReward;
                public static toObject(message: WUProtos.Data.Mob.MobReward, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace MobReward {

                interface IMobRewardTime {
                    time_ms?: (number|Long|null);
                }

                class MobRewardTime implements IMobRewardTime {
                    constructor(properties?: WUProtos.Data.Mob.MobReward.IMobRewardTime);
                    public time_ms: (number|Long);
                    public static encode(message: WUProtos.Data.Mob.MobReward.IMobRewardTime, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Mob.MobReward.MobRewardTime;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Mob.MobReward.MobRewardTime;
                    public static toObject(message: WUProtos.Data.Mob.MobReward.MobRewardTime, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IMobRewardVictoryPoints {
                    quantity?: (number|null);
                }

                class MobRewardVictoryPoints implements IMobRewardVictoryPoints {
                    constructor(properties?: WUProtos.Data.Mob.MobReward.IMobRewardVictoryPoints);
                    public quantity: number;
                    public static encode(message: WUProtos.Data.Mob.MobReward.IMobRewardVictoryPoints, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Mob.MobReward.MobRewardVictoryPoints;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Mob.MobReward.MobRewardVictoryPoints;
                    public static toObject(message: WUProtos.Data.Mob.MobReward.MobRewardVictoryPoints, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IMobRewardFocus {
                    quantity?: (number|null);
                    recipient?: (WUProtos.Data.Mob.MobReward.MobRewardFocus.MobRewardRecipient|null);
                }

                class MobRewardFocus implements IMobRewardFocus {
                    constructor(properties?: WUProtos.Data.Mob.MobReward.IMobRewardFocus);
                    public quantity: number;
                    public recipient: WUProtos.Data.Mob.MobReward.MobRewardFocus.MobRewardRecipient;
                    public static encode(message: WUProtos.Data.Mob.MobReward.IMobRewardFocus, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Mob.MobReward.MobRewardFocus;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Mob.MobReward.MobRewardFocus;
                    public static toObject(message: WUProtos.Data.Mob.MobReward.MobRewardFocus, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace MobRewardFocus {

                    enum MobRewardRecipient {
                        MOB_REWARD_RECIPIENT_UNSET = 0,
                        MOB_REWARD_RECIPIENT_PLAYER = 1,
                        MOB_REWARD_RECIPIENT_TEAM = 2,
                        MOB_REWARD_RECIPIENT_RANDOM_PLAYER = 3
                    }
                }
            }

            interface IMobRewardSet {
                rewards?: (WUProtos.Data.Mob.IMobReward[]|null);
            }

            class MobRewardSet implements IMobRewardSet {
                constructor(properties?: WUProtos.Data.Mob.IMobRewardSet);
                public rewards: WUProtos.Data.Mob.IMobReward[];
                public static encode(message: WUProtos.Data.Mob.IMobRewardSet, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Mob.MobRewardSet;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Mob.MobRewardSet;
                public static toObject(message: WUProtos.Data.Mob.MobRewardSet, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface IPermissionsConfigLocalData {
            id?: (string|null);
            first_play?: (boolean|null);
            first_request?: (boolean|null);
            parental_approval?: (boolean|null);
            permission_granted?: (boolean|null);
        }

        class PermissionsConfigLocalData implements IPermissionsConfigLocalData {
            constructor(properties?: WUProtos.Data.IPermissionsConfigLocalData);
            public id: string;
            public first_play: boolean;
            public first_request: boolean;
            public parental_approval: boolean;
            public permission_granted: boolean;
            public static encode(message: WUProtos.Data.IPermissionsConfigLocalData, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.PermissionsConfigLocalData;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.PermissionsConfigLocalData;
            public static toObject(message: WUProtos.Data.PermissionsConfigLocalData, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace Player {

            interface IPlayerAchievement {
            }

            class PlayerAchievement implements IPlayerAchievement {
                constructor(properties?: WUProtos.Data.Player.IPlayerAchievement);
                public static encode(message: WUProtos.Data.Player.IPlayerAchievement, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Player.PlayerAchievement;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Player.PlayerAchievement;
                public static toObject(message: WUProtos.Data.Player.PlayerAchievement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlayerLifetimeMetricsConfig {
                energy_vault_category_gmt_id?: (string|null);
                ingredient_vault_category_gmt_id?: (string|null);
                potion_extimulo1_gmt_id?: (string|null);
                potion_extimulo2_gmt_id?: (string|null);
                potion_extimulo3_gmt_id?: (string|null);
                potion_brain_elixir_gmt_id?: (string|null);
                elite_mob_tag?: (string|null);
            }

            class PlayerLifetimeMetricsConfig implements IPlayerLifetimeMetricsConfig {
                constructor(properties?: WUProtos.Data.Player.IPlayerLifetimeMetricsConfig);
                public energy_vault_category_gmt_id: string;
                public ingredient_vault_category_gmt_id: string;
                public potion_extimulo1_gmt_id: string;
                public potion_extimulo2_gmt_id: string;
                public potion_extimulo3_gmt_id: string;
                public potion_brain_elixir_gmt_id: string;
                public elite_mob_tag: string;
                public static encode(message: WUProtos.Data.Player.IPlayerLifetimeMetricsConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Player.PlayerLifetimeMetricsConfig;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Player.PlayerLifetimeMetricsConfig;
                public static toObject(message: WUProtos.Data.Player.PlayerLifetimeMetricsConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlayerProfessionProgressV3 {
                node_progress?: ({ [k: string]: WUProtos.Data.Player.PlayerProfessionProgressV3.INodeProgressV3 }|null);
                rank_points?: (number|null);
                rank_progress_map?: ({ [k: string]: WUProtos.Data.Player.PlayerProfessionProgressV3.IRankProgressV3 }|null);
                profession_grade?: (number|null);
            }

            class PlayerProfessionProgressV3 implements IPlayerProfessionProgressV3 {
                constructor(properties?: WUProtos.Data.Player.IPlayerProfessionProgressV3);
                public node_progress: { [k: string]: WUProtos.Data.Player.PlayerProfessionProgressV3.INodeProgressV3 };
                public rank_points: number;
                public rank_progress_map: { [k: string]: WUProtos.Data.Player.PlayerProfessionProgressV3.IRankProgressV3 };
                public profession_grade: number;
                public static encode(message: WUProtos.Data.Player.IPlayerProfessionProgressV3, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Player.PlayerProfessionProgressV3;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Player.PlayerProfessionProgressV3;
                public static toObject(message: WUProtos.Data.Player.PlayerProfessionProgressV3, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace PlayerProfessionProgressV3 {

                interface INodeProgressV3 {
                    level?: (number|null);
                    last_updated_timestamp?: (number|Long|null);
                    unlocked_levels_cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                }

                class NodeProgressV3 implements INodeProgressV3 {
                    constructor(properties?: WUProtos.Data.Player.PlayerProfessionProgressV3.INodeProgressV3);
                    public level: number;
                    public last_updated_timestamp: (number|Long);
                    public unlocked_levels_cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public static encode(message: WUProtos.Data.Player.PlayerProfessionProgressV3.INodeProgressV3, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Player.PlayerProfessionProgressV3.NodeProgressV3;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Player.PlayerProfessionProgressV3.NodeProgressV3;
                    public static toObject(message: WUProtos.Data.Player.PlayerProfessionProgressV3.NodeProgressV3, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IRankProgressV3 {
                }

                class RankProgressV3 implements IRankProgressV3 {
                    constructor(properties?: WUProtos.Data.Player.PlayerProfessionProgressV3.IRankProgressV3);
                    public static encode(message: WUProtos.Data.Player.PlayerProfessionProgressV3.IRankProgressV3, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Player.PlayerProfessionProgressV3.RankProgressV3;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Player.PlayerProfessionProgressV3.RankProgressV3;
                    public static toObject(message: WUProtos.Data.Player.PlayerProfessionProgressV3.RankProgressV3, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace RankProgressV3 {

                    interface INodeProgressV3 {
                        level?: (number|null);
                        last_updated_timestamp?: (number|Long|null);
                        unlocked_levels_cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    }

                    class NodeProgressV3 implements INodeProgressV3 {
                        constructor(properties?: WUProtos.Data.Player.PlayerProfessionProgressV3.RankProgressV3.INodeProgressV3);
                        public level: number;
                        public last_updated_timestamp: (number|Long);
                        public unlocked_levels_cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                        public static encode(message: WUProtos.Data.Player.PlayerProfessionProgressV3.RankProgressV3.INodeProgressV3, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Player.PlayerProfessionProgressV3.RankProgressV3.NodeProgressV3;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Data.Player.PlayerProfessionProgressV3.RankProgressV3.NodeProgressV3;
                        public static toObject(message: WUProtos.Data.Player.PlayerProfessionProgressV3.RankProgressV3.NodeProgressV3, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            interface IPlayerProfessionsProgressV3 {
            }

            class PlayerProfessionsProgressV3 implements IPlayerProfessionsProgressV3 {
                constructor(properties?: WUProtos.Data.Player.IPlayerProfessionsProgressV3);
                public static encode(message: WUProtos.Data.Player.IPlayerProfessionsProgressV3, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Player.PlayerProfessionsProgressV3;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Player.PlayerProfessionsProgressV3;
                public static toObject(message: WUProtos.Data.Player.PlayerProfessionsProgressV3, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlayerReputation {
                account_age_ms?: (number|Long|null);
                player_level?: (number|Long|null);
                cheat_reputation?: (WUProtos.Data.Player.PlayerReputation.CheatReputation[]|null);
                is_minor?: (boolean|null);
            }

            class PlayerReputation implements IPlayerReputation {
                constructor(properties?: WUProtos.Data.Player.IPlayerReputation);
                public account_age_ms: (number|Long);
                public player_level: (number|Long);
                public cheat_reputation: WUProtos.Data.Player.PlayerReputation.CheatReputation[];
                public is_minor: boolean;
                public static encode(message: WUProtos.Data.Player.IPlayerReputation, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Player.PlayerReputation;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Player.PlayerReputation;
                public static toObject(message: WUProtos.Data.Player.PlayerReputation, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace PlayerReputation {

                enum CheatReputation {
                    UNSET = 0,
                    BOT = 1,
                    SPOOFER = 2
                }
            }
        }

        interface IPoiDetails {
            name?: (string|null);
            description?: (string|null);
            image_urls?: (string[]|null);
        }

        class PoiDetails implements IPoiDetails {
            constructor(properties?: WUProtos.Data.IPoiDetails);
            public name: string;
            public description: string;
            public image_urls: string[];
            public static encode(message: WUProtos.Data.IPoiDetails, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.PoiDetails;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.PoiDetails;
            public static toObject(message: WUProtos.Data.PoiDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IPOIInteract {
            distance_from_poimeters?: (number|null);
        }

        class POIInteract implements IPOIInteract {
            constructor(properties?: WUProtos.Data.IPOIInteract);
            public distance_from_poimeters: number;
            public static encode(message: WUProtos.Data.IPOIInteract, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.POIInteract;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.POIInteract;
            public static toObject(message: WUProtos.Data.POIInteract, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IProfileConfig {
            id?: (string|null);
            badges?: ({ [k: string]: WUProtos.Data.Client.IClientBadge }|null);
            houses?: ({ [k: string]: WUProtos.Data.Client.IClientHouse }|null);
            themes?: ({ [k: string]: WUProtos.Data.Client.IClientTheme }|null);
            wand_cores?: ({ [k: string]: WUProtos.Data.Client.IClientWandCore }|null);
            wand_woods?: ({ [k: string]: WUProtos.Data.Client.IClientWandWood }|null);
            wand_flexibilities?: ({ [k: string]: WUProtos.Data.Client.IClientWandFlexibility }|null);
            wand_lengths?: ({ [k: string]: WUProtos.Data.Client.IClientWandLength }|null);
        }

        class ProfileConfig implements IProfileConfig {
            constructor(properties?: WUProtos.Data.IProfileConfig);
            public id: string;
            public badges: { [k: string]: WUProtos.Data.Client.IClientBadge };
            public houses: { [k: string]: WUProtos.Data.Client.IClientHouse };
            public themes: { [k: string]: WUProtos.Data.Client.IClientTheme };
            public wand_cores: { [k: string]: WUProtos.Data.Client.IClientWandCore };
            public wand_woods: { [k: string]: WUProtos.Data.Client.IClientWandWood };
            public wand_flexibilities: { [k: string]: WUProtos.Data.Client.IClientWandFlexibility };
            public wand_lengths: { [k: string]: WUProtos.Data.Client.IClientWandLength };
            public static encode(message: WUProtos.Data.IProfileConfig, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.ProfileConfig;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.ProfileConfig;
            public static toObject(message: WUProtos.Data.ProfileConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IPublicData {
            level?: (number|null);
            distance_walked_km?: (number|null);
            profession_id?: (string|null);
            house_id?: (string|null);
            wand?: (WUProtos.Data.PublicData.IWandOptions|null);
            favorite_badge_ids?: (string[]|null);
            favorite_title_ids?: (string[]|null);
            lifetime_inn_looted?: (number|Long|null);
            lifetime_greenhouse_looted?: (number|Long|null);
            lifetime_map_encounter_won?: (number|Long|null);
            lifetime_wc_won?: (number|Long|null);
        }

        class PublicData implements IPublicData {
            constructor(properties?: WUProtos.Data.IPublicData);
            public level: number;
            public distance_walked_km: number;
            public profession_id: string;
            public house_id: string;
            public wand?: (WUProtos.Data.PublicData.IWandOptions|null);
            public favorite_badge_ids: string[];
            public favorite_title_ids: string[];
            public lifetime_inn_looted: (number|Long);
            public lifetime_greenhouse_looted: (number|Long);
            public lifetime_map_encounter_won: (number|Long);
            public lifetime_wc_won: (number|Long);
            public static encode(message: WUProtos.Data.IPublicData, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.PublicData;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.PublicData;
            public static toObject(message: WUProtos.Data.PublicData, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace PublicData {

            interface IWandOptions {
                core_id?: (string|null);
                wood_id?: (string|null);
                flexibility_id?: (string|null);
                length_id?: (string|null);
            }

            class WandOptions implements IWandOptions {
                constructor(properties?: WUProtos.Data.PublicData.IWandOptions);
                public core_id: string;
                public wood_id: string;
                public flexibility_id: string;
                public length_id: string;
                public static encode(message: WUProtos.Data.PublicData.IWandOptions, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.PublicData.WandOptions;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.PublicData.WandOptions;
                public static toObject(message: WUProtos.Data.PublicData.WandOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface IQualityLevel {
            id?: (string|null);
            quality_level?: (WUProtos.Data.QualityLevel.ISharedQualityLevel|null);
        }

        class QualityLevel implements IQualityLevel {
            constructor(properties?: WUProtos.Data.IQualityLevel);
            public id: string;
            public quality_level?: (WUProtos.Data.QualityLevel.ISharedQualityLevel|null);
            public static encode(message: WUProtos.Data.IQualityLevel, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.QualityLevel;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.QualityLevel;
            public static toObject(message: WUProtos.Data.QualityLevel, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace QualityLevel {

            interface ISharedQualityLevel {
                name?: (string|null);
                texture_quality?: (number|null);
                shader_lod?: (number|null);
                default_target_fps?: (number|null);
                antialiasing?: (number|null);
                anisotropic_filtering?: (number|null);
                billboards_face_camera_position?: (boolean|null);
                realtime_shadows?: (number|null);
                ar_azimuth_blurring?: (boolean|null);
                gamemode_overrides?: ({ [k: string]: WUProtos.Data.QualityLevel.SharedQualityLevel.IQualityLevelOverrides }|null);
                ar_encounter_particle_cap?: (number|null);
                locked_encounter_particle_cap?: (number|null);
                menu_particle_cap?: (number|null);
                ar_azimuth_color_grading?: (boolean|null);
                shadow_map_size?: (number|null);
                encounter_camera_target_scaling?: (number|null);
                advanced_ar_camera_resolution?: (number|null);
                vfx_lod?: (number|null);
                force_simple_ar?: (boolean|null);
            }

            class SharedQualityLevel implements ISharedQualityLevel {
                constructor(properties?: WUProtos.Data.QualityLevel.ISharedQualityLevel);
                public name: string;
                public texture_quality: number;
                public shader_lod: number;
                public default_target_fps: number;
                public antialiasing: number;
                public anisotropic_filtering: number;
                public billboards_face_camera_position: boolean;
                public realtime_shadows: number;
                public ar_azimuth_blurring: boolean;
                public gamemode_overrides: { [k: string]: WUProtos.Data.QualityLevel.SharedQualityLevel.IQualityLevelOverrides };
                public ar_encounter_particle_cap: number;
                public locked_encounter_particle_cap: number;
                public menu_particle_cap: number;
                public ar_azimuth_color_grading: boolean;
                public shadow_map_size: number;
                public encounter_camera_target_scaling: number;
                public advanced_ar_camera_resolution: number;
                public vfx_lod: number;
                public force_simple_ar: boolean;
                public static encode(message: WUProtos.Data.QualityLevel.ISharedQualityLevel, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.QualityLevel.SharedQualityLevel;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.QualityLevel.SharedQualityLevel;
                public static toObject(message: WUProtos.Data.QualityLevel.SharedQualityLevel, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace SharedQualityLevel {

                interface IQualityLevelOverrides {
                    target_fps?: (number|null);
                }

                class QualityLevelOverrides implements IQualityLevelOverrides {
                    constructor(properties?: WUProtos.Data.QualityLevel.SharedQualityLevel.IQualityLevelOverrides);
                    public target_fps: number;
                    public static encode(message: WUProtos.Data.QualityLevel.SharedQualityLevel.IQualityLevelOverrides, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.QualityLevel.SharedQualityLevel.QualityLevelOverrides;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.QualityLevel.SharedQualityLevel.QualityLevelOverrides;
                    public static toObject(message: WUProtos.Data.QualityLevel.SharedQualityLevel.QualityLevelOverrides, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            enum AntialiasingSetting {
                offf = 0,
                msaa2x = 2,
                msaa4x = 4,
                msaa8x = 8
            }

            enum RealtimeShadowsSetting {
                off = 0,
                realtime_planar = 1,
                realtime_planar_and_self_shadowing = 2
            }

            enum TextureQualitySetting {
                full_res = 0,
                half_res = 1
            }
        }

        interface IRequirements {
            reqs?: (WUProtos.Data.Requirements.IRequirement[]|null);
        }

        class Requirements implements IRequirements {
            constructor(properties?: WUProtos.Data.IRequirements);
            public reqs: WUProtos.Data.Requirements.IRequirement[];
            public static encode(message: WUProtos.Data.IRequirements, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements;
            public static toObject(message: WUProtos.Data.Requirements, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace Requirements {

            interface IRequirement {
                bool_literal_req?: (WUProtos.Enums.BoolLiteral|null);
                level_req?: (WUProtos.Data.Requirements.Requirement.ILevelRequirement|null);
                vault_item_req?: (WUProtos.Data.Requirements.Requirement.IVaultItemRequirement|null);
                collection_item_req?: (WUProtos.Data.Requirements.Requirement.ICollectionItemRequirement|null);
                collection_family_req?: (WUProtos.Data.Requirements.Requirement.ICollectionFamilyRequirement|null);
                date_req?: (WUProtos.Data.Requirements.Requirement.IDateRequirement|null);
                flag_req?: (WUProtos.Data.Requirements.Requirement.IPlayerFlagRequirement|null);
                profession_req?: (WUProtos.Data.Requirements.Requirement.IProfessionRequirement|null);
                profession_node_req?: (WUProtos.Data.Requirements.Requirement.IProfessionNodeRequirement|null);
                profession_num_node_level_req?: (WUProtos.Data.Requirements.Requirement.IProfessionTotalNodeLevelRequirement|null);
                has_walkbox_req?: (WUProtos.Data.Requirements.Requirement.IHasWalkboxRequirement|null);
                has_portkey_req?: (WUProtos.Data.Requirements.Requirement.IHasPortkeyRequirement|null);
                profession_rank_points_req?: (WUProtos.Data.Requirements.Requirement.IProfessionRankPointsRequirement|null);
                collection_page_req?: (WUProtos.Data.Requirements.Requirement.ICollectionPageLevelRequirement|null);
                collection_item_placed_requirement?: (WUProtos.Data.Requirements.Requirement.ICollectionItemPlacedRequirement|null);
                event_req?: (WUProtos.Data.Requirements.Requirement.IEventRequirement|null);
                quest_completed_req?: (WUProtos.Data.Requirements.Requirement.IQuestCompletedRequirement|null);
                feature_flag_req?: (WUProtos.Data.Requirements.Requirement.IFeatureFlagRequirement|null);
                store_pack_req?: (WUProtos.Data.Requirements.Requirement.IStorePackQuantityRequirement|null);
                active_ar_mode_req?: (WUProtos.Data.Requirements.Requirement.IActiveArModeRequirement|null);
                platform_requirement?: (WUProtos.Data.Requirements.Requirement.IPlatformRequirement|null);
                player_account_age_requirement?: (WUProtos.Data.Requirements.Requirement.IPlayerAccountAgeRequirement|null);
                profession_tier_req?: (WUProtos.Data.Requirements.Requirement.IProfessionTierRequirement|null);
                account_creation_date_requirement?: (WUProtos.Data.Requirements.Requirement.IAccountCreationDateRequirement|null);
                lifetime_metric_req?: (WUProtos.Data.Requirements.Requirement.ILifetimeMetricRequirement|null);
            }

            class Requirement implements IRequirement {
                constructor(properties?: WUProtos.Data.Requirements.IRequirement);
                public bool_literal_req: WUProtos.Enums.BoolLiteral;
                public level_req?: (WUProtos.Data.Requirements.Requirement.ILevelRequirement|null);
                public vault_item_req?: (WUProtos.Data.Requirements.Requirement.IVaultItemRequirement|null);
                public collection_item_req?: (WUProtos.Data.Requirements.Requirement.ICollectionItemRequirement|null);
                public collection_family_req?: (WUProtos.Data.Requirements.Requirement.ICollectionFamilyRequirement|null);
                public date_req?: (WUProtos.Data.Requirements.Requirement.IDateRequirement|null);
                public flag_req?: (WUProtos.Data.Requirements.Requirement.IPlayerFlagRequirement|null);
                public profession_req?: (WUProtos.Data.Requirements.Requirement.IProfessionRequirement|null);
                public profession_node_req?: (WUProtos.Data.Requirements.Requirement.IProfessionNodeRequirement|null);
                public profession_num_node_level_req?: (WUProtos.Data.Requirements.Requirement.IProfessionTotalNodeLevelRequirement|null);
                public has_walkbox_req?: (WUProtos.Data.Requirements.Requirement.IHasWalkboxRequirement|null);
                public has_portkey_req?: (WUProtos.Data.Requirements.Requirement.IHasPortkeyRequirement|null);
                public profession_rank_points_req?: (WUProtos.Data.Requirements.Requirement.IProfessionRankPointsRequirement|null);
                public collection_page_req?: (WUProtos.Data.Requirements.Requirement.ICollectionPageLevelRequirement|null);
                public collection_item_placed_requirement?: (WUProtos.Data.Requirements.Requirement.ICollectionItemPlacedRequirement|null);
                public event_req?: (WUProtos.Data.Requirements.Requirement.IEventRequirement|null);
                public quest_completed_req?: (WUProtos.Data.Requirements.Requirement.IQuestCompletedRequirement|null);
                public feature_flag_req?: (WUProtos.Data.Requirements.Requirement.IFeatureFlagRequirement|null);
                public store_pack_req?: (WUProtos.Data.Requirements.Requirement.IStorePackQuantityRequirement|null);
                public active_ar_mode_req?: (WUProtos.Data.Requirements.Requirement.IActiveArModeRequirement|null);
                public platform_requirement?: (WUProtos.Data.Requirements.Requirement.IPlatformRequirement|null);
                public player_account_age_requirement?: (WUProtos.Data.Requirements.Requirement.IPlayerAccountAgeRequirement|null);
                public profession_tier_req?: (WUProtos.Data.Requirements.Requirement.IProfessionTierRequirement|null);
                public account_creation_date_requirement?: (WUProtos.Data.Requirements.Requirement.IAccountCreationDateRequirement|null);
                public lifetime_metric_req?: (WUProtos.Data.Requirements.Requirement.ILifetimeMetricRequirement|null);
                public Requirement?: ("bool_literal_req"|"level_req"|"vault_item_req"|"collection_item_req"|"collection_family_req"|"date_req"|"flag_req"|"profession_req"|"profession_node_req"|"profession_num_node_level_req"|"has_walkbox_req"|"has_portkey_req"|"profession_rank_points_req"|"collection_page_req"|"collection_item_placed_requirement"|"event_req"|"quest_completed_req"|"feature_flag_req"|"store_pack_req"|"active_ar_mode_req"|"platform_requirement"|"player_account_age_requirement"|"profession_tier_req"|"account_creation_date_requirement"|"lifetime_metric_req");
                public static encode(message: WUProtos.Data.Requirements.IRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement;
                public static toObject(message: WUProtos.Data.Requirements.Requirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace Requirement {

                interface IHasPortkeyRequirement {
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                    qty?: (number|null);
                }

                class HasPortkeyRequirement implements IHasPortkeyRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IHasPortkeyRequirement);
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public qty: number;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IHasPortkeyRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.HasPortkeyRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.HasPortkeyRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.HasPortkeyRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IHasWalkboxRequirement {
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                    qty?: (number|null);
                }

                class HasWalkboxRequirement implements IHasWalkboxRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IHasWalkboxRequirement);
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public qty: number;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IHasWalkboxRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.HasWalkboxRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.HasWalkboxRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.HasWalkboxRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IEventRequirement {
                    event_id?: (string|null);
                    req_subsets?: (WUProtos.Data.Requirements.Requirement.EventRequirement.EventReqSubset[]|null);
                }

                class EventRequirement implements IEventRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IEventRequirement);
                    public event_id: string;
                    public req_subsets: WUProtos.Data.Requirements.Requirement.EventRequirement.EventReqSubset[];
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IEventRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.EventRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.EventRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.EventRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace EventRequirement {

                    enum EventReqSubset {
                        SUBSET_UNKNOWN = 0,
                        SUBSET_ACTIVATION = 1,
                        SUBSET_RUNNING = 2
                    }
                }

                interface IFeatureFlagRequirement {
                    feature_flag_id?: (string|null);
                }

                class FeatureFlagRequirement implements IFeatureFlagRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IFeatureFlagRequirement);
                    public feature_flag_id: string;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IFeatureFlagRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.FeatureFlagRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.FeatureFlagRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.FeatureFlagRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ILevelRequirement {
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                    level?: (number|null);
                }

                class LevelRequirement implements ILevelRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.ILevelRequirement);
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public level: number;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.ILevelRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.LevelRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.LevelRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.LevelRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ILifetimeMetricRequirement {
                    lifetime_metric?: (WUProtos.Data.Requirements.Requirement.LifetimeMetricRequirement.LifetimeMetric|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                    required_count?: (number|Long|null);
                }

                class LifetimeMetricRequirement implements ILifetimeMetricRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.ILifetimeMetricRequirement);
                    public lifetime_metric: WUProtos.Data.Requirements.Requirement.LifetimeMetricRequirement.LifetimeMetric;
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public required_count: (number|Long);
                    public static encode(message: WUProtos.Data.Requirements.Requirement.ILifetimeMetricRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.LifetimeMetricRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.LifetimeMetricRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.LifetimeMetricRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace LifetimeMetricRequirement {

                    enum LifetimeMetric {
                        NONE = 0,
                        INN_LOOTED = 1,
                        GREENHOUSE_LOOTED = 2,
                        KM_WALKED = 3,
                        MAP_ENCOUNTER_CAPTURED = 4,
                        WC_WON = 5,
                        STICKERS_COMPLETED = 6,
                        SUCCESSFUL_SWISH_SPELLCAST = 7,
                        SUCCESSFUL_COMBAT_ATTACK_SPELLCAST = 8,
                        SUCCESSFUL_COMBAT_DEFEND_SPELLCAST = 9,
                        WC_COMPLETED = 10,
                        POTIONS_BREWED = 11,
                        DARK_DETECTOR_PLACED = 12,
                        PORTKEYS_OPENED = 13,
                        MAP_INGREDIENTS_COLLECTED = 14,
                        POTION_EXSTIMULO_1_USED = 15,
                        POTION_EXSTIMULO_2_USED = 16,
                        POTION_EXSTIMULO_3_USED = 17,
                        POTION_BRAIN_ELIXIR_USED = 18,
                        POTION_USED_ENCOUNTER = 19,
                        POTION_USED_WC = 20,
                        MOBS_DEFEATED_BY_ME = 21,
                        SEEDS_PLANTED = 22,
                        MYSTERY_ITEMS_FOUND = 23,
                        SWISH_MASTERFUL_SPELLCAST = 24,
                        ENCOUNTER_COMPLETED_COUNTRY_COUNT = 25,
                        ELITE_MOBS_DEFEATED_BY_ME = 26,
                        MAP_ABILITIES_USED = 27
                    }
                }

                interface IStorePackQuantityRequirement {
                    store_pack_id?: (string|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                    qty?: (number|Long|null);
                }

                class StorePackQuantityRequirement implements IStorePackQuantityRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IStorePackQuantityRequirement);
                    public store_pack_id: string;
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public qty: (number|Long);
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IStorePackQuantityRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.StorePackQuantityRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.StorePackQuantityRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.StorePackQuantityRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IVaultItemRequirement {
                    item_id?: (string|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                    qty?: (number|Long|null);
                }

                class VaultItemRequirement implements IVaultItemRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IVaultItemRequirement);
                    public item_id: string;
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public qty: (number|Long);
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IVaultItemRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.VaultItemRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.VaultItemRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.VaultItemRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IQuestCompletedRequirement {
                    quest_gmt_id?: (string|null);
                }

                class QuestCompletedRequirement implements IQuestCompletedRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IQuestCompletedRequirement);
                    public quest_gmt_id: string;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IQuestCompletedRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.QuestCompletedRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.QuestCompletedRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.QuestCompletedRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAccountCreationDateRequirement {
                    account_creation_date?: (number|Long|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                }

                class AccountCreationDateRequirement implements IAccountCreationDateRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IAccountCreationDateRequirement);
                    public account_creation_date: (number|Long);
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IAccountCreationDateRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.AccountCreationDateRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.AccountCreationDateRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.AccountCreationDateRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IActiveArModeRequirement {
                    ar_mode?: (WUProtos.Data.ARMode|null);
                    operator?: (WUProtos.Enums.EqualityOperator|null);
                }

                class ActiveArModeRequirement implements IActiveArModeRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IActiveArModeRequirement);
                    public ar_mode: WUProtos.Data.ARMode;
                    public operator: WUProtos.Enums.EqualityOperator;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IActiveArModeRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.ActiveArModeRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.ActiveArModeRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.ActiveArModeRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICollectionFamilyRequirement {
                    family_id?: (string|null);
                    family_level?: (number|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                }

                class CollectionFamilyRequirement implements ICollectionFamilyRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.ICollectionFamilyRequirement);
                    public family_id: string;
                    public family_level: number;
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.ICollectionFamilyRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.CollectionFamilyRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.CollectionFamilyRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.CollectionFamilyRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ITimeRequirementTuple {
                }

                class TimeRequirementTuple implements ITimeRequirementTuple {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.ITimeRequirementTuple);
                    public static encode(message: WUProtos.Data.Requirements.Requirement.ITimeRequirementTuple, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.TimeRequirementTuple;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.TimeRequirementTuple;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.TimeRequirementTuple, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICollectionItemPlacedRequirement {
                    item_gmt_id?: (string|null);
                    check_for_current_prestige_only?: (boolean|null);
                    page_gmt_id?: (string|null);
                }

                class CollectionItemPlacedRequirement implements ICollectionItemPlacedRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.ICollectionItemPlacedRequirement);
                    public item_gmt_id: string;
                    public check_for_current_prestige_only: boolean;
                    public page_gmt_id: string;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.ICollectionItemPlacedRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.CollectionItemPlacedRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.CollectionItemPlacedRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.CollectionItemPlacedRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICollectionItemRequirement {
                    item_id?: (string|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                    shards?: (number|null);
                }

                class CollectionItemRequirement implements ICollectionItemRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.ICollectionItemRequirement);
                    public item_id: string;
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public shards: number;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.ICollectionItemRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.CollectionItemRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.CollectionItemRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.CollectionItemRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICollectionPageLevelRequirement {
                    page_gmt_id?: (string|null);
                    level?: (number|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                }

                class CollectionPageLevelRequirement implements ICollectionPageLevelRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.ICollectionPageLevelRequirement);
                    public page_gmt_id: string;
                    public level: number;
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.ICollectionPageLevelRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.CollectionPageLevelRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.CollectionPageLevelRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.CollectionPageLevelRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDateRequirement {
                    epoch_date_in_seconds?: (number|Long|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                }

                class DateRequirement implements IDateRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IDateRequirement);
                    public epoch_date_in_seconds: (number|Long);
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IDateRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.DateRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.DateRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.DateRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayerAccountAgeRequirement {
                    account_age_in_seconds?: (number|Long|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                }

                class PlayerAccountAgeRequirement implements IPlayerAccountAgeRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IPlayerAccountAgeRequirement);
                    public account_age_in_seconds: (number|Long);
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IPlayerAccountAgeRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.PlayerAccountAgeRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.PlayerAccountAgeRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.PlayerAccountAgeRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayerFlagRequirement {
                    player_flag_feature_id?: (string|null);
                    player_flag_id?: (string|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                    bval?: (boolean|null);
                    lval?: (number|Long|null);
                    sval?: (string|null);
                    fval?: (number|null);
                }

                class PlayerFlagRequirement implements IPlayerFlagRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IPlayerFlagRequirement);
                    public player_flag_feature_id: string;
                    public player_flag_id: string;
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public bval: boolean;
                    public lval: (number|Long);
                    public sval: string;
                    public fval: number;
                    public FlagValue?: ("bval"|"lval"|"sval"|"fval");
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IPlayerFlagRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.PlayerFlagRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.PlayerFlagRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.PlayerFlagRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProfessionNodeRequirement {
                    profession_node_id?: (string|null);
                    profession_node_level?: (number|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                    profession_rank_id?: (string|null);
                }

                class ProfessionNodeRequirement implements IProfessionNodeRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IProfessionNodeRequirement);
                    public profession_node_id: string;
                    public profession_node_level: number;
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public profession_rank_id: string;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IProfessionNodeRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.ProfessionNodeRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.ProfessionNodeRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.ProfessionNodeRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProfessionRankPointsRequirement {
                    profession_gmt_id?: (string|null);
                    rank_points?: (number|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                }

                class ProfessionRankPointsRequirement implements IProfessionRankPointsRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IProfessionRankPointsRequirement);
                    public profession_gmt_id: string;
                    public rank_points: number;
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IProfessionRankPointsRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.ProfessionRankPointsRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.ProfessionRankPointsRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.ProfessionRankPointsRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProfessionRequirement {
                    profession_gmt_id?: (string|null);
                }

                class ProfessionRequirement implements IProfessionRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IProfessionRequirement);
                    public profession_gmt_id: string;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IProfessionRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.ProfessionRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.ProfessionRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.ProfessionRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProfessionTierRequirement {
                    profession_gmt_id?: (string|null);
                    profession_tier?: (number|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                }

                class ProfessionTierRequirement implements IProfessionTierRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IProfessionTierRequirement);
                    public profession_gmt_id: string;
                    public profession_tier: number;
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IProfessionTierRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.ProfessionTierRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.ProfessionTierRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.ProfessionTierRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProfessionTotalNodeLevelRequirement {
                    profession_gmt_id?: (string|null);
                    num_profession_node_levels?: (number|null);
                    comparison_operator?: (WUProtos.Enums.ComparisonOperator|null);
                }

                class ProfessionTotalNodeLevelRequirement implements IProfessionTotalNodeLevelRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IProfessionTotalNodeLevelRequirement);
                    public profession_gmt_id: string;
                    public num_profession_node_levels: number;
                    public comparison_operator: WUProtos.Enums.ComparisonOperator;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IProfessionTotalNodeLevelRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.ProfessionTotalNodeLevelRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.ProfessionTotalNodeLevelRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.ProfessionTotalNodeLevelRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlatformRequirement {
                    platform?: (WUProtos.Enums.DevicePlatform|null);
                    operator?: (WUProtos.Enums.EqualityOperator|null);
                }

                class PlatformRequirement implements IPlatformRequirement {
                    constructor(properties?: WUProtos.Data.Requirements.Requirement.IPlatformRequirement);
                    public platform: WUProtos.Enums.DevicePlatform;
                    public operator: WUProtos.Enums.EqualityOperator;
                    public static encode(message: WUProtos.Data.Requirements.Requirement.IPlatformRequirement, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Requirements.Requirement.PlatformRequirement;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.Requirements.Requirement.PlatformRequirement;
                    public static toObject(message: WUProtos.Data.Requirements.Requirement.PlatformRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        interface ISkuData {
            id?: (string|null);
            is_enabled?: (boolean|null);
            content?: (WUProtos.Data.SkuData.ISkuContent[]|null);
            price?: (WUProtos.Data.SkuData.ISkuPrice[]|null);
            payment_type?: (WUProtos.Data.SkuData.SkuPaymentType|null);
            last_modified_timestamp_ms?: (number|Long|null);
            presentation_data?: (WUProtos.Data.SkuData.ISkuPresentationData[]|null);
            enabled_window_start_ms?: (number|Long|null);
            enabled_window_end_ms?: (number|Long|null);
        }

        class SkuData implements ISkuData {
            constructor(properties?: WUProtos.Data.ISkuData);
            public id: string;
            public is_enabled: boolean;
            public content: WUProtos.Data.SkuData.ISkuContent[];
            public price: WUProtos.Data.SkuData.ISkuPrice[];
            public payment_type: WUProtos.Data.SkuData.SkuPaymentType;
            public last_modified_timestamp_ms: (number|Long);
            public presentation_data: WUProtos.Data.SkuData.ISkuPresentationData[];
            public enabled_window_start_ms: (number|Long);
            public enabled_window_end_ms: (number|Long);
            public static encode(message: WUProtos.Data.ISkuData, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.SkuData;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.SkuData;
            public static toObject(message: WUProtos.Data.SkuData, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace SkuData {

            enum SkuPaymentType {
                UNSET = 0,
                THIRD_PARTY = 1,
                IN_GAME = 2
            }

            interface ISkuPrice {
                currency_type?: (string|null);
                price?: (number|null);
            }

            class SkuPrice implements ISkuPrice {
                constructor(properties?: WUProtos.Data.SkuData.ISkuPrice);
                public currency_type: string;
                public price: number;
                public static encode(message: WUProtos.Data.SkuData.ISkuPrice, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.SkuData.SkuPrice;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.SkuData.SkuPrice;
                public static toObject(message: WUProtos.Data.SkuData.SkuPrice, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ISkuContent {
                item_type?: (string|null);
                quantity?: (number|null);
            }

            class SkuContent implements ISkuContent {
                constructor(properties?: WUProtos.Data.SkuData.ISkuContent);
                public item_type: string;
                public quantity: number;
                public static encode(message: WUProtos.Data.SkuData.ISkuContent, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.SkuData.SkuContent;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.SkuData.SkuContent;
                public static toObject(message: WUProtos.Data.SkuData.SkuContent, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ISkuPresentationData {
                key?: (string|null);
                value?: (string|null);
            }

            class SkuPresentationData implements ISkuPresentationData {
                constructor(properties?: WUProtos.Data.SkuData.ISkuPresentationData);
                public key: string;
                public value: string;
                public static encode(message: WUProtos.Data.SkuData.ISkuPresentationData, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.SkuData.SkuPresentationData;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.SkuData.SkuPresentationData;
                public static toObject(message: WUProtos.Data.SkuData.SkuPresentationData, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface ISocialFriendBonus {
            id?: (string|null);
        }

        class SocialFriendBonus implements ISocialFriendBonus {
            constructor(properties?: WUProtos.Data.ISocialFriendBonus);
            public id: string;
            public static encode(message: WUProtos.Data.ISocialFriendBonus, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.SocialFriendBonus;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.SocialFriendBonus;
            public static toObject(message: WUProtos.Data.SocialFriendBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface ISoundConfig {
            sound_bank?: (string|null);
            sound_event?: (string|null);
            parameters?: (WUProtos.Data.IAudioParameter[]|null);
        }

        class SoundConfig implements ISoundConfig {
            constructor(properties?: WUProtos.Data.ISoundConfig);
            public sound_bank: string;
            public sound_event: string;
            public parameters: WUProtos.Data.IAudioParameter[];
            public static encode(message: WUProtos.Data.ISoundConfig, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.SoundConfig;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.SoundConfig;
            public static toObject(message: WUProtos.Data.SoundConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IStorePack {
            id?: (string|null);
            contents?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            iap_id?: (string|null);
            sku_data?: (WUProtos.Data.ISkuData|null);
            requirements?: (WUProtos.Data.IRequirements|null);
        }

        class StorePack implements IStorePack {
            constructor(properties?: WUProtos.Data.IStorePack);
            public id: string;
            public contents?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            public cost?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            public iap_id: string;
            public sku_data?: (WUProtos.Data.ISkuData|null);
            public requirements?: (WUProtos.Data.IRequirements|null);
            public static encode(message: WUProtos.Data.IStorePack, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.StorePack;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.StorePack;
            public static toObject(message: WUProtos.Data.StorePack, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace Telemetry {

            interface IPlatformEventData {
                common_telemetry?: (WUProtos.Data.Telemetry.ITelemetryCommon|null);
            }

            class PlatformEventData implements IPlatformEventData {
                constructor(properties?: WUProtos.Data.Telemetry.IPlatformEventData);
                public common_telemetry?: (WUProtos.Data.Telemetry.ITelemetryCommon|null);
                public static encode(message: WUProtos.Data.Telemetry.IPlatformEventData, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Telemetry.PlatformEventData;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Telemetry.PlatformEventData;
                public static toObject(message: WUProtos.Data.Telemetry.PlatformEventData, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlatformMetricData {
                common_telemetry?: (WUProtos.Data.Telemetry.ITelemetryCommon|null);
                long_value?: (number|Long|null);
                double_value?: (number|null);
                boolean_value?: (boolean|null);
                distribution?: (WUProtos.Data.IDistribution|null);
                metric_kind?: (WUProtos.Data.Telemetry.PlatformMetricData.Kind|null);
            }

            class PlatformMetricData implements IPlatformMetricData {
                constructor(properties?: WUProtos.Data.Telemetry.IPlatformMetricData);
                public common_telemetry?: (WUProtos.Data.Telemetry.ITelemetryCommon|null);
                public long_value: (number|Long);
                public double_value: number;
                public boolean_value: boolean;
                public distribution?: (WUProtos.Data.IDistribution|null);
                public metric_kind: WUProtos.Data.Telemetry.PlatformMetricData.Kind;
                public DatapointValue?: ("long_value"|"double_value"|"boolean_value"|"distribution");
                public static encode(message: WUProtos.Data.Telemetry.IPlatformMetricData, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Telemetry.PlatformMetricData;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Telemetry.PlatformMetricData;
                public static toObject(message: WUProtos.Data.Telemetry.PlatformMetricData, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace PlatformMetricData {

                enum Kind {
                    UNSPECIFIED = 0,
                    GAUGE = 1,
                    DELTA = 2,
                    CUMULATIVE = 3
                }
            }

            interface ITelemetryCommon {
                timestamp?: (number|Long|null);
                correlation_vector?: (string|null);
            }

            class TelemetryCommon implements ITelemetryCommon {
                constructor(properties?: WUProtos.Data.Telemetry.ITelemetryCommon);
                public timestamp: (number|Long);
                public correlation_vector: string;
                public static encode(message: WUProtos.Data.Telemetry.ITelemetryCommon, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Telemetry.TelemetryCommon;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Telemetry.TelemetryCommon;
                public static toObject(message: WUProtos.Data.Telemetry.TelemetryCommon, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        namespace Token {

            interface IApnToken {
                registration_id?: (string|null);
                bundle_identifier?: (string|null);
                payload_byte_size?: (number|null);
            }

            class ApnToken implements IApnToken {
                constructor(properties?: WUProtos.Data.Token.IApnToken);
                public registration_id: string;
                public bundle_identifier: string;
                public payload_byte_size: number;
                public static encode(message: WUProtos.Data.Token.IApnToken, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Token.ApnToken;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Token.ApnToken;
                public static toObject(message: WUProtos.Data.Token.ApnToken, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IFbToken {
                token?: (string|null);
            }

            class FbToken implements IFbToken {
                constructor(properties?: WUProtos.Data.Token.IFbToken);
                public token: string;
                public static encode(message: WUProtos.Data.Token.IFbToken, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Token.FbToken;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Token.FbToken;
                public static toObject(message: WUProtos.Data.Token.FbToken, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IGcmToken {
                registration_id?: (string|null);
            }

            class GcmToken implements IGcmToken {
                constructor(properties?: WUProtos.Data.Token.IGcmToken);
                public registration_id: string;
                public static encode(message: WUProtos.Data.Token.IGcmToken, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Token.GcmToken;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Token.GcmToken;
                public static toObject(message: WUProtos.Data.Token.GcmToken, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IGoogleToken {
                id_token?: (string|null);
            }

            class GoogleToken implements IGoogleToken {
                constructor(properties?: WUProtos.Data.Token.IGoogleToken);
                public id_token: string;
                public static encode(message: WUProtos.Data.Token.IGoogleToken, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Token.GoogleToken;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Token.GoogleToken;
                public static toObject(message: WUProtos.Data.Token.GoogleToken, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ISuperAwesomeToken {
                token?: (string|null);
            }

            class SuperAwesomeToken implements ISuperAwesomeToken {
                constructor(properties?: WUProtos.Data.Token.ISuperAwesomeToken);
                public token: string;
                public static encode(message: WUProtos.Data.Token.ISuperAwesomeToken, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.Token.SuperAwesomeToken;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.Token.SuperAwesomeToken;
                public static toObject(message: WUProtos.Data.Token.SuperAwesomeToken, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }

        interface IWeatherAlertSettings {
            warn_weather?: (boolean|null);
            default_severity?: (WUProtos.Data.WeatherAlertSettings.WeatherAlert.Severity|null);
            ignores?: (WUProtos.Data.WeatherAlertSettings.IAlertIgnoreSettings[]|null);
            enforces?: (WUProtos.Data.WeatherAlertSettings.IAlertEnforceSettings[]|null);
        }

        class WeatherAlertSettings implements IWeatherAlertSettings {
            constructor(properties?: WUProtos.Data.IWeatherAlertSettings);
            public warn_weather: boolean;
            public default_severity: WUProtos.Data.WeatherAlertSettings.WeatherAlert.Severity;
            public ignores: WUProtos.Data.WeatherAlertSettings.IAlertIgnoreSettings[];
            public enforces: WUProtos.Data.WeatherAlertSettings.IAlertEnforceSettings[];
            public static encode(message: WUProtos.Data.IWeatherAlertSettings, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherAlertSettings;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherAlertSettings;
            public static toObject(message: WUProtos.Data.WeatherAlertSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace WeatherAlertSettings {

            interface IAlertEnforceSettings {
                country_code?: (string|null);
                when?: (WUProtos.Data.WeatherAlertSettings.IEnforceCondition|null);
            }

            class AlertEnforceSettings implements IAlertEnforceSettings {
                constructor(properties?: WUProtos.Data.WeatherAlertSettings.IAlertEnforceSettings);
                public country_code: string;
                public when?: (WUProtos.Data.WeatherAlertSettings.IEnforceCondition|null);
                public static encode(message: WUProtos.Data.WeatherAlertSettings.IAlertEnforceSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherAlertSettings.AlertEnforceSettings;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherAlertSettings.AlertEnforceSettings;
                public static toObject(message: WUProtos.Data.WeatherAlertSettings.AlertEnforceSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AlertEnforceSettings {

                interface IEnforceCondition {
                    color?: (string[]|null);
                    type?: (string[]|null);
                    category?: (string[]|null);
                }

                class EnforceCondition implements IEnforceCondition {
                    constructor(properties?: WUProtos.Data.WeatherAlertSettings.AlertEnforceSettings.IEnforceCondition);
                    public color: string[];
                    public type: string[];
                    public category: string[];
                    public static encode(message: WUProtos.Data.WeatherAlertSettings.AlertEnforceSettings.IEnforceCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherAlertSettings.AlertEnforceSettings.EnforceCondition;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherAlertSettings.AlertEnforceSettings.EnforceCondition;
                    public static toObject(message: WUProtos.Data.WeatherAlertSettings.AlertEnforceSettings.EnforceCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IAlertIgnoreSettings {
                country_code?: (string|null);
                when?: (WUProtos.Data.WeatherAlertSettings.IOverrideCondition|null);
            }

            class AlertIgnoreSettings implements IAlertIgnoreSettings {
                constructor(properties?: WUProtos.Data.WeatherAlertSettings.IAlertIgnoreSettings);
                public country_code: string;
                public when?: (WUProtos.Data.WeatherAlertSettings.IOverrideCondition|null);
                public static encode(message: WUProtos.Data.WeatherAlertSettings.IAlertIgnoreSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherAlertSettings.AlertIgnoreSettings;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherAlertSettings.AlertIgnoreSettings;
                public static toObject(message: WUProtos.Data.WeatherAlertSettings.AlertIgnoreSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AlertIgnoreSettings {

                interface IOverrideCondition {
                    color?: (string[]|null);
                    type?: (string[]|null);
                }

                class OverrideCondition implements IOverrideCondition {
                    constructor(properties?: WUProtos.Data.WeatherAlertSettings.AlertIgnoreSettings.IOverrideCondition);
                    public color: string[];
                    public type: string[];
                    public static encode(message: WUProtos.Data.WeatherAlertSettings.AlertIgnoreSettings.IOverrideCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherAlertSettings.AlertIgnoreSettings.OverrideCondition;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherAlertSettings.AlertIgnoreSettings.OverrideCondition;
                    public static toObject(message: WUProtos.Data.WeatherAlertSettings.AlertIgnoreSettings.OverrideCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IEnforceCondition {
                color?: (string[]|null);
                type?: (string[]|null);
                category?: (string[]|null);
            }

            class EnforceCondition implements IEnforceCondition {
                constructor(properties?: WUProtos.Data.WeatherAlertSettings.IEnforceCondition);
                public color: string[];
                public type: string[];
                public category: string[];
                public static encode(message: WUProtos.Data.WeatherAlertSettings.IEnforceCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherAlertSettings.EnforceCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherAlertSettings.EnforceCondition;
                public static toObject(message: WUProtos.Data.WeatherAlertSettings.EnforceCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IOverrideCondition {
                color?: (string[]|null);
                type?: (string[]|null);
            }

            class OverrideCondition implements IOverrideCondition {
                constructor(properties?: WUProtos.Data.WeatherAlertSettings.IOverrideCondition);
                public color: string[];
                public type: string[];
                public static encode(message: WUProtos.Data.WeatherAlertSettings.IOverrideCondition, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherAlertSettings.OverrideCondition;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherAlertSettings.OverrideCondition;
                public static toObject(message: WUProtos.Data.WeatherAlertSettings.OverrideCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IWeatherAlert {
                severity?: (WUProtos.Data.WeatherAlertSettings.WeatherAlert.Severity|null);
                warn_weather?: (boolean|null);
            }

            class WeatherAlert implements IWeatherAlert {
                constructor(properties?: WUProtos.Data.WeatherAlertSettings.IWeatherAlert);
                public severity: WUProtos.Data.WeatherAlertSettings.WeatherAlert.Severity;
                public warn_weather: boolean;
                public static encode(message: WUProtos.Data.WeatherAlertSettings.IWeatherAlert, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherAlertSettings.WeatherAlert;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherAlertSettings.WeatherAlert;
                public static toObject(message: WUProtos.Data.WeatherAlertSettings.WeatherAlert, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace WeatherAlert {

                enum Severity {
                    NONE = 0,
                    MODERATE = 1,
                    EXTREME = 2
                }
            }
        }

        interface IWeatherSettings {
            gameplay_settings?: (WUProtos.Data.WeatherSettings.IGameplayWeatherSettings|null);
            display_settings?: (WUProtos.Data.WeatherSettings.IDisplayWeatherSettings|null);
            alert_settings?: (WUProtos.Data.IWeatherAlertSettings|null);
        }

        class WeatherSettings implements IWeatherSettings {
            constructor(properties?: WUProtos.Data.IWeatherSettings);
            public gameplay_settings?: (WUProtos.Data.WeatherSettings.IGameplayWeatherSettings|null);
            public display_settings?: (WUProtos.Data.WeatherSettings.IDisplayWeatherSettings|null);
            public alert_settings?: (WUProtos.Data.IWeatherAlertSettings|null);
            public static encode(message: WUProtos.Data.IWeatherSettings, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherSettings;
            public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherSettings;
            public static toObject(message: WUProtos.Data.WeatherSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace WeatherSettings {

            interface IConditionMapSettings {
                gameplay_condition?: (WUProtos.Data.GameplayWeather.WeatherCondition|null);
                provider_enums?: (string[]|null);
            }

            class ConditionMapSettings implements IConditionMapSettings {
                constructor(properties?: WUProtos.Data.WeatherSettings.IConditionMapSettings);
                public gameplay_condition: WUProtos.Data.GameplayWeather.WeatherCondition;
                public provider_enums: string[];
                public static encode(message: WUProtos.Data.WeatherSettings.IConditionMapSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherSettings.ConditionMapSettings;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherSettings.ConditionMapSettings;
                public static toObject(message: WUProtos.Data.WeatherSettings.ConditionMapSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDisplayLevelSettings {
                condition_enums?: (string[]|null);
                cloud_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
                rain_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
                snow_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
                fog_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
                special_effect_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
            }

            class DisplayLevelSettings implements IDisplayLevelSettings {
                constructor(properties?: WUProtos.Data.WeatherSettings.IDisplayLevelSettings);
                public condition_enums: string[];
                public cloud_level: WUProtos.Data.DisplayWeather.DisplayLevel;
                public rain_level: WUProtos.Data.DisplayWeather.DisplayLevel;
                public snow_level: WUProtos.Data.DisplayWeather.DisplayLevel;
                public fog_level: WUProtos.Data.DisplayWeather.DisplayLevel;
                public special_effect_level: WUProtos.Data.DisplayWeather.DisplayLevel;
                public static encode(message: WUProtos.Data.WeatherSettings.IDisplayLevelSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherSettings.DisplayLevelSettings;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherSettings.DisplayLevelSettings;
                public static toObject(message: WUProtos.Data.WeatherSettings.DisplayLevelSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDisplayWeatherSettings {
                display_level_settings?: (WUProtos.Data.WeatherSettings.IDisplayLevelSettings[]|null);
                wind_level_settings?: (WUProtos.Data.WeatherSettings.IWindLevelSettings|null);
            }

            class DisplayWeatherSettings implements IDisplayWeatherSettings {
                constructor(properties?: WUProtos.Data.WeatherSettings.IDisplayWeatherSettings);
                public display_level_settings: WUProtos.Data.WeatherSettings.IDisplayLevelSettings[];
                public wind_level_settings?: (WUProtos.Data.WeatherSettings.IWindLevelSettings|null);
                public static encode(message: WUProtos.Data.WeatherSettings.IDisplayWeatherSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherSettings.DisplayWeatherSettings;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherSettings.DisplayWeatherSettings;
                public static toObject(message: WUProtos.Data.WeatherSettings.DisplayWeatherSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace DisplayWeatherSettings {

                interface IDisplayLevelSettings {
                    condition_enums?: (string[]|null);
                    cloud_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
                    rain_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
                    snow_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
                    fog_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
                    special_effect_level?: (WUProtos.Data.DisplayWeather.DisplayLevel|null);
                }

                class DisplayLevelSettings implements IDisplayLevelSettings {
                    constructor(properties?: WUProtos.Data.WeatherSettings.DisplayWeatherSettings.IDisplayLevelSettings);
                    public condition_enums: string[];
                    public cloud_level: WUProtos.Data.DisplayWeather.DisplayLevel;
                    public rain_level: WUProtos.Data.DisplayWeather.DisplayLevel;
                    public snow_level: WUProtos.Data.DisplayWeather.DisplayLevel;
                    public fog_level: WUProtos.Data.DisplayWeather.DisplayLevel;
                    public special_effect_level: WUProtos.Data.DisplayWeather.DisplayLevel;
                    public static encode(message: WUProtos.Data.WeatherSettings.DisplayWeatherSettings.IDisplayLevelSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherSettings.DisplayWeatherSettings.DisplayLevelSettings;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherSettings.DisplayWeatherSettings.DisplayLevelSettings;
                    public static toObject(message: WUProtos.Data.WeatherSettings.DisplayWeatherSettings.DisplayLevelSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IWindLevelSettings {
                    wind_level1_speed?: (number|null);
                    wind_level2_speed?: (number|null);
                    wind_level3_speed?: (number|null);
                }

                class WindLevelSettings implements IWindLevelSettings {
                    constructor(properties?: WUProtos.Data.WeatherSettings.DisplayWeatherSettings.IWindLevelSettings);
                    public wind_level1_speed: number;
                    public wind_level2_speed: number;
                    public wind_level3_speed: number;
                    public static encode(message: WUProtos.Data.WeatherSettings.DisplayWeatherSettings.IWindLevelSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherSettings.DisplayWeatherSettings.WindLevelSettings;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherSettings.DisplayWeatherSettings.WindLevelSettings;
                    public static toObject(message: WUProtos.Data.WeatherSettings.DisplayWeatherSettings.WindLevelSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IGameplayWeatherSettings {
                condition_map?: (WUProtos.Data.WeatherSettings.IConditionMapSettings[]|null);
                min_speed_for_windy?: (number|null);
                conditions_for_windy?: (string[]|null);
            }

            class GameplayWeatherSettings implements IGameplayWeatherSettings {
                constructor(properties?: WUProtos.Data.WeatherSettings.IGameplayWeatherSettings);
                public condition_map: WUProtos.Data.WeatherSettings.IConditionMapSettings[];
                public min_speed_for_windy: number;
                public conditions_for_windy: string[];
                public static encode(message: WUProtos.Data.WeatherSettings.IGameplayWeatherSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherSettings.GameplayWeatherSettings;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherSettings.GameplayWeatherSettings;
                public static toObject(message: WUProtos.Data.WeatherSettings.GameplayWeatherSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GameplayWeatherSettings {

                interface IConditionMapSettings {
                    gameplay_condition?: (WUProtos.Data.GameplayWeather.WeatherCondition|null);
                    provider_enums?: (string[]|null);
                }

                class ConditionMapSettings implements IConditionMapSettings {
                    constructor(properties?: WUProtos.Data.WeatherSettings.GameplayWeatherSettings.IConditionMapSettings);
                    public gameplay_condition: WUProtos.Data.GameplayWeather.WeatherCondition;
                    public provider_enums: string[];
                    public static encode(message: WUProtos.Data.WeatherSettings.GameplayWeatherSettings.IConditionMapSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherSettings.GameplayWeatherSettings.ConditionMapSettings;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherSettings.GameplayWeatherSettings.ConditionMapSettings;
                    public static toObject(message: WUProtos.Data.WeatherSettings.GameplayWeatherSettings.ConditionMapSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IWindLevelSettings {
                wind_level1_speed?: (number|null);
                wind_level2_speed?: (number|null);
                wind_level3_speed?: (number|null);
            }

            class WindLevelSettings implements IWindLevelSettings {
                constructor(properties?: WUProtos.Data.WeatherSettings.IWindLevelSettings);
                public wind_level1_speed: number;
                public wind_level2_speed: number;
                public wind_level3_speed: number;
                public static encode(message: WUProtos.Data.WeatherSettings.IWindLevelSettings, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Data.WeatherSettings.WindLevelSettings;
                public static fromObject(object: { [k: string]: any }): WUProtos.Data.WeatherSettings.WindLevelSettings;
                public static toObject(message: WUProtos.Data.WeatherSettings.WindLevelSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }
        }
    }

    namespace Enums {

        enum ActiveEngagement {
            ACTIVE_ENGAGEMENT_UNSET = 0,
            MOB_IS_ENGAGED = 1,
            MOB_IS_FREE = 2
        }

        enum AppBackgroundResult {
            NONE = 0,
            MAP_STATE = 1,
            FULL_RESET = 2,
            DEFAULT_APP_BACKGROUND = 3
        }

        enum BoolLiteral {
            BOOL_UNKNOWN = 0,
            TRUE = 1,
            FALSE = 2
        }

        enum CategoryShareLocation {
            CATEGORY_SHARE_LOCATION_UNSET = 0,
            CATEGORY_SAVE_PASSPORT = 1,
            CATEGORY_SAVE_SELFIE_FLOW = 2
        }

        enum ChallengeRpcStatus {
            CHALLENGE_RPC_UNKNOWN = 0,
            CHALLENGE_RPC_SUCCESS = 1,
            CHALLENGE_RPC_OUT_OF_RANGE = 2,
            CHALLENGE_RPC_NOT_IN_CHAMBER = 3,
            CHALLENGE_RPC_ALREADY_IN_CHAMBER = 4,
            CHALLENGE_RPC_CANNOT_PLACE_RUNESTONE = 5,
            CHALLENGE_RPC_POI_CLOSED = 6,
            CHALLENGE_RPC_FORTRESS_IN_COOLDOWN = 7,
            CHALLENGE_RPC_CANNOT_CHANGE_PROFESSION = 8
        }

        enum CombatMoveType {
            COMBAT_PLAYER_ATTACK = 0,
            COMBAT_PLAYER_DEFEND = 1,
            COMBAT_PLAYER_AUTO_ADVANCE = 2
        }

        enum CombatPhaseOutcome {
            COMBAT_PHASE_OUTCOME_UNKNOWN = 0,
            SUCCEED = 1,
            FAIL_CHECKPOINT = 2,
            FAIL_TIME = 3
        }

        enum ComparisonOperator {
            COMPARISON_UNKNOWN = 0,
            EQUAL = 1,
            GREATER_THAN = 2,
            LESS_THAN = 3,
            GREATER_OR_EQUAL = 4,
            LESS_OR_EQUAL = 5
        }

        enum ConditionTargetType {
            CONDITION_TARGET_TYPE_UNSET = 0,
            SELF = 1,
            OPPONENT = 2
        }

        enum DevicePlatform {
            DEVICE_UNKNOWN = 0,
            DEVICE_IOS = 1,
            DEVICE_ANDROID = 2
        }

        enum DownloadType {
            DOWNLOAD_TYPE_UNSET = 0,
            PORTRAIT_DOWNLOAD_PASSPORT = 1,
            PORTRAIT_DOWNLOAD_PHOTO = 2
        }

        enum EncounterOrigin {
            DITTO_TRACE = 0,
            TUTORIAL_TRACE = 1,
            DEBUG = 2
        }

        enum EqualityOperator {
            EQUALITY_OPERATOR_UNSET = 0,
            IS_EQUAL = 1,
            IS_NOT_EQUAL = 2
        }

        enum IdentityProvider {
            UNSET_IDENTITY_PROVIDER = 0,
            GOOGLE = 1,
            PTC = 2,
            FACEBOOK = 3,
            BACKGROUND = 4,
            INTERNAL = 5,
            SFIDA = 6,
            SUPER_AWESOME = 7
        }

        enum LexiconMetricIds {
            UNSET_METRIC_ID = 0,
            GENERIC_METRIC_ID = 1
        }

        enum MasterNoteGesture {
            GESTURE_NONE = 0,
            GESTURE_HORIZONTAL = 1,
            GESTURE_VERTICAL = 2,
            GESTURE_CLOCKWISE = 3,
            GESTURE_COUNTER_CLOCKWISE = 4,
            GESTURE_PINCH_OUT = 5,
            GESTURE_PINCH_IN = 6,
            GESTURE_TAP = 7,
            GESTURE_SHAKE = 8
        }

        enum NotificationState {
            UNSET_STATE = 0,
            VIEWED = 1
        }

        enum PoiAccessibility {
            UNKNOWN_POI_STATE = 0,
            POI_OPEN = 1,
            POI_CLOSED = 2,
            POI_CLOSING = 3
        }

        enum StatType {
            STAT_UNKNOWN = 0,
            STAT_COMBAT_HP = 1,
            STAT_COMBAT_ATTACK = 2,
            PLAYER_STAT_XP_MULTIPLIER = 3,
            PLAYER_STAT_COMBAT_CRIT_CHANCE = 4,
            PLAYER_STAT_COMBAT_CRIT_DAMAGE = 5,
            PLAYER_STAT_COMBAT_BLOCK_AMOUNT = 6,
            PLAYER_STAT_SPELLCAST_SUCCESS_CHANCE_BOOST = 7,
            PLAYER_STAT_FLEE_CHANCE_DEBOOST = 8,
            MAP_ABILITY_COOLDOWN_TIME_MS = 9,
            STAT_COMBAT_HP_HEAL_PERCENT = 10,
            STAT_COMBAT_ATTACK_MULTIPLIER = 11,
            STAT_COMBAT_HP_HEAL_AMOUNT = 12,
            STAT_COMBAT_AFFINITY_POWER = 13,
            STAT_COMBAT_AFFINITY_RESIST = 14,
            STAT_COMBAT_MITIGATION = 15,
            STAT_COMBAT_SUNDER = 16,
            STAT_COMBAT_DODGE = 17,
            STAT_COMBAT_PRECISION = 18,
            STAT_COMBAT_REVIVE_WITH_HEAL_PERCENT = 19,
            STAT_COMBAT_FOCUS = 20,
            STAT_COMBAT_STARTING_FOCUS = 21,
            STAT_COMBAT_FOCUS_BONUS = 22,
            STAT_COMBAT_FOCUS_TRANSFER = 23
        }

        enum UIAnimationState {
            NOT_STARTED = 0,
            RUNNING = 1,
            COMPLETE = 2
        }

        enum UpdateType {
            ADD = 0,
            MODIFY = 1,
            REMOVE = 2,
            PREDICTED_MODIFY = 3,
            PREDICTED_REMOVE = 4,
            ROLLED_BACK_MODIFY = 5,
            ROLLED_BACK_REMOVE = 6
        }
    }

    namespace Inventory {

        interface IAtlasInventoryItem {
            profile?: (WUProtos.Inventory.AtlasInventoryItem.IPlayerProfile|null);
            vault_item?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryVaultItem|null);
            collection_item?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionItem|null);
            collection_family?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionFamily|null);
            walkbox?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryWalkboxItem|null);
            player_flags?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryFeatureFlags|null);
            portkey?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryPortkeyItem|null);
            player_active_buff_list?: (WUProtos.Data.Buff.IActiveBuffList|null);
            collection_page?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionPage|null);
            vault_capacity?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryVaultCapacity|null);
            cauldron?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryCauldron|null);
            escrowed_rewards?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryEscrowedRewards|null);
            professions_progress_v3?: (WUProtos.Data.Player.IPlayerProfessionsProgressV3|null);
            quest_log?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryQuestLog|null);
            lifetime_metrics?: (WUProtos.Inventory.AtlasInventoryItem.ILifetimeMetrics|null);
        }

        class AtlasInventoryItem implements IAtlasInventoryItem {
            constructor(properties?: WUProtos.Inventory.IAtlasInventoryItem);
            public profile?: (WUProtos.Inventory.AtlasInventoryItem.IPlayerProfile|null);
            public vault_item?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryVaultItem|null);
            public collection_item?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionItem|null);
            public collection_family?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionFamily|null);
            public walkbox?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryWalkboxItem|null);
            public player_flags?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryFeatureFlags|null);
            public portkey?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryPortkeyItem|null);
            public player_active_buff_list?: (WUProtos.Data.Buff.IActiveBuffList|null);
            public collection_page?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionPage|null);
            public vault_capacity?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryVaultCapacity|null);
            public cauldron?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryCauldron|null);
            public escrowed_rewards?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryEscrowedRewards|null);
            public professions_progress_v3?: (WUProtos.Data.Player.IPlayerProfessionsProgressV3|null);
            public quest_log?: (WUProtos.Inventory.AtlasInventoryItem.IInventoryQuestLog|null);
            public lifetime_metrics?: (WUProtos.Inventory.AtlasInventoryItem.ILifetimeMetrics|null);
            public Type?: ("profile"|"vault_item"|"collection_item"|"collection_family"|"walkbox"|"player_flags"|"portkey"|"player_active_buff_list"|"collection_page"|"vault_capacity"|"cauldron"|"escrowed_rewards"|"professions_progress_v3"|"quest_log"|"lifetime_metrics");
            public static encode(message: WUProtos.Inventory.IAtlasInventoryItem, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem;
            public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem;
            public static toObject(message: WUProtos.Inventory.AtlasInventoryItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        namespace AtlasInventoryItem {

            interface IInventoryCauldron {
                id?: (number|Long|null);
                template_id?: (string|null);
                cauldron_slot?: (WUProtos.Inventory.AtlasInventoryItem.InventoryCauldron.IInventoryCauldronSlot[]|null);
                brewing_start_timestamp?: (number|Long|null);
                availability_start_timestamp?: (number|Long|null);
                availability_time?: (number|Long|null);
            }

            class InventoryCauldron implements IInventoryCauldron {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IInventoryCauldron);
                public id: (number|Long);
                public template_id: string;
                public cauldron_slot: WUProtos.Inventory.AtlasInventoryItem.InventoryCauldron.IInventoryCauldronSlot[];
                public brewing_start_timestamp: (number|Long);
                public availability_start_timestamp: (number|Long);
                public availability_time: (number|Long);
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IInventoryCauldron, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryCauldron;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryCauldron;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryCauldron, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace InventoryCauldron {

                interface IInventoryCauldronSlot {
                    rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    time_to_brew?: (number|Long|null);
                    recipe_gmt_id?: (string|null);
                    master_note_applied?: (boolean|null);
                }

                class InventoryCauldronSlot implements IInventoryCauldronSlot {
                    constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.InventoryCauldron.IInventoryCauldronSlot);
                    public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public time_to_brew: (number|Long);
                    public recipe_gmt_id: string;
                    public master_note_applied: boolean;
                    public static encode(message: WUProtos.Inventory.AtlasInventoryItem.InventoryCauldron.IInventoryCauldronSlot, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryCauldron.InventoryCauldronSlot;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryCauldron.InventoryCauldronSlot;
                    public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryCauldron.InventoryCauldronSlot, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IInventoryFeatureFlags {
                id?: (string|null);
                flags?: (WUProtos.Inventory.AtlasInventoryItem.InventoryFeatureFlags.IInventoryFeatureFlag[]|null);
            }

            class InventoryFeatureFlags implements IInventoryFeatureFlags {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IInventoryFeatureFlags);
                public id: string;
                public flags: WUProtos.Inventory.AtlasInventoryItem.InventoryFeatureFlags.IInventoryFeatureFlag[];
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IInventoryFeatureFlags, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryFeatureFlags;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryFeatureFlags;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryFeatureFlags, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace InventoryFeatureFlags {

                interface IInventoryFeatureFlag {
                    id?: (string|null);
                    bval?: (boolean|null);
                    lval?: (number|Long|null);
                    sval?: (string|null);
                    fval?: (number|null);
                }

                class InventoryFeatureFlag implements IInventoryFeatureFlag {
                    constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.InventoryFeatureFlags.IInventoryFeatureFlag);
                    public id: string;
                    public bval: boolean;
                    public lval: (number|Long);
                    public sval: string;
                    public fval: number;
                    public Value?: ("bval"|"lval"|"sval"|"fval");
                    public static encode(message: WUProtos.Inventory.AtlasInventoryItem.InventoryFeatureFlags.IInventoryFeatureFlag, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryFeatureFlags.InventoryFeatureFlag;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryFeatureFlags.InventoryFeatureFlag;
                    public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryFeatureFlags.InventoryFeatureFlag, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IInventoryWalkboxItem {
                id?: (number|Long|null);
                template_id?: (string|null);
                status?: (WUProtos.Inventory.AtlasInventoryItem.InventoryWalkboxItem.UnlockingStatus|null);
                completion_pedometer_km?: (number|null);
                timestamp?: (number|Long|null);
            }

            class InventoryWalkboxItem implements IInventoryWalkboxItem {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IInventoryWalkboxItem);
                public id: (number|Long);
                public template_id: string;
                public status: WUProtos.Inventory.AtlasInventoryItem.InventoryWalkboxItem.UnlockingStatus;
                public completion_pedometer_km: number;
                public timestamp: (number|Long);
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IInventoryWalkboxItem, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryWalkboxItem;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryWalkboxItem;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryWalkboxItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace InventoryWalkboxItem {

                enum UnlockingStatus {
                    UNKNOWN = 0,
                    NOT_STARTED = 1,
                    INFINITE_UNLOCKER = 2,
                    PREMIUM_UNLOCKER = 3
                }
            }

            interface IInventoryVaultItem {
                id?: (string|null);
                qty?: (number|Long|null);
            }

            class InventoryVaultItem implements IInventoryVaultItem {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IInventoryVaultItem);
                public id: string;
                public qty: (number|Long);
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IInventoryVaultItem, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryVaultItem;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryVaultItem;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryVaultItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IInventoryVaultCapacity {
                category_capacity?: ({ [k: string]: (number|Long) }|null);
            }

            class InventoryVaultCapacity implements IInventoryVaultCapacity {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IInventoryVaultCapacity);
                public category_capacity: { [k: string]: (number|Long) };
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IInventoryVaultCapacity, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryVaultCapacity;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryVaultCapacity;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryVaultCapacity, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IInventoryPortkeyItem {
                id?: (number|Long|null);
                timestamp?: (number|Long|null);
                template_id?: (string|null);
            }

            class InventoryPortkeyItem implements IInventoryPortkeyItem {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IInventoryPortkeyItem);
                public id: (number|Long);
                public timestamp: (number|Long);
                public template_id: string;
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IInventoryPortkeyItem, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryPortkeyItem;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryPortkeyItem;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryPortkeyItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IInventoryQuestLog {
                quests?: (WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.IInventoryInProgressQuest[]|null);
                completed_quests?: (WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.IInventoryCompletedQuest[]|null);
            }

            class InventoryQuestLog implements IInventoryQuestLog {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IInventoryQuestLog);
                public quests: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.IInventoryInProgressQuest[];
                public completed_quests: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.IInventoryCompletedQuest[];
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IInventoryQuestLog, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace InventoryQuestLog {

                interface IInventoryCompletedQuest {
                    quest_gmt_id?: (string|null);
                    completed_day_since_epoch_if_daily?: (number|Long|null);
                    completed_day_since_epoch?: (number|Long|null);
                }

                class InventoryCompletedQuest implements IInventoryCompletedQuest {
                    constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.IInventoryCompletedQuest);
                    public quest_gmt_id: string;
                    public completed_day_since_epoch_if_daily: (number|Long);
                    public completed_day_since_epoch: (number|Long);
                    public static encode(message: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.IInventoryCompletedQuest, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryCompletedQuest;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryCompletedQuest;
                    public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryCompletedQuest, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IInventoryInProgressQuest {
                    quest_gmt_id?: (string|null);
                    progress_per_task?: (WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.IQuestProgress[]|null);
                    version?: (number|null);
                    start_day_since_epoch_if_daily?: (number|Long|null);
                    start_day_since_epoch?: (number|Long|null);
                }

                class InventoryInProgressQuest implements IInventoryInProgressQuest {
                    constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.IInventoryInProgressQuest);
                    public quest_gmt_id: string;
                    public progress_per_task: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.IQuestProgress[];
                    public version: number;
                    public start_day_since_epoch_if_daily: (number|Long);
                    public start_day_since_epoch: (number|Long);
                    public static encode(message: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.IInventoryInProgressQuest, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest;
                    public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace InventoryInProgressQuest {

                    interface IQuestProgress {
                        req_progress?: (WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.QuestProgress.IRequirementsQuestProgress|null);
                        hook_progress?: (WUProtos.Data.IHookQuestProgress|null);
                    }

                    class QuestProgress implements IQuestProgress {
                        constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.IQuestProgress);
                        public req_progress?: (WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.QuestProgress.IRequirementsQuestProgress|null);
                        public hook_progress?: (WUProtos.Data.IHookQuestProgress|null);
                        public Type?: ("req_progress"|"hook_progress");
                        public static encode(message: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.IQuestProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.QuestProgress;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.QuestProgress;
                        public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.QuestProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace QuestProgress {

                        interface IRequirementsQuestProgress {
                        }

                        class RequirementsQuestProgress implements IRequirementsQuestProgress {
                            constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.QuestProgress.IRequirementsQuestProgress);
                            public static encode(message: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.QuestProgress.IRequirementsQuestProgress, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.QuestProgress.RequirementsQuestProgress;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.QuestProgress.RequirementsQuestProgress;
                            public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryQuestLog.InventoryInProgressQuest.QuestProgress.RequirementsQuestProgress, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }
                    }
                }
            }

            interface IInventoryEscrowedRewards {
                rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class InventoryEscrowedRewards implements IInventoryEscrowedRewards {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IInventoryEscrowedRewards);
                public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IInventoryEscrowedRewards, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryEscrowedRewards;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryEscrowedRewards;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryEscrowedRewards, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IInventoryCollectionPage {
                id?: (string|null);
                first_sticker_gmt_id?: (string|null);
                first_sticker_timestamp?: (number|Long|null);
                last_sticker_gmt_id?: (string|null);
                last_sticker_timestamp?: (number|Long|null);
                level?: (number|null);
            }

            class InventoryCollectionPage implements IInventoryCollectionPage {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionPage);
                public id: string;
                public first_sticker_gmt_id: string;
                public first_sticker_timestamp: (number|Long);
                public last_sticker_gmt_id: string;
                public last_sticker_timestamp: (number|Long);
                public level: number;
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionPage, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryCollectionPage;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryCollectionPage;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryCollectionPage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IInventoryCollectionItem {
                id?: (string|null);
                times_encountered?: (number|null);
                times_returned?: (number|null);
                first_time_rewards_collected?: (boolean|null);
                found_location?: (string|null);
                found_time?: (number|Long|null);
                placed?: (boolean|null);
                current_returned?: (number|null);
                shards?: (number|null);
            }

            class InventoryCollectionItem implements IInventoryCollectionItem {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionItem);
                public id: string;
                public times_encountered: number;
                public times_returned: number;
                public first_time_rewards_collected: boolean;
                public found_location: string;
                public found_time: (number|Long);
                public placed: boolean;
                public current_returned: number;
                public shards: number;
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionItem, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryCollectionItem;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryCollectionItem;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryCollectionItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IInventoryCollectionFamily {
                id?: (string|null);
                family_xp?: (number|null);
                family_level?: (number|null);
                rewards_collected_level?: (number|null);
                current_chests_opened?: (number|null);
            }

            class InventoryCollectionFamily implements IInventoryCollectionFamily {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionFamily);
                public id: string;
                public family_xp: number;
                public family_level: number;
                public rewards_collected_level: number;
                public current_chests_opened: number;
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IInventoryCollectionFamily, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.InventoryCollectionFamily;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.InventoryCollectionFamily;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.InventoryCollectionFamily, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ILifetimeMetrics {
                family_metrics?: ({ [k: string]: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IFamilyMetrics }|null);
                poi_looted?: (WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IPoiLootedMetrics|null);
                map_encounter?: (WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IMapEncounterMetrics|null);
                wc?: (WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IWcMetrics|null);
                collected_gold_quantity?: (number|null);
                used_gold_quantity?: (number|null);
                dark_detectors_placed?: ({ [k: string]: number }|null);
                collected_category_quantity?: ({ [k: string]: number }|null);
                used_category_quantity?: ({ [k: string]: number }|null);
                successful_swish_spellcast?: (number|null);
                successful_combat_attack_spellcast?: (number|null);
                successful_combat_defend_spellcast?: (number|null);
                portkeys_opened?: (number|null);
                potions_brewed?: (number|null);
                map_ingredient_collected?: (number|null);
                potion_exstimulo1_used?: (number|null);
                potion_exstimulo2_used?: (number|null);
                potion_exstimulo3_used?: (number|null);
                potion_brain_elixir_used?: (number|null);
                potion_used_encounter?: (number|null);
                potion_used_wc?: (number|null);
                swish_masterful_spellcast?: (number|null);
                mobs_defeated_by_me?: (number|null);
                seeds_planted?: (number|null);
                mystery_items_found?: (number|null);
                encounter_completed_countries?: (string[]|null);
                elite_mobs_defeated_by_me?: (number|null);
                map_abilities_used?: (number|null);
            }

            class LifetimeMetrics implements ILifetimeMetrics {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.ILifetimeMetrics);
                public family_metrics: { [k: string]: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IFamilyMetrics };
                public poi_looted?: (WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IPoiLootedMetrics|null);
                public map_encounter?: (WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IMapEncounterMetrics|null);
                public wc?: (WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IWcMetrics|null);
                public collected_gold_quantity: number;
                public used_gold_quantity: number;
                public dark_detectors_placed: { [k: string]: number };
                public collected_category_quantity: { [k: string]: number };
                public used_category_quantity: { [k: string]: number };
                public successful_swish_spellcast: number;
                public successful_combat_attack_spellcast: number;
                public successful_combat_defend_spellcast: number;
                public portkeys_opened: number;
                public potions_brewed: number;
                public map_ingredient_collected: number;
                public potion_exstimulo1_used: number;
                public potion_exstimulo2_used: number;
                public potion_exstimulo3_used: number;
                public potion_brain_elixir_used: number;
                public potion_used_encounter: number;
                public potion_used_wc: number;
                public swish_masterful_spellcast: number;
                public mobs_defeated_by_me: number;
                public seeds_planted: number;
                public mystery_items_found: number;
                public encounter_completed_countries: string[];
                public elite_mobs_defeated_by_me: number;
                public map_abilities_used: number;
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.ILifetimeMetrics, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace LifetimeMetrics {

                interface IFamilyMetrics {
                    family_xp?: (number|Long|null);
                    family_chest?: (number|Long|null);
                    family_sticker?: (number|Long|null);
                }

                class FamilyMetrics implements IFamilyMetrics {
                    constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IFamilyMetrics);
                    public family_xp: (number|Long);
                    public family_chest: (number|Long);
                    public family_sticker: (number|Long);
                    public static encode(message: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IFamilyMetrics, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.FamilyMetrics;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.FamilyMetrics;
                    public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.FamilyMetrics, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IMapEncounterMetrics {
                    swish_completed?: (number|Long|null);
                    swish_user_fled?: (number|Long|null);
                    swish_captured?: (number|Long|null);
                    combat_completed?: (number|Long|null);
                    combat_user_fled?: (number|Long|null);
                    combat_captured?: (number|Long|null);
                }

                class MapEncounterMetrics implements IMapEncounterMetrics {
                    constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IMapEncounterMetrics);
                    public swish_completed: (number|Long);
                    public swish_user_fled: (number|Long);
                    public swish_captured: (number|Long);
                    public combat_completed: (number|Long);
                    public combat_user_fled: (number|Long);
                    public combat_captured: (number|Long);
                    public static encode(message: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IMapEncounterMetrics, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.MapEncounterMetrics;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.MapEncounterMetrics;
                    public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.MapEncounterMetrics, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPoiLootedMetrics {
                    inn?: (number|Long|null);
                    greenhouse?: (number|Long|null);
                }

                class PoiLootedMetrics implements IPoiLootedMetrics {
                    constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IPoiLootedMetrics);
                    public inn: (number|Long);
                    public greenhouse: (number|Long);
                    public static encode(message: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IPoiLootedMetrics, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.PoiLootedMetrics;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.PoiLootedMetrics;
                    public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.PoiLootedMetrics, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IWcMetrics {
                    completed?: (number|Long|null);
                    won?: (number|Long|null);
                }

                class WcMetrics implements IWcMetrics {
                    constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IWcMetrics);
                    public completed: (number|Long);
                    public won: (number|Long);
                    public static encode(message: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.IWcMetrics, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.WcMetrics;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.WcMetrics;
                    public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.LifetimeMetrics.WcMetrics, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IPlayerProfile {
                nickname?: (string|null);
                level?: (number|null);
                distance_walked_km?: (number|null);
                max_hp?: (number|Long|null);
                attack_power?: (number|Long|null);
                player_team_id?: (string|null);
                profession_id?: (string|null);
                title_id?: (string|null);
                unlocked_title_ids?: (string[]|null);
                theme_id?: (string|null);
                unlocked_theme_ids?: (string[]|null);
                house_id?: (string|null);
                wand?: (WUProtos.Inventory.AtlasInventoryItem.PlayerProfile.IWandOptions|null);
                favorite_badge_ids?: (string[]|null);
                unlocked_badge_ids?: (string[]|null);
                favorite_title_ids?: (string[]|null);
                first_name?: (string|null);
                last_name?: (string|null);
                profile_creation_location?: (string|null);
                unlocked_selfie_asset_ids?: (string[]|null);
                total_swish_success_spell?: (number|Long|null);
                discovered_potions_master_note_ids?: (string[]|null);
                master_note_discovery_status?: ({ [k: string]: (number|Long) }|null);
                swish_spellcasts?: ({ [k: string]: (number|Long) }|null);
                store_pack_purchased?: ({ [k: string]: (number|Long) }|null);
                email_opts?: (WUProtos.Data.IEmailOpts|null);
                lifetime_inn_looted?: (number|Long|null);
                lifetime_greenhouse_looted?: (number|Long|null);
                lifetime_map_encounter_won?: (number|Long|null);
                lifetime_wc_won?: (number|Long|null);
            }

            class PlayerProfile implements IPlayerProfile {
                constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.IPlayerProfile);
                public nickname: string;
                public level: number;
                public distance_walked_km: number;
                public max_hp: (number|Long);
                public attack_power: (number|Long);
                public player_team_id: string;
                public profession_id: string;
                public title_id: string;
                public unlocked_title_ids: string[];
                public theme_id: string;
                public unlocked_theme_ids: string[];
                public house_id: string;
                public wand?: (WUProtos.Inventory.AtlasInventoryItem.PlayerProfile.IWandOptions|null);
                public favorite_badge_ids: string[];
                public unlocked_badge_ids: string[];
                public favorite_title_ids: string[];
                public first_name: string;
                public last_name: string;
                public profile_creation_location: string;
                public unlocked_selfie_asset_ids: string[];
                public total_swish_success_spell: (number|Long);
                public discovered_potions_master_note_ids: string[];
                public master_note_discovery_status: { [k: string]: (number|Long) };
                public swish_spellcasts: { [k: string]: (number|Long) };
                public store_pack_purchased: { [k: string]: (number|Long) };
                public email_opts?: (WUProtos.Data.IEmailOpts|null);
                public lifetime_inn_looted: (number|Long);
                public lifetime_greenhouse_looted: (number|Long);
                public lifetime_map_encounter_won: (number|Long);
                public lifetime_wc_won: (number|Long);
                public static encode(message: WUProtos.Inventory.AtlasInventoryItem.IPlayerProfile, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.PlayerProfile;
                public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.PlayerProfile;
                public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.PlayerProfile, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace PlayerProfile {

                interface IWandOptions {
                    core_id?: (string|null);
                    wood_id?: (string|null);
                    flexibility_id?: (string|null);
                    length_id?: (string|null);
                }

                class WandOptions implements IWandOptions {
                    constructor(properties?: WUProtos.Inventory.AtlasInventoryItem.PlayerProfile.IWandOptions);
                    public core_id: string;
                    public wood_id: string;
                    public flexibility_id: string;
                    public length_id: string;
                    public static encode(message: WUProtos.Inventory.AtlasInventoryItem.PlayerProfile.IWandOptions, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryItem.PlayerProfile.WandOptions;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryItem.PlayerProfile.WandOptions;
                    public static toObject(message: WUProtos.Inventory.AtlasInventoryItem.PlayerProfile.WandOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        interface IAtlasInventoryKey {
            profile?: (boolean|null);
            vault_item?: (string|null);
            collection_item?: (string|null);
            collection_family?: (string|null);
            walkbox?: (number|Long|null);
            player_flags?: (string|null);
            portkey?: (number|Long|null);
            player_active_buff_list?: (boolean|null);
            collection_page?: (string|null);
            professions_progress?: (boolean|null);
            vault_capacity?: (boolean|null);
            cauldron?: (number|Long|null);
            escrowed_rewards?: (boolean|null);
            professions_progress_v3?: (boolean|null);
            quest_log?: (boolean|null);
            lifetime_metrics?: (boolean|null);
        }

        class AtlasInventoryKey implements IAtlasInventoryKey {
            constructor(properties?: WUProtos.Inventory.IAtlasInventoryKey);
            public profile: boolean;
            public vault_item: string;
            public collection_item: string;
            public collection_family: string;
            public walkbox: (number|Long);
            public player_flags: string;
            public portkey: (number|Long);
            public player_active_buff_list: boolean;
            public collection_page: string;
            public professions_progress: boolean;
            public vault_capacity: boolean;
            public cauldron: (number|Long);
            public escrowed_rewards: boolean;
            public professions_progress_v3: boolean;
            public quest_log: boolean;
            public lifetime_metrics: boolean;
            public Type?: ("profile"|"vault_item"|"collection_item"|"collection_family"|"walkbox"|"player_flags"|"portkey"|"player_active_buff_list"|"collection_page"|"professions_progress"|"vault_capacity"|"cauldron"|"escrowed_rewards"|"professions_progress_v3"|"quest_log"|"lifetime_metrics");
            public static encode(message: WUProtos.Inventory.IAtlasInventoryKey, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.AtlasInventoryKey;
            public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.AtlasInventoryKey;
            public static toObject(message: WUProtos.Inventory.AtlasInventoryKey, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IInventory {
            inventory_item?: (WUProtos.Inventory.IInventoryItem[]|null);
        }

        class Inventory implements IInventory {
            constructor(properties?: WUProtos.Inventory.IInventory);
            public inventory_item: WUProtos.Inventory.IInventoryItem[];
            public static encode(message: WUProtos.Inventory.IInventory, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.Inventory;
            public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.Inventory;
            public static toObject(message: WUProtos.Inventory.Inventory, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }

        interface IInventoryItem {
            modified_timestamp?: (number|Long|null);
            deleted_item_key?: (Uint8Array|null);
            item?: (Uint8Array|null);
        }

        class InventoryItem implements IInventoryItem {
            constructor(properties?: WUProtos.Inventory.IInventoryItem);
            public modified_timestamp: (number|Long);
            public deleted_item_key: Uint8Array;
            public item: Uint8Array;
            public InventoryItem?: ("deleted_item_key"|"item");
            public static encode(message: WUProtos.Inventory.IInventoryItem, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Inventory.InventoryItem;
            public static fromObject(object: { [k: string]: any }): WUProtos.Inventory.InventoryItem;
            public static toObject(message: WUProtos.Inventory.InventoryItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }
    }

    namespace Map {

        interface IMapCoordinate {
            latitude?: (number|null);
            longitude?: (number|null);
            x?: (number|null);
            y?: (number|null);
        }

        class MapCoordinate implements IMapCoordinate {
            constructor(properties?: WUProtos.Map.IMapCoordinate);
            public latitude: number;
            public longitude: number;
            public x: number;
            public y: number;
            public static encode(message: WUProtos.Map.IMapCoordinate, writer?: $protobuf.Writer): $protobuf.Writer;
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Map.MapCoordinate;
            public static fromObject(object: { [k: string]: any }): WUProtos.Map.MapCoordinate;
            public static toObject(message: WUProtos.Map.MapCoordinate, options?: $protobuf.IConversionOptions): { [k: string]: any };
            public toJSON(): { [k: string]: any };
        }
    }

    namespace Networking {

        namespace Envelopes {

            interface IAuthTicket {
                start?: (Uint8Array|null);
                expire_timestamp_ms?: (number|Long|null);
                end?: (Uint8Array|null);
            }

            class AuthTicket implements IAuthTicket {
                constructor(properties?: WUProtos.Networking.Envelopes.IAuthTicket);
                public start: Uint8Array;
                public expire_timestamp_ms: (number|Long);
                public end: Uint8Array;
                public static encode(message: WUProtos.Networking.Envelopes.IAuthTicket, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Envelopes.AuthTicket;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Envelopes.AuthTicket;
                public static toObject(message: WUProtos.Networking.Envelopes.AuthTicket, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IRequestEnvelope {
                status_code?: (number|null);
                request_id?: (number|Long|null);
                requests?: (WUProtos.Networking.Requests.IRequest[]|null);
                platform_requests?: (WUProtos.Networking.Envelopes.RequestEnvelope.IPlatformRequest[]|null);
                latitude?: (number|null);
                longitude?: (number|null);
                accuracy?: (number|null);
                auth_info?: (WUProtos.Networking.Envelopes.RequestEnvelope.IAuthInfo|null);
                auth_ticket?: (WUProtos.Networking.Envelopes.IAuthTicket|null);
                ms_since_last_locationfix?: (number|Long|null);
            }

            class RequestEnvelope implements IRequestEnvelope {
                constructor(properties?: WUProtos.Networking.Envelopes.IRequestEnvelope);
                public status_code: number;
                public request_id: (number|Long);
                public requests: WUProtos.Networking.Requests.IRequest[];
                public platform_requests: WUProtos.Networking.Envelopes.RequestEnvelope.IPlatformRequest[];
                public latitude: number;
                public longitude: number;
                public accuracy: number;
                public auth_info?: (WUProtos.Networking.Envelopes.RequestEnvelope.IAuthInfo|null);
                public auth_ticket?: (WUProtos.Networking.Envelopes.IAuthTicket|null);
                public ms_since_last_locationfix: (number|Long);
                public static encode(message: WUProtos.Networking.Envelopes.IRequestEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Envelopes.RequestEnvelope;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Envelopes.RequestEnvelope;
                public static toObject(message: WUProtos.Networking.Envelopes.RequestEnvelope, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace RequestEnvelope {

                interface IAuthInfo {
                    provider?: (string|null);
                    token?: (WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.IJWT|null);
                    options?: (WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.IAuthOptions|null);
                }

                class AuthInfo implements IAuthInfo {
                    constructor(properties?: WUProtos.Networking.Envelopes.RequestEnvelope.IAuthInfo);
                    public provider: string;
                    public token?: (WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.IJWT|null);
                    public options?: (WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.IAuthOptions|null);
                    public static encode(message: WUProtos.Networking.Envelopes.RequestEnvelope.IAuthInfo, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo;
                    public static toObject(message: WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace AuthInfo {

                    interface IJWT {
                        contents?: (string|null);
                        unknown2?: (number|null);
                    }

                    class JWT implements IJWT {
                        constructor(properties?: WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.IJWT);
                        public contents: string;
                        public unknown2: number;
                        public static encode(message: WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.IJWT, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.JWT;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.JWT;
                        public static toObject(message: WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.JWT, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IAuthOptions {
                        prevent_account_creation?: (boolean|null);
                    }

                    class AuthOptions implements IAuthOptions {
                        constructor(properties?: WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.IAuthOptions);
                        public prevent_account_creation: boolean;
                        public static encode(message: WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.IAuthOptions, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.AuthOptions;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.AuthOptions;
                        public static toObject(message: WUProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.AuthOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IPlatformRequest {
                    type?: (WUProtos.Networking.Platform.PlatformRequestType|null);
                    request_message?: (Uint8Array|null);
                }

                class PlatformRequest implements IPlatformRequest {
                    constructor(properties?: WUProtos.Networking.Envelopes.RequestEnvelope.IPlatformRequest);
                    public type: WUProtos.Networking.Platform.PlatformRequestType;
                    public request_message: Uint8Array;
                    public static encode(message: WUProtos.Networking.Envelopes.RequestEnvelope.IPlatformRequest, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Envelopes.RequestEnvelope.PlatformRequest;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Envelopes.RequestEnvelope.PlatformRequest;
                    public static toObject(message: WUProtos.Networking.Envelopes.RequestEnvelope.PlatformRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IResponseEnvelope {
                status_code?: (WUProtos.Networking.Envelopes.ResponseEnvelope.StatusCode|null);
                request_id?: (number|Long|null);
                api_url?: (string|null);
                platform_returns?: (WUProtos.Networking.Envelopes.ResponseEnvelope.IPlatformResponse[]|null);
                auth_ticket?: (WUProtos.Networking.Envelopes.IAuthTicket|null);
                returns?: (Uint8Array[]|null);
                error?: (string|null);
            }

            class ResponseEnvelope implements IResponseEnvelope {
                constructor(properties?: WUProtos.Networking.Envelopes.IResponseEnvelope);
                public status_code: WUProtos.Networking.Envelopes.ResponseEnvelope.StatusCode;
                public request_id: (number|Long);
                public api_url: string;
                public platform_returns: WUProtos.Networking.Envelopes.ResponseEnvelope.IPlatformResponse[];
                public auth_ticket?: (WUProtos.Networking.Envelopes.IAuthTicket|null);
                public returns: Uint8Array[];
                public error: string;
                public static encode(message: WUProtos.Networking.Envelopes.IResponseEnvelope, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Envelopes.ResponseEnvelope;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Envelopes.ResponseEnvelope;
                public static toObject(message: WUProtos.Networking.Envelopes.ResponseEnvelope, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ResponseEnvelope {

                interface IPlatformResponse {
                    type?: (WUProtos.Networking.Platform.PlatformRequestType|null);
                    response?: (Uint8Array|null);
                }

                class PlatformResponse implements IPlatformResponse {
                    constructor(properties?: WUProtos.Networking.Envelopes.ResponseEnvelope.IPlatformResponse);
                    public type: WUProtos.Networking.Platform.PlatformRequestType;
                    public response: Uint8Array;
                    public static encode(message: WUProtos.Networking.Envelopes.ResponseEnvelope.IPlatformResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Envelopes.ResponseEnvelope.PlatformResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Envelopes.ResponseEnvelope.PlatformResponse;
                    public static toObject(message: WUProtos.Networking.Envelopes.ResponseEnvelope.PlatformResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                enum StatusCode {
                    UNKNOWN = 0,
                    OK = 1,
                    OK_RPC_URL_IN_RESPONSE = 2,
                    BAD_REQUEST = 3,
                    INVALID_REQUEST = 51,
                    INVALID_PLATFORM_REQUEST = 52,
                    REDIRECT = 53,
                    SESSION_INVALIDATED = 100,
                    INVALID_AUTH_TOKEN = 102
                }
            }
        }

        namespace Platform {

            enum PlatformRequestType {
                UNKNOWN_PLATFORM_CLIENT_ACTION = 0,
                REGISTER_PUSH_NOTIFICATION = 5000,
                UNREGISTER_PUSH_NOTIFICATION = 5001,
                UPDATE_NOTIFICATION_STATUS = 5002,
                OPT_OUT_PUSH_NOTIFICATION_CATEGORY = 5003,
                DOWNLOAD_GAME_MASTER_TEMPLATES = 5004,
                GET_INVENTORY = 5005,
                REDEEM_PASSCODE = 5006,
                PING = 5007,
                ADD_LOGIN_ACTION = 5008,
                REMOVE_LOGIN_ACTION = 5009,
                LIST_LOGIN_ACTION = 5010,
                ADD_NEW_POI = 5011,
                PROXY_SOCIAL_ACTION = 5012,
                CLIENT_TELEMETRY = 5013,
                GET_AVAILABLE_SUBMISSIONS = 5014,
                GET_SIGNED_URL_FOR_PHOTO_UPLOAD = 5015
            }

            namespace Requests {

                interface IAddLoginActionMessage {
                    identity_provider?: (WUProtos.Enums.IdentityProvider|null);
                    inner_message?: (Uint8Array|null);
                }

                class AddLoginActionMessage implements IAddLoginActionMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IAddLoginActionMessage);
                    public identity_provider: WUProtos.Enums.IdentityProvider;
                    public inner_message: Uint8Array;
                    public static encode(message: WUProtos.Networking.Platform.Requests.IAddLoginActionMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.AddLoginActionMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.AddLoginActionMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.AddLoginActionMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAddNewPoiMessage {
                    title?: (string|null);
                    long_description?: (string|null);
                    image_gs_file_path?: (string|null);
                    lat_e6?: (number|null);
                    lng_e6?: (number|null);
                    image_serving_url?: (string|null);
                    supporting_image_gs_file_path?: (string|null);
                    supporting_image_serving_url?: (string|null);
                    supporting_statement?: (string|null);
                }

                class AddNewPoiMessage implements IAddNewPoiMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IAddNewPoiMessage);
                    public title: string;
                    public long_description: string;
                    public image_gs_file_path: string;
                    public lat_e6: number;
                    public lng_e6: number;
                    public image_serving_url: string;
                    public supporting_image_gs_file_path: string;
                    public supporting_image_serving_url: string;
                    public supporting_statement: string;
                    public static encode(message: WUProtos.Networking.Platform.Requests.IAddNewPoiMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.AddNewPoiMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.AddNewPoiMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.AddNewPoiMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientTelemetryMessage {
                }

                class ClientTelemetryMessage implements IClientTelemetryMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IClientTelemetryMessage);
                    public static encode(message: WUProtos.Networking.Platform.Requests.IClientTelemetryMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.ClientTelemetryMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.ClientTelemetryMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.ClientTelemetryMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDownloadGameMasterTemplatesMessage {
                    basis_batch_id?: (number|Long|null);
                    batch_id?: (number|Long|null);
                    page_offset?: (number|null);
                }

                class DownloadGameMasterTemplatesMessage implements IDownloadGameMasterTemplatesMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IDownloadGameMasterTemplatesMessage);
                    public basis_batch_id: (number|Long);
                    public batch_id: (number|Long);
                    public page_offset: number;
                    public static encode(message: WUProtos.Networking.Platform.Requests.IDownloadGameMasterTemplatesMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.DownloadGameMasterTemplatesMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.DownloadGameMasterTemplatesMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.DownloadGameMasterTemplatesMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetAvailableSubmissionsMessage {
                }

                class GetAvailableSubmissionsMessage implements IGetAvailableSubmissionsMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IGetAvailableSubmissionsMessage);
                    public static encode(message: WUProtos.Networking.Platform.Requests.IGetAvailableSubmissionsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.GetAvailableSubmissionsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.GetAvailableSubmissionsMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.GetAvailableSubmissionsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetInventoryMessage {
                    timestamp_millis?: (number|Long|null);
                }

                class GetInventoryMessage implements IGetInventoryMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IGetInventoryMessage);
                    public timestamp_millis: (number|Long);
                    public static encode(message: WUProtos.Networking.Platform.Requests.IGetInventoryMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.GetInventoryMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.GetInventoryMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.GetInventoryMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace Messages {

                    interface IGetSignedUrlForPhotoUploadMessage {
                        user_id?: (string|null);
                        game_unique_id?: (string|null);
                    }

                    class GetSignedUrlForPhotoUploadMessage implements IGetSignedUrlForPhotoUploadMessage {
                        constructor(properties?: WUProtos.Networking.Platform.Requests.Messages.IGetSignedUrlForPhotoUploadMessage);
                        public user_id: string;
                        public game_unique_id: string;
                        public static encode(message: WUProtos.Networking.Platform.Requests.Messages.IGetSignedUrlForPhotoUploadMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.Messages.GetSignedUrlForPhotoUploadMessage;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.Messages.GetSignedUrlForPhotoUploadMessage;
                        public static toObject(message: WUProtos.Networking.Platform.Requests.Messages.GetSignedUrlForPhotoUploadMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IListLoginActionMessage {
                }

                class ListLoginActionMessage implements IListLoginActionMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IListLoginActionMessage);
                    public static encode(message: WUProtos.Networking.Platform.Requests.IListLoginActionMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.ListLoginActionMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.ListLoginActionMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.ListLoginActionMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IOptOutPushNotificationCategoryMessage {
                }

                class OptOutPushNotificationCategoryMessage implements IOptOutPushNotificationCategoryMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IOptOutPushNotificationCategoryMessage);
                    public static encode(message: WUProtos.Networking.Platform.Requests.IOptOutPushNotificationCategoryMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.OptOutPushNotificationCategoryMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.OptOutPushNotificationCategoryMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.OptOutPushNotificationCategoryMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPingMessage {
                    response_size_bytes?: (number|null);
                    random_request_bytes?: (string|null);
                    use_cache_for_random_request_bytes?: (boolean|null);
                }

                class PingMessage implements IPingMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IPingMessage);
                    public response_size_bytes: number;
                    public random_request_bytes: string;
                    public use_cache_for_random_request_bytes: boolean;
                    public static encode(message: WUProtos.Networking.Platform.Requests.IPingMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.PingMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.PingMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.PingMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProxySocialActionMessage {
                    action?: (number|null);
                    host?: (string|null);
                    payload?: (Uint8Array|null);
                }

                class ProxySocialActionMessage implements IProxySocialActionMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IProxySocialActionMessage);
                    public action: number;
                    public host: string;
                    public payload: Uint8Array;
                    public static encode(message: WUProtos.Networking.Platform.Requests.IProxySocialActionMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.ProxySocialActionMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.ProxySocialActionMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.ProxySocialActionMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IRedeemPasscodeMessage {
                    passcode?: (string|null);
                }

                class RedeemPasscodeMessage implements IRedeemPasscodeMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IRedeemPasscodeMessage);
                    public passcode: string;
                    public static encode(message: WUProtos.Networking.Platform.Requests.IRedeemPasscodeMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.RedeemPasscodeMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.RedeemPasscodeMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.RedeemPasscodeMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IRegisterPushNotificationMessage {
                    apn_token?: (WUProtos.Data.Token.IApnToken|null);
                    gcm_token?: (WUProtos.Data.Token.IGcmToken|null);
                }

                class RegisterPushNotificationMessage implements IRegisterPushNotificationMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IRegisterPushNotificationMessage);
                    public apn_token?: (WUProtos.Data.Token.IApnToken|null);
                    public gcm_token?: (WUProtos.Data.Token.IGcmToken|null);
                    public static encode(message: WUProtos.Networking.Platform.Requests.IRegisterPushNotificationMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.RegisterPushNotificationMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.RegisterPushNotificationMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.RegisterPushNotificationMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IRemoveLoginActionMessage {
                    identity_provider?: (WUProtos.Enums.IdentityProvider|null);
                }

                class RemoveLoginActionMessage implements IRemoveLoginActionMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IRemoveLoginActionMessage);
                    public identity_provider: WUProtos.Enums.IdentityProvider;
                    public static encode(message: WUProtos.Networking.Platform.Requests.IRemoveLoginActionMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.RemoveLoginActionMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.RemoveLoginActionMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.RemoveLoginActionMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IUpdateNotificationStatusMessage {
                    notification_ids?: (string[]|null);
                    create_timestamp_ms?: ((number|Long)[]|null);
                    state?: (WUProtos.Enums.NotificationState|null);
                }

                class UpdateNotificationStatusMessage implements IUpdateNotificationStatusMessage {
                    constructor(properties?: WUProtos.Networking.Platform.Requests.IUpdateNotificationStatusMessage);
                    public notification_ids: string[];
                    public create_timestamp_ms: (number|Long)[];
                    public state: WUProtos.Enums.NotificationState;
                    public static encode(message: WUProtos.Networking.Platform.Requests.IUpdateNotificationStatusMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Requests.UpdateNotificationStatusMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Requests.UpdateNotificationStatusMessage;
                    public static toObject(message: WUProtos.Networking.Platform.Requests.UpdateNotificationStatusMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            namespace Responses {

                interface IAddLoginActionResponse {
                    success?: (boolean|null);
                    login_detail?: (WUProtos.Data.ILoginDetail[]|null);
                    status?: (WUProtos.Networking.Platform.Responses.AddLoginActionResponse.Status|null);
                }

                class AddLoginActionResponse implements IAddLoginActionResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IAddLoginActionResponse);
                    public success: boolean;
                    public login_detail: WUProtos.Data.ILoginDetail[];
                    public status: WUProtos.Networking.Platform.Responses.AddLoginActionResponse.Status;
                    public static encode(message: WUProtos.Networking.Platform.Responses.IAddLoginActionResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.AddLoginActionResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.AddLoginActionResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.AddLoginActionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace AddLoginActionResponse {

                    enum Status {
                        UNSET = 0,
                        AUTH_FAILURE = 1,
                        LOGIN_TAKEN = 2
                    }
                }

                interface IAddNewPoiResponse {
                    status?: (WUProtos.Networking.Platform.Responses.AddNewPoiResponse.Status|null);
                    message?: (string[]|null);
                }

                class AddNewPoiResponse implements IAddNewPoiResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IAddNewPoiResponse);
                    public status: WUProtos.Networking.Platform.Responses.AddNewPoiResponse.Status;
                    public message: string[];
                    public static encode(message: WUProtos.Networking.Platform.Responses.IAddNewPoiResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.AddNewPoiResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.AddNewPoiResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.AddNewPoiResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace AddNewPoiResponse {

                    enum Status {
                        UNSET = 0,
                        SUCCESS = 1,
                        FAILURE = 2,
                        INTERNAL_ERROR = 3,
                        TOO_MANY_RECENT_SUBMISSIONS = 4,
                        INVALID_INPUT = 5,
                        MINOR = 6
                    }
                }

                interface IClientTelemetryResponse {
                    status?: (WUProtos.Networking.Platform.Responses.ClientTelemetryResponse.Status|null);
                    rows_written?: (number|null);
                }

                class ClientTelemetryResponse implements IClientTelemetryResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IClientTelemetryResponse);
                    public status: WUProtos.Networking.Platform.Responses.ClientTelemetryResponse.Status;
                    public rows_written: number;
                    public static encode(message: WUProtos.Networking.Platform.Responses.IClientTelemetryResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.ClientTelemetryResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.ClientTelemetryResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.ClientTelemetryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientTelemetryResponse {

                    enum Status {
                        UNSET = 0,
                        SUCCESS = 1,
                        FAILURE = 2,
                        ERROR_INVALID_REQUEST = 3,
                        ERROR_INVALID_PROTO = 4,
                        ERROR_UNSET_TELEMETRY_ID = 5
                    }
                }

                interface IDownloadGameMasterTemplatesResponse {
                    result?: (WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse.Result|null);
                    template?: (WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse.IClientGameMasterTemplate[]|null);
                    deleted_template?: (string[]|null);
                    batch_id?: (number|Long|null);
                    page_offset?: (number|null);
                }

                class DownloadGameMasterTemplatesResponse implements IDownloadGameMasterTemplatesResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IDownloadGameMasterTemplatesResponse);
                    public result: WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse.Result;
                    public template: WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse.IClientGameMasterTemplate[];
                    public deleted_template: string[];
                    public batch_id: (number|Long);
                    public page_offset: number;
                    public static encode(message: WUProtos.Networking.Platform.Responses.IDownloadGameMasterTemplatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace DownloadGameMasterTemplatesResponse {

                    enum Result {
                        UNSET = 0,
                        COMPLETE = 1,
                        MORE_RESULTS = 2,
                        BATCH_ID_NOT_LIVE = 3,
                        INVALID_BASIS_BATCH_ID = 4
                    }

                    interface IClientGameMasterTemplate {
                        template_id?: (string|null);
                        data?: (Uint8Array|null);
                    }

                    class ClientGameMasterTemplate implements IClientGameMasterTemplate {
                        constructor(properties?: WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse.IClientGameMasterTemplate);
                        public template_id: string;
                        public data: Uint8Array;
                        public static encode(message: WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse.IClientGameMasterTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse.ClientGameMasterTemplate;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse.ClientGameMasterTemplate;
                        public static toObject(message: WUProtos.Networking.Platform.Responses.DownloadGameMasterTemplatesResponse.ClientGameMasterTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IGetAvailableSubmissionsResponse {
                    submissions_left?: (number|null);
                    min_player_level?: (number|null);
                }

                class GetAvailableSubmissionsResponse implements IGetAvailableSubmissionsResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IGetAvailableSubmissionsResponse);
                    public submissions_left: number;
                    public min_player_level: number;
                    public static encode(message: WUProtos.Networking.Platform.Responses.IGetAvailableSubmissionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.GetAvailableSubmissionsResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.GetAvailableSubmissionsResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.GetAvailableSubmissionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IInventoryDelta {
                    original_timestamp?: (number|Long|null);
                    new_timestamp?: (number|Long|null);
                    inventory_item?: (WUProtos.Inventory.IInventoryItem[]|null);
                }

                class InventoryDelta implements IInventoryDelta {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IInventoryDelta);
                    public original_timestamp: (number|Long);
                    public new_timestamp: (number|Long);
                    public inventory_item: WUProtos.Inventory.IInventoryItem[];
                    public static encode(message: WUProtos.Networking.Platform.Responses.IInventoryDelta, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.InventoryDelta;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.InventoryDelta;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.InventoryDelta, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetSignedUrlForPhotoUploadResponse {
                    status?: (WUProtos.Networking.Platform.Responses.GetSignedUrlForPhotoUploadResponse.Status|null);
                    signed_url?: (string|null);
                    supporting_image_signed_url?: (string|null);
                }

                class GetSignedUrlForPhotoUploadResponse implements IGetSignedUrlForPhotoUploadResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IGetSignedUrlForPhotoUploadResponse);
                    public status: WUProtos.Networking.Platform.Responses.GetSignedUrlForPhotoUploadResponse.Status;
                    public signed_url: string;
                    public supporting_image_signed_url: string;
                    public static encode(message: WUProtos.Networking.Platform.Responses.IGetSignedUrlForPhotoUploadResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.GetSignedUrlForPhotoUploadResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.GetSignedUrlForPhotoUploadResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.GetSignedUrlForPhotoUploadResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace GetSignedUrlForPhotoUploadResponse {

                    enum Status {
                        UNSET = 0,
                        FAILURES = 1,
                        SUCCESS = 2
                    }
                }

                interface IListLoginActionResponse {
                    success?: (boolean|null);
                    login_detail?: (WUProtos.Data.ILoginDetail[]|null);
                }

                class ListLoginActionResponse implements IListLoginActionResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IListLoginActionResponse);
                    public success: boolean;
                    public login_detail: WUProtos.Data.ILoginDetail[];
                    public static encode(message: WUProtos.Networking.Platform.Responses.IListLoginActionResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.ListLoginActionResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.ListLoginActionResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.ListLoginActionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IOptOutPushNotificationCategoryResponse {
                    categories?: (string[]|null);
                }

                class OptOutPushNotificationCategoryResponse implements IOptOutPushNotificationCategoryResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IOptOutPushNotificationCategoryResponse);
                    public categories: string[];
                    public static encode(message: WUProtos.Networking.Platform.Responses.IOptOutPushNotificationCategoryResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.OptOutPushNotificationCategoryResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.OptOutPushNotificationCategoryResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.OptOutPushNotificationCategoryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPingResponse {
                    user_info?: (string|null);
                    server_info?: (string|null);
                    random_response_bytes?: (string|null);
                }

                class PingResponse implements IPingResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IPingResponse);
                    public user_info: string;
                    public server_info: string;
                    public random_response_bytes: string;
                    public static encode(message: WUProtos.Networking.Platform.Responses.IPingResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.PingResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.PingResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.PingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProxySocialActionResponse {
                    status?: (WUProtos.Networking.Platform.Responses.ProxySocialActionResponse.Status|null);
                    assigned_host?: (string|null);
                    payload?: (Uint8Array|null);
                }

                class ProxySocialActionResponse implements IProxySocialActionResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IProxySocialActionResponse);
                    public status: WUProtos.Networking.Platform.Responses.ProxySocialActionResponse.Status;
                    public assigned_host: string;
                    public payload: Uint8Array;
                    public static encode(message: WUProtos.Networking.Platform.Responses.IProxySocialActionResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.ProxySocialActionResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.ProxySocialActionResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.ProxySocialActionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ProxySocialActionResponse {

                    enum Status {
                        UNSET = 0,
                        COMPLETED = 1,
                        COMPLETED_AND_REASSIGNED = 2,
                        ACTION_NOT_FOUND = 3,
                        ASSIGNMENT_ERROR = 4,
                        PROXY_UNAUTHORIZED_ERROR = 5,
                        INTERNAL_ERROR = 6,
                        BAD_REQUEST = 7,
                        ACCESS_DENIED = 8,
                        TIMEOUT_ERROR = 9
                    }
                }

                interface IRedeemPasscodeResponse {
                    result?: (WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse.Result|null);
                    acquired_item?: (WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse.IAcquiredItem[]|null);
                    acquired_items_proto?: (Uint8Array|null);
                    passcode?: (string|null);
                }

                class RedeemPasscodeResponse implements IRedeemPasscodeResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IRedeemPasscodeResponse);
                    public result: WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse.Result;
                    public acquired_item: WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse.IAcquiredItem[];
                    public acquired_items_proto: Uint8Array;
                    public passcode: string;
                    public static encode(message: WUProtos.Networking.Platform.Responses.IRedeemPasscodeResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace RedeemPasscodeResponse {

                    enum Result {
                        UNSET = 0,
                        SUCCESS = 1,
                        NOT_AVAILABLE = 2,
                        OVER_INVENTORY_LIMIT = 3,
                        ALREADY_REDEEMED = 4
                    }

                    interface IAcquiredItem {
                        item?: (string|null);
                        count?: (number|Long|null);
                    }

                    class AcquiredItem implements IAcquiredItem {
                        constructor(properties?: WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse.IAcquiredItem);
                        public item: string;
                        public count: (number|Long);
                        public static encode(message: WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse.IAcquiredItem, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse.AcquiredItem;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse.AcquiredItem;
                        public static toObject(message: WUProtos.Networking.Platform.Responses.RedeemPasscodeResponse.AcquiredItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IRegisterPushNotificationResponse {
                    result?: (WUProtos.Networking.Platform.Responses.RegisterPushNotificationResponse.Result|null);
                }

                class RegisterPushNotificationResponse implements IRegisterPushNotificationResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IRegisterPushNotificationResponse);
                    public result: WUProtos.Networking.Platform.Responses.RegisterPushNotificationResponse.Result;
                    public static encode(message: WUProtos.Networking.Platform.Responses.IRegisterPushNotificationResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.RegisterPushNotificationResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.RegisterPushNotificationResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.RegisterPushNotificationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace RegisterPushNotificationResponse {

                    enum Result {
                        UNSET = 0,
                        SUCCESS = 1,
                        NO_CHANGE = 2
                    }
                }

                interface IRemoveLoginActionResponse {
                    success?: (boolean|null);
                    login_detail?: (WUProtos.Data.ILoginDetail[]|null);
                }

                class RemoveLoginActionResponse implements IRemoveLoginActionResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IRemoveLoginActionResponse);
                    public success: boolean;
                    public login_detail: WUProtos.Data.ILoginDetail[];
                    public static encode(message: WUProtos.Networking.Platform.Responses.IRemoveLoginActionResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.RemoveLoginActionResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.RemoveLoginActionResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.RemoveLoginActionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IUpdateNotificationStatusResponse {
                    notification_ids?: (string[]|null);
                    create_timestamp_ms?: ((number|Long)[]|null);
                    state?: (WUProtos.Enums.NotificationState|null);
                }

                class UpdateNotificationStatusResponse implements IUpdateNotificationStatusResponse {
                    constructor(properties?: WUProtos.Networking.Platform.Responses.IUpdateNotificationStatusResponse);
                    public notification_ids: string[];
                    public create_timestamp_ms: (number|Long)[];
                    public state: WUProtos.Enums.NotificationState;
                    public static encode(message: WUProtos.Networking.Platform.Responses.IUpdateNotificationStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Platform.Responses.UpdateNotificationStatusResponse;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Platform.Responses.UpdateNotificationStatusResponse;
                    public static toObject(message: WUProtos.Networking.Platform.Responses.UpdateNotificationStatusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }
        }

        namespace Requests {

            namespace Messages {

                interface IAcceptTermsOfServiceMessage {
                }

                class AcceptTermsOfServiceMessage implements IAcceptTermsOfServiceMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAcceptTermsOfServiceMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAcceptTermsOfServiceMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AcceptTermsOfServiceMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AcceptTermsOfServiceMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AcceptTermsOfServiceMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAcknowledgePunishmentMessage {
                    punishment?: (WUProtos.Networking.Requests.Messages.AcknowledgePunishmentMessage.Punishment|null);
                }

                class AcknowledgePunishmentMessage implements IAcknowledgePunishmentMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAcknowledgePunishmentMessage);
                    public punishment: WUProtos.Networking.Requests.Messages.AcknowledgePunishmentMessage.Punishment;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAcknowledgePunishmentMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AcknowledgePunishmentMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AcknowledgePunishmentMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AcknowledgePunishmentMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace AcknowledgePunishmentMessage {

                    enum Punishment {
                        UNKNOWN = 0,
                        WARN = 1,
                        SUSPEND = 2
                    }
                }

                interface IAddDarkDetectorMessage {
                    dark_detector_id?: (string|null);
                    target_outpost_id?: (string|null);
                    slot_index?: (number|null);
                }

                class AddDarkDetectorMessage implements IAddDarkDetectorMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAddDarkDetectorMessage);
                    public dark_detector_id: string;
                    public target_outpost_id: string;
                    public slot_index: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAddDarkDetectorMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AddDarkDetectorMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AddDarkDetectorMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AddDarkDetectorMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAddLoginMessage {
                    identity_provider?: (WUProtos.Enums.IdentityProvider|null);
                    inner_message?: (Uint8Array|null);
                }

                class AddLoginMessage implements IAddLoginMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAddLoginMessage);
                    public identity_provider: WUProtos.Enums.IdentityProvider;
                    public inner_message: Uint8Array;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAddLoginMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AddLoginMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AddLoginMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AddLoginMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAddTimeToCauldronMessage {
                    cauldron_id?: (number|Long|null);
                    time_item_gmt_id?: (string|null);
                }

                class AddTimeToCauldronMessage implements IAddTimeToCauldronMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAddTimeToCauldronMessage);
                    public cauldron_id: (number|Long);
                    public time_item_gmt_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAddTimeToCauldronMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AddTimeToCauldronMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AddTimeToCauldronMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AddTimeToCauldronMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAdminAdjustBalanceMessage {
                    player_id?: (string|null);
                    adjustment?: (number|null);
                    currency_type?: (string|null);
                    reason?: (string|null);
                }

                class AdminAdjustBalanceMessage implements IAdminAdjustBalanceMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAdminAdjustBalanceMessage);
                    public player_id: string;
                    public adjustment: number;
                    public currency_type: string;
                    public reason: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAdminAdjustBalanceMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AdminAdjustBalanceMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AdminAdjustBalanceMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AdminAdjustBalanceMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAdminCreateSkuMessage {
                    sku_data?: (WUProtos.Data.ISkuData|null);
                }

                class AdminCreateSkuMessage implements IAdminCreateSkuMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAdminCreateSkuMessage);
                    public sku_data?: (WUProtos.Data.ISkuData|null);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAdminCreateSkuMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AdminCreateSkuMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AdminCreateSkuMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AdminCreateSkuMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAdminDeleteInAppPurchaseItemMessage {
                    player_id?: (string|null);
                    item_id?: (string|null);
                    reason?: (string|null);
                    quantity?: (number|null);
                }

                class AdminDeleteInAppPurchaseItemMessage implements IAdminDeleteInAppPurchaseItemMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAdminDeleteInAppPurchaseItemMessage);
                    public player_id: string;
                    public item_id: string;
                    public reason: string;
                    public quantity: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAdminDeleteInAppPurchaseItemMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AdminDeleteInAppPurchaseItemMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AdminDeleteInAppPurchaseItemMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AdminDeleteInAppPurchaseItemMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAdminGetInAppPurchaseLogsMessage {
                    player_id?: (string|null);
                    min_timestamp_ms?: (number|Long|null);
                    max_timestamp_ms?: (number|Long|null);
                }

                class AdminGetInAppPurchaseLogsMessage implements IAdminGetInAppPurchaseLogsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAdminGetInAppPurchaseLogsMessage);
                    public player_id: string;
                    public min_timestamp_ms: (number|Long);
                    public max_timestamp_ms: (number|Long);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAdminGetInAppPurchaseLogsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AdminGetInAppPurchaseLogsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AdminGetInAppPurchaseLogsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AdminGetInAppPurchaseLogsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAdminGrantInAppPurchaseItemMessage {
                    player_id?: (string|null);
                    sku_id?: (string|null);
                    reason?: (string|null);
                    quantity?: (number|null);
                }

                class AdminGrantInAppPurchaseItemMessage implements IAdminGrantInAppPurchaseItemMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAdminGrantInAppPurchaseItemMessage);
                    public player_id: string;
                    public sku_id: string;
                    public reason: string;
                    public quantity: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAdminGrantInAppPurchaseItemMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AdminGrantInAppPurchaseItemMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AdminGrantInAppPurchaseItemMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AdminGrantInAppPurchaseItemMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAdminReadSkusMessage {
                }

                class AdminReadSkusMessage implements IAdminReadSkusMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAdminReadSkusMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAdminReadSkusMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AdminReadSkusMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AdminReadSkusMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AdminReadSkusMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IAdminUpdateSkuMessage {
                    sku_data?: (WUProtos.Data.ISkuData|null);
                }

                class AdminUpdateSkuMessage implements IAdminUpdateSkuMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IAdminUpdateSkuMessage);
                    public sku_data?: (WUProtos.Data.ISkuData|null);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IAdminUpdateSkuMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.AdminUpdateSkuMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.AdminUpdateSkuMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.AdminUpdateSkuMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IApplyKeyToWalkboxMessage {
                    walkbox_id?: (number|Long|null);
                    key_type?: (WUProtos.Networking.Requests.Messages.ApplyKeyToWalkboxMessage.WalkboxKeyType|null);
                }

                class ApplyKeyToWalkboxMessage implements IApplyKeyToWalkboxMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IApplyKeyToWalkboxMessage);
                    public walkbox_id: (number|Long);
                    public key_type: WUProtos.Networking.Requests.Messages.ApplyKeyToWalkboxMessage.WalkboxKeyType;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IApplyKeyToWalkboxMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ApplyKeyToWalkboxMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ApplyKeyToWalkboxMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ApplyKeyToWalkboxMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ApplyKeyToWalkboxMessage {

                    enum WalkboxKeyType {
                        UNKNOWN = 0,
                        INFINITE = 1,
                        PREMIUM = 2
                    }
                }

                interface IApplyMasterNoteMessage {
                    cauldron_id?: (number|Long|null);
                    gesture?: (WUProtos.Enums.MasterNoteGesture[]|null);
                }

                class ApplyMasterNoteMessage implements IApplyMasterNoteMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IApplyMasterNoteMessage);
                    public cauldron_id: (number|Long);
                    public gesture: WUProtos.Enums.MasterNoteGesture[];
                    public static encode(message: WUProtos.Networking.Requests.Messages.IApplyMasterNoteMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ApplyMasterNoteMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ApplyMasterNoteMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ApplyMasterNoteMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IBuyPotionIngredientsMessage {
                    pack_id?: (string|null);
                }

                class BuyPotionIngredientsMessage implements IBuyPotionIngredientsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IBuyPotionIngredientsMessage);
                    public pack_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IBuyPotionIngredientsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.BuyPotionIngredientsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.BuyPotionIngredientsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.BuyPotionIngredientsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICastSpellForGrowingMessage {
                    outpost_id?: (string|null);
                    pot_id?: (string|null);
                    spell_energy?: (number|null);
                }

                class CastSpellForGrowingMessage implements ICastSpellForGrowingMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.ICastSpellForGrowingMessage);
                    public outpost_id: string;
                    public pot_id: string;
                    public spell_energy: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.ICastSpellForGrowingMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.CastSpellForGrowingMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.CastSpellForGrowingMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.CastSpellForGrowingMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICheckWalkboxesMessage {
                }

                class CheckWalkboxesMessage implements ICheckWalkboxesMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.ICheckWalkboxesMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.ICheckWalkboxesMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.CheckWalkboxesMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.CheckWalkboxesMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.CheckWalkboxesMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClaimChamberRewardsMessage {
                }

                class ClaimChamberRewardsMessage implements IClaimChamberRewardsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IClaimChamberRewardsMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IClaimChamberRewardsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ClaimChamberRewardsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ClaimChamberRewardsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ClaimChamberRewardsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClaimDailyRewardMessage {
                }

                class ClaimDailyRewardMessage implements IClaimDailyRewardMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IClaimDailyRewardMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IClaimDailyRewardMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ClaimDailyRewardMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ClaimDailyRewardMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ClaimDailyRewardMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClaimPlayerNicknameMessage {
                    desired_nickname?: (string|null);
                }

                class ClaimPlayerNicknameMessage implements IClaimPlayerNicknameMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IClaimPlayerNicknameMessage);
                    public desired_nickname: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IClaimPlayerNicknameMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ClaimPlayerNicknameMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ClaimPlayerNicknameMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ClaimPlayerNicknameMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClaimPotionMessage {
                    cauldron_id?: (number|Long|null);
                    cauldron_slot?: (number|null);
                    requested_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                }

                class ClaimPotionMessage implements IClaimPotionMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IClaimPotionMessage);
                    public cauldron_id: (number|Long);
                    public cauldron_slot: number;
                    public requested_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IClaimPotionMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ClaimPotionMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ClaimPotionMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ClaimPotionMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientConfigurationMessage {
                    target_env_id?: (string|null);
                    client_version?: (string|null);
                    client_os?: (WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.ClientOs|null);
                    os_version?: (string|null);
                    device_model?: (string|null);
                    ios_device_info?: (WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.IiOSDeviceInfo|null);
                    android_device_info?: (WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.IAndroidDeviceInfo|null);
                    build_number?: (string|null);
                }

                class ClientConfigurationMessage implements IClientConfigurationMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IClientConfigurationMessage);
                    public target_env_id: string;
                    public client_version: string;
                    public client_os: WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.ClientOs;
                    public os_version: string;
                    public device_model: string;
                    public ios_device_info?: (WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.IiOSDeviceInfo|null);
                    public android_device_info?: (WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.IAndroidDeviceInfo|null);
                    public build_number: string;
                    public DeviceInfo?: ("ios_device_info"|"android_device_info");
                    public static encode(message: WUProtos.Networking.Requests.Messages.IClientConfigurationMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ClientConfigurationMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ClientConfigurationMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ClientConfigurationMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientConfigurationMessage {

                    interface IAndroidDeviceInfo {
                        gpu_category?: (string|null);
                        gpu_model?: (string|null);
                    }

                    class AndroidDeviceInfo implements IAndroidDeviceInfo {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.IAndroidDeviceInfo);
                        public gpu_category: string;
                        public gpu_model: string;
                        public static encode(message: WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.IAndroidDeviceInfo, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.AndroidDeviceInfo;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.AndroidDeviceInfo;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.AndroidDeviceInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IiOSDeviceInfo {
                    }

                    class iOSDeviceInfo implements IiOSDeviceInfo {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.IiOSDeviceInfo);
                        public static encode(message: WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.IiOSDeviceInfo, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.iOSDeviceInfo;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.iOSDeviceInfo;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.ClientConfigurationMessage.iOSDeviceInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    enum ClientOs {
                        UNKNOWN_OS = 0,
                        IOS = 1,
                        ANDROID = 2,
                        DESKTOP = 3
                    }
                }

                interface IClientTelemetryMessage {
                }

                class ClientTelemetryMessage implements IClientTelemetryMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IClientTelemetryMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IClientTelemetryMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ClientTelemetryMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ClientTelemetryMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ClientTelemetryMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICollectIngredientMessage {
                    ticket?: (Uint8Array|null);
                }

                class CollectIngredientMessage implements ICollectIngredientMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.ICollectIngredientMessage);
                    public ticket: Uint8Array;
                    public static encode(message: WUProtos.Networking.Requests.Messages.ICollectIngredientMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.CollectIngredientMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.CollectIngredientMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.CollectIngredientMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IContainerConsumptionMessage {
                    vault_item_id?: (string|null);
                }

                class ContainerConsumptionMessage implements IContainerConsumptionMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IContainerConsumptionMessage);
                    public vault_item_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IContainerConsumptionMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ContainerConsumptionMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ContainerConsumptionMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ContainerConsumptionMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IContributeFlooPowderToFortressMessage {
                    fortress_id?: (string|null);
                    fortress_lat?: (number|null);
                    fortress_lng?: (number|null);
                    floo_powder?: (number|Long|null);
                }

                class ContributeFlooPowderToFortressMessage implements IContributeFlooPowderToFortressMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IContributeFlooPowderToFortressMessage);
                    public fortress_id: string;
                    public fortress_lat: number;
                    public fortress_lng: number;
                    public floo_powder: (number|Long);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IContributeFlooPowderToFortressMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ContributeFlooPowderToFortressMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ContributeFlooPowderToFortressMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ContributeFlooPowderToFortressMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICraftPotionMessage {
                    recipe_gmt_id?: (string|null);
                    cauldron_id?: (number|Long|null);
                    ingredients_to_purchase?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                }

                class CraftPotionMessage implements ICraftPotionMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.ICraftPotionMessage);
                    public recipe_gmt_id: string;
                    public cauldron_id: (number|Long);
                    public ingredients_to_purchase?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public static encode(message: WUProtos.Networking.Requests.Messages.ICraftPotionMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.CraftPotionMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.CraftPotionMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.CraftPotionMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ICreateOrUpdatePlayerMessage {
                    locale?: (WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.IClientPlayerLocale|null);
                    device_info?: (WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.IClientDeviceInfo|null);
                }

                class CreateOrUpdatePlayerMessage implements ICreateOrUpdatePlayerMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.ICreateOrUpdatePlayerMessage);
                    public locale?: (WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.IClientPlayerLocale|null);
                    public device_info?: (WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.IClientDeviceInfo|null);
                    public static encode(message: WUProtos.Networking.Requests.Messages.ICreateOrUpdatePlayerMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace CreateOrUpdatePlayerMessage {

                    interface IClientPlayerLocale {
                        country?: (string|null);
                        language?: (string|null);
                        timezone?: (string|null);
                    }

                    class ClientPlayerLocale implements IClientPlayerLocale {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.IClientPlayerLocale);
                        public country: string;
                        public language: string;
                        public timezone: string;
                        public static encode(message: WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.IClientPlayerLocale, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.ClientPlayerLocale;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.ClientPlayerLocale;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.ClientPlayerLocale, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IClientDeviceInfo {
                        device_os?: (WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.DeviceOS|null);
                        device_type?: (string|null);
                        os_version?: (string|null);
                        client_version?: (string|null);
                    }

                    class ClientDeviceInfo implements IClientDeviceInfo {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.IClientDeviceInfo);
                        public device_os: WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.DeviceOS;
                        public device_type: string;
                        public os_version: string;
                        public client_version: string;
                        public static encode(message: WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.IClientDeviceInfo, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.ClientDeviceInfo;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.ClientDeviceInfo;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.CreateOrUpdatePlayerMessage.ClientDeviceInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    enum DeviceOS {
                        UNSET = 0,
                        IOS = 1,
                        ANDROID = 2,
                        OSX = 3,
                        WINDOWS = 4
                    }
                }

                interface IDbgChallengeWinMessage {
                }

                class DbgChallengeWinMessage implements IDbgChallengeWinMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgChallengeWinMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgChallengeWinMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgChallengeWinMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgChallengeWinMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgChallengeWinMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgGetChamberInfoMessage {
                }

                class DbgGetChamberInfoMessage implements IDbgGetChamberInfoMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgGetChamberInfoMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgGetChamberInfoMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgGetChamberInfoMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgGetChamberInfoMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgGetChamberInfoMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgGetLootRollInfoMessage {
                    loot_table_id?: (string|null);
                    num_rolls?: (number|null);
                }

                class DbgGetLootRollInfoMessage implements IDbgGetLootRollInfoMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgGetLootRollInfoMessage);
                    public loot_table_id: string;
                    public num_rolls: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgGetLootRollInfoMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgGetLootRollInfoMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgGetLootRollInfoMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgGetLootRollInfoMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgGetSpellcastInfoMessage {
                    encounter_id?: (Uint8Array|null);
                    energy_gmt_id?: (string[]|null);
                    accuracy_bonus?: (number|null);
                }

                class DbgGetSpellcastInfoMessage implements IDbgGetSpellcastInfoMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgGetSpellcastInfoMessage);
                    public encounter_id: Uint8Array;
                    public energy_gmt_id: string[];
                    public accuracy_bonus: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgGetSpellcastInfoMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgGetSpellcastInfoMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgGetSpellcastInfoMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgGetSpellcastInfoMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgGrantLootCollectionMessage {
                    loot_collection?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    request_type?: (WUProtos.Networking.Requests.Messages.DbgGrantLootCollectionMessage.RequestType|null);
                }

                class DbgGrantLootCollectionMessage implements IDbgGrantLootCollectionMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgGrantLootCollectionMessage);
                    public loot_collection?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public request_type: WUProtos.Networking.Requests.Messages.DbgGrantLootCollectionMessage.RequestType;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgGrantLootCollectionMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgGrantLootCollectionMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgGrantLootCollectionMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgGrantLootCollectionMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace DbgGrantLootCollectionMessage {

                    enum RequestType {
                        ADD = 0,
                        REMOVE = 1
                    }
                }

                interface IDbgModifyCollectionItemsMessage {
                    collection_items?: (WUProtos.Networking.Requests.Messages.DbgModifyCollectionItemsMessage.IDebugModifyCollectionItem[]|null);
                }

                class DbgModifyCollectionItemsMessage implements IDbgModifyCollectionItemsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgModifyCollectionItemsMessage);
                    public collection_items: WUProtos.Networking.Requests.Messages.DbgModifyCollectionItemsMessage.IDebugModifyCollectionItem[];
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgModifyCollectionItemsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgModifyCollectionItemsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgModifyCollectionItemsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgModifyCollectionItemsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace DbgModifyCollectionItemsMessage {

                    interface IDebugModifyCollectionItem {
                        id?: (string|null);
                        increment_times_encountered_by?: (number|null);
                        increment_times_returned_by?: (number|null);
                    }

                    class DebugModifyCollectionItem implements IDebugModifyCollectionItem {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.DbgModifyCollectionItemsMessage.IDebugModifyCollectionItem);
                        public id: string;
                        public increment_times_encountered_by: number;
                        public increment_times_returned_by: number;
                        public static encode(message: WUProtos.Networking.Requests.Messages.DbgModifyCollectionItemsMessage.IDebugModifyCollectionItem, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgModifyCollectionItemsMessage.DebugModifyCollectionItem;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgModifyCollectionItemsMessage.DebugModifyCollectionItem;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.DbgModifyCollectionItemsMessage.DebugModifyCollectionItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IDbgPlayerSelectTeamMessage {
                    team_id?: (string|null);
                }

                class DbgPlayerSelectTeamMessage implements IDbgPlayerSelectTeamMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgPlayerSelectTeamMessage);
                    public team_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgPlayerSelectTeamMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgPlayerSelectTeamMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgPlayerSelectTeamMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgPlayerSelectTeamMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgResetPlayerMessage {
                }

                class DbgResetPlayerMessage implements IDbgResetPlayerMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgResetPlayerMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgResetPlayerMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgResetPlayerMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgResetPlayerMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgResetPlayerMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgResetProfessionMessage {
                }

                class DbgResetProfessionMessage implements IDbgResetProfessionMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgResetProfessionMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgResetProfessionMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgResetProfessionMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgResetProfessionMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgResetProfessionMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgResetStorePackPurchasedMessage {
                    store_pack?: (WUProtos.Networking.Requests.Messages.DbgResetStorePackPurchasedMessage.IStorePackPurchased[]|null);
                }

                class DbgResetStorePackPurchasedMessage implements IDbgResetStorePackPurchasedMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgResetStorePackPurchasedMessage);
                    public store_pack: WUProtos.Networking.Requests.Messages.DbgResetStorePackPurchasedMessage.IStorePackPurchased[];
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgResetStorePackPurchasedMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgResetStorePackPurchasedMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgResetStorePackPurchasedMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgResetStorePackPurchasedMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace DbgResetStorePackPurchasedMessage {

                    interface IStorePackPurchased {
                        store_pack_id?: (string|null);
                        new_count?: (number|Long|null);
                    }

                    class StorePackPurchased implements IStorePackPurchased {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.DbgResetStorePackPurchasedMessage.IStorePackPurchased);
                        public store_pack_id: string;
                        public new_count: (number|Long);
                        public static encode(message: WUProtos.Networking.Requests.Messages.DbgResetStorePackPurchasedMessage.IStorePackPurchased, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgResetStorePackPurchasedMessage.StorePackPurchased;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgResetStorePackPurchasedMessage.StorePackPurchased;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.DbgResetStorePackPurchasedMessage.StorePackPurchased, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IDbgReturnCollectionItemMessage {
                    collection_item_id?: (string|null);
                }

                class DbgReturnCollectionItemMessage implements IDbgReturnCollectionItemMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgReturnCollectionItemMessage);
                    public collection_item_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgReturnCollectionItemMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgReturnCollectionItemMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgReturnCollectionItemMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgReturnCollectionItemMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgSetPlayerFlagMessage {
                    feature_flag_id?: (string|null);
                    bval?: (boolean|null);
                    lval?: (number|Long|null);
                    sval?: (string|null);
                    fval?: (number|null);
                }

                class DbgSetPlayerFlagMessage implements IDbgSetPlayerFlagMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgSetPlayerFlagMessage);
                    public feature_flag_id: string;
                    public bval: boolean;
                    public lval: (number|Long);
                    public sval: string;
                    public fval: number;
                    public Value?: ("bval"|"lval"|"sval"|"fval");
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgSetPlayerFlagMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgSetPlayerFlagMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgSetPlayerFlagMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgSetPlayerFlagMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgSetTeamFlooPointsMessage {
                    fortress_id?: (string|null);
                    latitude?: (number|null);
                    longitude?: (number|null);
                    team_id?: (string|null);
                    floo_points?: (number|Long|null);
                }

                class DbgSetTeamFlooPointsMessage implements IDbgSetTeamFlooPointsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgSetTeamFlooPointsMessage);
                    public fortress_id: string;
                    public latitude: number;
                    public longitude: number;
                    public team_id: string;
                    public floo_points: (number|Long);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgSetTeamFlooPointsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgSetTeamFlooPointsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgSetTeamFlooPointsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgSetTeamFlooPointsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgSimulateWalkingMessage {
                    distance_simulated_km?: (number|null);
                }

                class DbgSimulateWalkingMessage implements IDbgSimulateWalkingMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgSimulateWalkingMessage);
                    public distance_simulated_km: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgSimulateWalkingMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgSimulateWalkingMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgSimulateWalkingMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgSimulateWalkingMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgStartEncounterMessage {
                    encounter_gmt_id?: (string|null);
                    starting_stage_index?: (number|null);
                    level?: (number|null);
                }

                class DbgStartEncounterMessage implements IDbgStartEncounterMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgStartEncounterMessage);
                    public encounter_gmt_id: string;
                    public starting_stage_index: number;
                    public level: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgStartEncounterMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgStartEncounterMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgStartEncounterMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgStartEncounterMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgUpdateInventoryMessage {
                    insert_or_replace_items?: (WUProtos.Inventory.IAtlasInventoryItem[]|null);
                    delete_items?: (WUProtos.Inventory.IAtlasInventoryKey[]|null);
                }

                class DbgUpdateInventoryMessage implements IDbgUpdateInventoryMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgUpdateInventoryMessage);
                    public insert_or_replace_items: WUProtos.Inventory.IAtlasInventoryItem[];
                    public delete_items: WUProtos.Inventory.IAtlasInventoryKey[];
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgUpdateInventoryMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgUpdateInventoryMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgUpdateInventoryMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgUpdateInventoryMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDbgWcAddBuffMessage {
                    buff_gmt_id?: (string|null);
                    quantity?: (number|null);
                    encounter_id?: (Uint8Array|null);
                }

                class DbgWcAddBuffMessage implements IDbgWcAddBuffMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDbgWcAddBuffMessage);
                    public buff_gmt_id: string;
                    public quantity: number;
                    public encounter_id: Uint8Array;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDbgWcAddBuffMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DbgWcAddBuffMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DbgWcAddBuffMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DbgWcAddBuffMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDownloadGameMasterTemplatesMessage {
                    basis_batch_id?: (number|Long|null);
                    batch_id?: (number|Long|null);
                    page_offset?: (number|null);
                }

                class DownloadGameMasterTemplatesMessage implements IDownloadGameMasterTemplatesMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDownloadGameMasterTemplatesMessage);
                    public basis_batch_id: (number|Long);
                    public batch_id: (number|Long);
                    public page_offset: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDownloadGameMasterTemplatesMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DownloadGameMasterTemplatesMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DownloadGameMasterTemplatesMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DownloadGameMasterTemplatesMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IDownloadSettingsMessage {
                    sha1?: (string|null);
                }

                class DownloadSettingsMessage implements IDownloadSettingsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IDownloadSettingsMessage);
                    public sha1: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IDownloadSettingsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.DownloadSettingsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.DownloadSettingsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.DownloadSettingsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IEchoMessage {
                }

                class EchoMessage implements IEchoMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IEchoMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IEchoMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EchoMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EchoMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.EchoMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IEncounterFleeMessage {
                    encounter_id?: (Uint8Array|null);
                    stage_options?: (WUProtos.Networking.Requests.Messages.EncounterFleeMessage.StageOptions|null);
                }

                class EncounterFleeMessage implements IEncounterFleeMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IEncounterFleeMessage);
                    public encounter_id: Uint8Array;
                    public stage_options: WUProtos.Networking.Requests.Messages.EncounterFleeMessage.StageOptions;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IEncounterFleeMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterFleeMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterFleeMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterFleeMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace EncounterFleeMessage {

                    enum StageOptions {
                        UNKNOWN = 0,
                        SWISH = 1,
                        COMBAT = 2
                    }
                }

                interface IEncounterGetStateMessage {
                    encounter_id?: (Uint8Array|null);
                }

                class EncounterGetStateMessage implements IEncounterGetStateMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IEncounterGetStateMessage);
                    public encounter_id: Uint8Array;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IEncounterGetStateMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterGetStateMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterGetStateMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterGetStateMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IEncounterInteractMessage {
                    encounter_id?: (Uint8Array|null);
                    stage_options?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.IEncounterInteractStageOptions|null);
                }

                class EncounterInteractMessage implements IEncounterInteractMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IEncounterInteractMessage);
                    public encounter_id: Uint8Array;
                    public stage_options?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.IEncounterInteractStageOptions|null);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IEncounterInteractMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterInteractMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterInteractMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace EncounterInteractMessage {

                    interface IEncounterInteractStageOptions {
                        swish?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.IEncounterInteractSwishStageOptions|null);
                        combat?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.IEncounterInteractCombatStageOptions|null);
                    }

                    class EncounterInteractStageOptions implements IEncounterInteractStageOptions {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.IEncounterInteractStageOptions);
                        public swish?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.IEncounterInteractSwishStageOptions|null);
                        public combat?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.IEncounterInteractCombatStageOptions|null);
                        public Type?: ("swish"|"combat");
                        public static encode(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.IEncounterInteractStageOptions, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace EncounterInteractStageOptions {

                        interface IEncounterInteractSwishStageOptions {
                            energy_gmt_id?: (string[]|null);
                            is_client_hit?: (boolean|null);
                            accuracy_bonus?: (number|null);
                            professions_rps_match?: (number|null);
                            spell_type_gmt_id?: (string|null);
                            coerce_spellcast_success?: (boolean|null);
                            coerce_spellcast_failure?: (boolean|null);
                            coerce_flee?: (boolean|null);
                            coerce_no_flee?: (boolean|null);
                        }

                        class EncounterInteractSwishStageOptions implements IEncounterInteractSwishStageOptions {
                            constructor(properties?: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.IEncounterInteractSwishStageOptions);
                            public energy_gmt_id: string[];
                            public is_client_hit: boolean;
                            public accuracy_bonus: number;
                            public professions_rps_match: number;
                            public spell_type_gmt_id: string;
                            public coerce_spellcast_success: boolean;
                            public coerce_spellcast_failure: boolean;
                            public coerce_flee: boolean;
                            public coerce_no_flee: boolean;
                            public static encode(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.IEncounterInteractSwishStageOptions, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractSwishStageOptions;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractSwishStageOptions;
                            public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractSwishStageOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        interface IEncounterInteractCombatStageOptions {
                            attack?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IAttack|null);
                            defend?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IDefend|null);
                            auto_advance?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IAutoAdvance|null);
                        }

                        class EncounterInteractCombatStageOptions implements IEncounterInteractCombatStageOptions {
                            constructor(properties?: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.IEncounterInteractCombatStageOptions);
                            public attack?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IAttack|null);
                            public defend?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IDefend|null);
                            public auto_advance?: (WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IAutoAdvance|null);
                            public Type?: ("attack"|"defend"|"auto_advance");
                            public static encode(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.IEncounterInteractCombatStageOptions, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions;
                            public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }

                        namespace EncounterInteractCombatStageOptions {

                            interface IAttack {
                                energy_gmt_id?: (string[]|null);
                                skill_modifier?: (number|null);
                                spell_type_gmt_id?: (string|null);
                            }

                            class Attack implements IAttack {
                                constructor(properties?: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IAttack);
                                public energy_gmt_id: string[];
                                public skill_modifier: number;
                                public spell_type_gmt_id: string;
                                public static encode(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IAttack, writer?: $protobuf.Writer): $protobuf.Writer;
                                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.Attack;
                                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.Attack;
                                public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.Attack, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                public toJSON(): { [k: string]: any };
                            }

                            interface IAutoAdvance {
                            }

                            class AutoAdvance implements IAutoAdvance {
                                constructor(properties?: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IAutoAdvance);
                                public static encode(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IAutoAdvance, writer?: $protobuf.Writer): $protobuf.Writer;
                                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.AutoAdvance;
                                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.AutoAdvance;
                                public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.AutoAdvance, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                public toJSON(): { [k: string]: any };
                            }

                            interface IDefend {
                                block_success?: (boolean|null);
                                energy_gmt_id?: (string[]|null);
                            }

                            class Defend implements IDefend {
                                constructor(properties?: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IDefend);
                                public block_success: boolean;
                                public energy_gmt_id: string[];
                                public static encode(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.IDefend, writer?: $protobuf.Writer): $protobuf.Writer;
                                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.Defend;
                                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.Defend;
                                public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterInteractMessage.EncounterInteractStageOptions.EncounterInteractCombatStageOptions.Defend, options?: $protobuf.IConversionOptions): { [k: string]: any };
                                public toJSON(): { [k: string]: any };
                            }
                        }
                    }
                }

                interface IEncounterSpellcatMessage {
                }

                class EncounterSpellcatMessage implements IEncounterSpellcatMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IEncounterSpellcatMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IEncounterSpellcatMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterSpellcatMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterSpellcatMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterSpellcatMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IEncounterStartMessage {
                    encounter_ticket?: (Uint8Array|null);
                }

                class EncounterStartMessage implements IEncounterStartMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IEncounterStartMessage);
                    public encounter_ticket: Uint8Array;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IEncounterStartMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterStartMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterStartMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterStartMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IEncounterUsePotionMessage {
                    potion_id?: (string|null);
                    encounter_id?: (Uint8Array|null);
                }

                class EncounterUsePotionMessage implements IEncounterUsePotionMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IEncounterUsePotionMessage);
                    public potion_id: string;
                    public encounter_id: Uint8Array;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IEncounterUsePotionMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.EncounterUsePotionMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.EncounterUsePotionMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.EncounterUsePotionMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetAllStorePacksMessage {
                }

                class GetAllStorePacksMessage implements IGetAllStorePacksMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetAllStorePacksMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetAllStorePacksMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetAllStorePacksMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetAllStorePacksMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetAllStorePacksMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetAvailableSkusAndBalancesMessage {
                }

                class GetAvailableSkusAndBalancesMessage implements IGetAvailableSkusAndBalancesMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetAvailableSkusAndBalancesMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetAvailableSkusAndBalancesMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetAvailableSkusAndBalancesMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetAvailableSkusAndBalancesMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetAvailableSkusAndBalancesMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetAvailableSubmissionsMessage {
                }

                class GetAvailableSubmissionsMessage implements IGetAvailableSubmissionsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetAvailableSubmissionsMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetAvailableSubmissionsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetAvailableSubmissionsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetAvailableSubmissionsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetAvailableSubmissionsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetChamberStateMessage {
                }

                class GetChamberStateMessage implements IGetChamberStateMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetChamberStateMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetChamberStateMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetChamberStateMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetChamberStateMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetChamberStateMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetCurrencyBalanceMessage {
                }

                class GetCurrencyBalanceMessage implements IGetCurrencyBalanceMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetCurrencyBalanceMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetCurrencyBalanceMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetCurrencyBalanceMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetCurrencyBalanceMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetCurrencyBalanceMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetFlooNetworkRegionScoresMessage {
                    season_id?: (string|null);
                    region_id?: (string|null);
                }

                class GetFlooNetworkRegionScoresMessage implements IGetFlooNetworkRegionScoresMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetFlooNetworkRegionScoresMessage);
                    public season_id: string;
                    public region_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetFlooNetworkRegionScoresMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetFlooNetworkRegionScoresMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetFlooNetworkRegionScoresMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetFlooNetworkRegionScoresMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetFlooNetworkSeasonScoresMessage {
                    season_id?: (string|null);
                }

                class GetFlooNetworkSeasonScoresMessage implements IGetFlooNetworkSeasonScoresMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetFlooNetworkSeasonScoresMessage);
                    public season_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetFlooNetworkSeasonScoresMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetFlooNetworkSeasonScoresMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetFlooNetworkSeasonScoresMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetFlooNetworkSeasonScoresMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetFortressDetailsMessage {
                    fortress_id?: (string|null);
                    latitude?: (number|null);
                    longitude?: (number|null);
                }

                class GetFortressDetailsMessage implements IGetFortressDetailsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetFortressDetailsMessage);
                    public fortress_id: string;
                    public latitude: number;
                    public longitude: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetFortressDetailsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetFortressDetailsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetFortressDetailsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetFortressDetailsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetFortressFlooNetworkStatisticsMessage {
                    fortress_id?: (string|null);
                    latitude?: (number|null);
                    longitude?: (number|null);
                }

                class GetFortressFlooNetworkStatisticsMessage implements IGetFortressFlooNetworkStatisticsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetFortressFlooNetworkStatisticsMessage);
                    public fortress_id: string;
                    public latitude: number;
                    public longitude: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetFortressFlooNetworkStatisticsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetFortressFlooNetworkStatisticsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetFortressFlooNetworkStatisticsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetFortressFlooNetworkStatisticsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetGreenhouseDetailsMessage {
                    outpost_id?: (string|null);
                    latitude?: (number|null);
                    longitude?: (number|null);
                }

                class GetGreenhouseDetailsMessage implements IGetGreenhouseDetailsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetGreenhouseDetailsMessage);
                    public outpost_id: string;
                    public latitude: number;
                    public longitude: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetGreenhouseDetailsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetGreenhouseDetailsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetGreenhouseDetailsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetGreenhouseDetailsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetInventoryMessage {
                    timestamp_millis?: (number|Long|null);
                }

                class GetInventoryMessage implements IGetInventoryMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetInventoryMessage);
                    public timestamp_millis: (number|Long);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetInventoryMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetInventoryMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetInventoryMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetInventoryMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetLexiconInventoryMessage {
                }

                class GetLexiconInventoryMessage implements IGetLexiconInventoryMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetLexiconInventoryMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetLexiconInventoryMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetLexiconInventoryMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetLexiconInventoryMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetLexiconInventoryMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetOutpostDetailsMessage {
                    id?: (string|null);
                    latitude?: (number|null);
                    longitude?: (number|null);
                }

                class GetOutpostDetailsMessage implements IGetOutpostDetailsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetOutpostDetailsMessage);
                    public id: string;
                    public latitude: number;
                    public longitude: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetOutpostDetailsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetOutpostDetailsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetOutpostDetailsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetOutpostDetailsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetPlayerFeatureListMessage {
                }

                class GetPlayerFeatureListMessage implements IGetPlayerFeatureListMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetPlayerFeatureListMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetPlayerFeatureListMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetPlayerFeatureListMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetPlayerFeatureListMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetPlayerFeatureListMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetPlayerStateMessage {
                }

                class GetPlayerStateMessage implements IGetPlayerStateMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetPlayerStateMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetPlayerStateMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetPlayerStateMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetPlayerStateMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetPlayerStateMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetServerTimeMessage {
                }

                class GetServerTimeMessage implements IGetServerTimeMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetServerTimeMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetServerTimeMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetServerTimeMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetServerTimeMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetServerTimeMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetSignedUrlForPhotoUploadMessage {
                    user_id?: (string|null);
                    game_unique_id?: (string|null);
                }

                class GetSignedUrlForPhotoUploadMessage implements IGetSignedUrlForPhotoUploadMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetSignedUrlForPhotoUploadMessage);
                    public user_id: string;
                    public game_unique_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetSignedUrlForPhotoUploadMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetSignedUrlForPhotoUploadMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetSignedUrlForPhotoUploadMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetSignedUrlForPhotoUploadMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGetStorePackInfoMessage {
                    pack_id?: (string|null);
                }

                class GetStorePackInfoMessage implements IGetStorePackInfoMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGetStorePackInfoMessage);
                    public pack_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGetStorePackInfoMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GetStorePackInfoMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GetStorePackInfoMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GetStorePackInfoMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IGiveAwayGreenhouseMessage {
                    outpost_id?: (string|null);
                    latitude?: (number|null);
                    longitude?: (number|null);
                }

                class GiveAwayGreenhouseMessage implements IGiveAwayGreenhouseMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IGiveAwayGreenhouseMessage);
                    public outpost_id: string;
                    public latitude: number;
                    public longitude: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IGiveAwayGreenhouseMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.GiveAwayGreenhouseMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.GiveAwayGreenhouseMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.GiveAwayGreenhouseMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IInstantFinishBrewingMessage {
                    cauldron_id?: (number|Long|null);
                }

                class InstantFinishBrewingMessage implements IInstantFinishBrewingMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IInstantFinishBrewingMessage);
                    public cauldron_id: (number|Long);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IInstantFinishBrewingMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.InstantFinishBrewingMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.InstantFinishBrewingMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.InstantFinishBrewingMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IJoinChamberMessage {
                    fortress_id?: (string|null);
                    chamber_template_gmt_id?: (string|null);
                    reg_runestone_vaultitem_gmt_id?: (string|null);
                    fortress_latitude?: (number|null);
                    fortress_longitude?: (number|null);
                }

                class JoinChamberMessage implements IJoinChamberMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IJoinChamberMessage);
                    public fortress_id: string;
                    public chamber_template_gmt_id: string;
                    public reg_runestone_vaultitem_gmt_id: string;
                    public fortress_latitude: number;
                    public fortress_longitude: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IJoinChamberMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.JoinChamberMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.JoinChamberMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.JoinChamberMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ILeaveChamberMessage {
                }

                class LeaveChamberMessage implements ILeaveChamberMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.ILeaveChamberMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.ILeaveChamberMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.LeaveChamberMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.LeaveChamberMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.LeaveChamberMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ILevelUpCollectionFamilyMessage {
                    collection_family_id?: (string|null);
                }

                class LevelUpCollectionFamilyMessage implements ILevelUpCollectionFamilyMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.ILevelUpCollectionFamilyMessage);
                    public collection_family_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.ILevelUpCollectionFamilyMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.LevelUpCollectionFamilyMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.LevelUpCollectionFamilyMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.LevelUpCollectionFamilyMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IListLoginMessage {
                }

                class ListLoginMessage implements IListLoginMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IListLoginMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IListLoginMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ListLoginMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ListLoginMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ListLoginMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ILootOutpostMessage {
                    outpost_id?: (string|null);
                    latitude?: (number|null);
                    longitude?: (number|null);
                    menu_timestamp?: (number|Long|null);
                }

                class LootOutpostMessage implements ILootOutpostMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.ILootOutpostMessage);
                    public outpost_id: string;
                    public latitude: number;
                    public longitude: number;
                    public menu_timestamp: (number|Long);
                    public static encode(message: WUProtos.Networking.Requests.Messages.ILootOutpostMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.LootOutpostMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.LootOutpostMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.LootOutpostMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IMapAbilityStartMessage {
                    map_ability_gmt_id?: (string|null);
                    player_nickname?: (string|null);
                    map_coordinate?: (WUProtos.Map.IMapCoordinate|null);
                    mob_id?: (Uint8Array|null);
                }

                class MapAbilityStartMessage implements IMapAbilityStartMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IMapAbilityStartMessage);
                    public map_ability_gmt_id: string;
                    public player_nickname: string;
                    public map_coordinate?: (WUProtos.Map.IMapCoordinate|null);
                    public mob_id: Uint8Array;
                    public Target?: ("player_nickname"|"map_coordinate"|"mob_id");
                    public static encode(message: WUProtos.Networking.Requests.Messages.IMapAbilityStartMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.MapAbilityStartMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.MapAbilityStartMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.MapAbilityStartMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface INotifyPrivacyPolicyMessage {
                }

                class NotifyPrivacyPolicyMessage implements INotifyPrivacyPolicyMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.INotifyPrivacyPolicyMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.INotifyPrivacyPolicyMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.NotifyPrivacyPolicyMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.NotifyPrivacyPolicyMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.NotifyPrivacyPolicyMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IOpenContainerMessage {
                    collection_family_id?: (string|null);
                }

                class OpenContainerMessage implements IOpenContainerMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IOpenContainerMessage);
                    public collection_family_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IOpenContainerMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.OpenContainerMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.OpenContainerMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.OpenContainerMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IOptIntoMarketingEmailsMessage {
                    email_opts?: (WUProtos.Data.IEmailOpts|null);
                }

                class OptIntoMarketingEmailsMessage implements IOptIntoMarketingEmailsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IOptIntoMarketingEmailsMessage);
                    public email_opts?: (WUProtos.Data.IEmailOpts|null);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IOptIntoMarketingEmailsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.OptIntoMarketingEmailsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.OptIntoMarketingEmailsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.OptIntoMarketingEmailsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IOptOutPushNotificationCategoryMessage {
                }

                class OptOutPushNotificationCategoryMessage implements IOptOutPushNotificationCategoryMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IOptOutPushNotificationCategoryMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IOptOutPushNotificationCategoryMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.OptOutPushNotificationCategoryMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.OptOutPushNotificationCategoryMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.OptOutPushNotificationCategoryMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPingMessage {
                    response_size_bytes?: (number|null);
                    random_request_bytes?: (string|null);
                    use_cache_for_random_request_bytes?: (boolean|null);
                }

                class PingMessage implements IPingMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IPingMessage);
                    public response_size_bytes: number;
                    public random_request_bytes: string;
                    public use_cache_for_random_request_bytes: boolean;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IPingMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PingMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PingMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.PingMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlaceItemMessage {
                    collection_item_id?: (string|null);
                }

                class PlaceItemMessage implements IPlaceItemMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IPlaceItemMessage);
                    public collection_item_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IPlaceItemMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PlaceItemMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PlaceItemMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.PlaceItemMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlantIngredientMessage {
                    outpost_id?: (string|null);
                    pot_id?: (string|null);
                    recipe_gmt_id?: (string|null);
                }

                class PlantIngredientMessage implements IPlantIngredientMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IPlantIngredientMessage);
                    public outpost_id: string;
                    public pot_id: string;
                    public recipe_gmt_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IPlantIngredientMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PlantIngredientMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PlantIngredientMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.PlantIngredientMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayerHelpInfoMessage {
                }

                class PlayerHelpInfoMessage implements IPlayerHelpInfoMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IPlayerHelpInfoMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IPlayerHelpInfoMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PlayerHelpInfoMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PlayerHelpInfoMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.PlayerHelpInfoMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayerLevelUpMessage {
                }

                class PlayerLevelUpMessage implements IPlayerLevelUpMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IPlayerLevelUpMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IPlayerLevelUpMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PlayerLevelUpMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PlayerLevelUpMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.PlayerLevelUpMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayerSelectTeamMessage {
                    team_id?: (string|null);
                }

                class PlayerSelectTeamMessage implements IPlayerSelectTeamMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IPlayerSelectTeamMessage);
                    public team_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IPlayerSelectTeamMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PlayerSelectTeamMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PlayerSelectTeamMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.PlayerSelectTeamMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPrestigePageMessage {
                    collection_page_id?: (string|null);
                }

                class PrestigePageMessage implements IPrestigePageMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IPrestigePageMessage);
                    public collection_page_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IPrestigePageMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PrestigePageMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PrestigePageMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.PrestigePageMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProfanityFilterMessage {
                    text?: (string[]|null);
                }

                class ProfanityFilterMessage implements IProfanityFilterMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IProfanityFilterMessage);
                    public text: string[];
                    public static encode(message: WUProtos.Networking.Requests.Messages.IProfanityFilterMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ProfanityFilterMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ProfanityFilterMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ProfanityFilterMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProfessionNodeLevelUnlockMessage {
                    profession_node_id?: (string|null);
                    level?: (number|null);
                    profession_rank_id?: (string|null);
                }

                class ProfessionNodeLevelUnlockMessage implements IProfessionNodeLevelUnlockMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IProfessionNodeLevelUnlockMessage);
                    public profession_node_id: string;
                    public level: number;
                    public profession_rank_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IProfessionNodeLevelUnlockMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ProfessionNodeLevelUnlockMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ProfessionNodeLevelUnlockMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ProfessionNodeLevelUnlockMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProfessionSelectMessage {
                    profession_gmt_id?: (string|null);
                }

                class ProfessionSelectMessage implements IProfessionSelectMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IProfessionSelectMessage);
                    public profession_gmt_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IProfessionSelectMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ProfessionSelectMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ProfessionSelectMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ProfessionSelectMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IProxyMessage {
                    action?: (number|null);
                    host?: (string|null);
                    payload?: (Uint8Array|null);
                }

                class ProxyMessage implements IProxyMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IProxyMessage);
                    public action: number;
                    public host: string;
                    public payload: Uint8Array;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IProxyMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ProxyMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ProxyMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ProxyMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPurchaseSkuMessage {
                    sku_id?: (string|null);
                }

                class PurchaseSkuMessage implements IPurchaseSkuMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IPurchaseSkuMessage);
                    public sku_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IPurchaseSkuMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PurchaseSkuMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PurchaseSkuMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.PurchaseSkuMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPushAnalyticsEventsMessage {
                    events?: (WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.IAnalyticsEvents|null);
                }

                class PushAnalyticsEventsMessage implements IPushAnalyticsEventsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IPushAnalyticsEventsMessage);
                    public events?: (WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.IAnalyticsEvents|null);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IPushAnalyticsEventsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace PushAnalyticsEventsMessage {

                    interface IAnalyticsEvents {
                        event?: (WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.AnalyticsEvents.IAnalyticsEvent[]|null);
                    }

                    class AnalyticsEvents implements IAnalyticsEvents {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.IAnalyticsEvents);
                        public event: WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.AnalyticsEvents.IAnalyticsEvent[];
                        public static encode(message: WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.IAnalyticsEvents, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.AnalyticsEvents;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.AnalyticsEvents;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.AnalyticsEvents, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace AnalyticsEvents {

                        interface IAnalyticsEvent {
                            event_name?: (string|null);
                            event_timestamp?: (number|Long|null);
                            event_metadata?: ({ [k: string]: string }|null);
                        }

                        class AnalyticsEvent implements IAnalyticsEvent {
                            constructor(properties?: WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.AnalyticsEvents.IAnalyticsEvent);
                            public event_name: string;
                            public event_timestamp: (number|Long);
                            public event_metadata: { [k: string]: string };
                            public static encode(message: WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.AnalyticsEvents.IAnalyticsEvent, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.AnalyticsEvents.AnalyticsEvent;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.AnalyticsEvents.AnalyticsEvent;
                            public static toObject(message: WUProtos.Networking.Requests.Messages.PushAnalyticsEventsMessage.AnalyticsEvents.AnalyticsEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }
                    }
                }

                interface IPushNotificationRegistryMessage {
                    apn_token?: (WUProtos.Data.Token.IApnToken|null);
                    gcm_token?: (WUProtos.Data.Token.IGcmToken|null);
                }

                class PushNotificationRegistryMessage implements IPushNotificationRegistryMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IPushNotificationRegistryMessage);
                    public apn_token?: (WUProtos.Data.Token.IApnToken|null);
                    public gcm_token?: (WUProtos.Data.Token.IGcmToken|null);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IPushNotificationRegistryMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PushNotificationRegistryMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PushNotificationRegistryMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.PushNotificationRegistryMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPushPerformanceMetricsMessage {
                    performance_snapshot?: (WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.IPerformanceSnapshot|null);
                }

                class PushPerformanceMetricsMessage implements IPushPerformanceMetricsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IPushPerformanceMetricsMessage);
                    public performance_snapshot?: (WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.IPerformanceSnapshot|null);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IPushPerformanceMetricsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace PushPerformanceMetricsMessage {

                    interface IPerformanceSnapshot {
                        frame_metric_ranges?: (WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.PerformanceSnapshot.IDoubleRange[]|null);
                        on_demand_metrics?: (number[]|null);
                        frame_number?: (number|Long|null);
                        real_time_seconds?: (number|null);
                        label?: (string|null);
                    }

                    class PerformanceSnapshot implements IPerformanceSnapshot {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.IPerformanceSnapshot);
                        public frame_metric_ranges: WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.PerformanceSnapshot.IDoubleRange[];
                        public on_demand_metrics: number[];
                        public frame_number: (number|Long);
                        public real_time_seconds: number;
                        public label: string;
                        public static encode(message: WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.IPerformanceSnapshot, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.PerformanceSnapshot;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.PerformanceSnapshot;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.PerformanceSnapshot, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace PerformanceSnapshot {

                        interface IDoubleRange {
                            avg?: (number|null);
                            min?: (number|null);
                            max?: (number|null);
                        }

                        class DoubleRange implements IDoubleRange {
                            constructor(properties?: WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.PerformanceSnapshot.IDoubleRange);
                            public avg: number;
                            public min: number;
                            public max: number;
                            public static encode(message: WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.PerformanceSnapshot.IDoubleRange, writer?: $protobuf.Writer): $protobuf.Writer;
                            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.PerformanceSnapshot.DoubleRange;
                            public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.PerformanceSnapshot.DoubleRange;
                            public static toObject(message: WUProtos.Networking.Requests.Messages.PushPerformanceMetricsMessage.PerformanceSnapshot.DoubleRange, options?: $protobuf.IConversionOptions): { [k: string]: any };
                            public toJSON(): { [k: string]: any };
                        }
                    }
                }

                interface IQuestAcquireDailiesMessage {
                }

                class QuestAcquireDailiesMessage implements IQuestAcquireDailiesMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IQuestAcquireDailiesMessage);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IQuestAcquireDailiesMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.QuestAcquireDailiesMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.QuestAcquireDailiesMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.QuestAcquireDailiesMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IQuestCompleteMessage {
                    quest_gmt_id?: (string|null);
                }

                class QuestCompleteMessage implements IQuestCompleteMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IQuestCompleteMessage);
                    public quest_gmt_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IQuestCompleteMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.QuestCompleteMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.QuestCompleteMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.QuestCompleteMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IRedeemGoogleReceiptMessage {
                    receipt?: (string|null);
                    receipt_signature?: (string|null);
                    purchase_currency?: (string|null);
                    price_paid_e6?: (number|null);
                    price_paid_e6_long?: (number|Long|null);
                }

                class RedeemGoogleReceiptMessage implements IRedeemGoogleReceiptMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IRedeemGoogleReceiptMessage);
                    public receipt: string;
                    public receipt_signature: string;
                    public purchase_currency: string;
                    public price_paid_e6: number;
                    public price_paid_e6_long: (number|Long);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IRedeemGoogleReceiptMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.RedeemGoogleReceiptMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.RedeemGoogleReceiptMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.RedeemGoogleReceiptMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IRedeemPasscodeMessage {
                    passcode?: (string|null);
                }

                class RedeemPasscodeMessage implements IRedeemPasscodeMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IRedeemPasscodeMessage);
                    public passcode: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IRedeemPasscodeMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.RedeemPasscodeMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.RedeemPasscodeMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.RedeemPasscodeMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IRedeemPoiPassCodeMessage {
                    passcode?: (string|null);
                    poi_guid?: (string|null);
                    device_platform?: (WUProtos.Enums.DevicePlatform|null);
                    carrier?: (string|null);
                }

                class RedeemPoiPassCodeMessage implements IRedeemPoiPassCodeMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IRedeemPoiPassCodeMessage);
                    public passcode: string;
                    public poi_guid: string;
                    public device_platform: WUProtos.Enums.DevicePlatform;
                    public carrier: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IRedeemPoiPassCodeMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.RedeemPoiPassCodeMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.RedeemPoiPassCodeMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.RedeemPoiPassCodeMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IReleaseEscrowedRewardsMessage {
                    claim_by_category?: (WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.IClaimByCategoryRequestAction|null);
                    abandon_all?: (WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.IAbandonAllRequestAction|null);
                }

                class ReleaseEscrowedRewardsMessage implements IReleaseEscrowedRewardsMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IReleaseEscrowedRewardsMessage);
                    public claim_by_category?: (WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.IClaimByCategoryRequestAction|null);
                    public abandon_all?: (WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.IAbandonAllRequestAction|null);
                    public Action?: ("claim_by_category"|"abandon_all");
                    public static encode(message: WUProtos.Networking.Requests.Messages.IReleaseEscrowedRewardsMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ReleaseEscrowedRewardsMessage {

                    interface IAbandonAllRequestAction {
                    }

                    class AbandonAllRequestAction implements IAbandonAllRequestAction {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.IAbandonAllRequestAction);
                        public static encode(message: WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.IAbandonAllRequestAction, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.AbandonAllRequestAction;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.AbandonAllRequestAction;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.AbandonAllRequestAction, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IClaimByCategoryRequestAction {
                        vault_category_gmt_id?: (string|null);
                    }

                    class ClaimByCategoryRequestAction implements IClaimByCategoryRequestAction {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.IClaimByCategoryRequestAction);
                        public vault_category_gmt_id: string;
                        public static encode(message: WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.IClaimByCategoryRequestAction, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.ClaimByCategoryRequestAction;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.ClaimByCategoryRequestAction;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.ReleaseEscrowedRewardsMessage.ClaimByCategoryRequestAction, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                interface IRemoveLoginMessage {
                    identity_provider?: (WUProtos.Enums.IdentityProvider|null);
                }

                class RemoveLoginMessage implements IRemoveLoginMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IRemoveLoginMessage);
                    public identity_provider: WUProtos.Enums.IdentityProvider;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IRemoveLoginMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.RemoveLoginMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.RemoveLoginMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.RemoveLoginMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IRemoveVaultItemMessage {
                    vault_item_id?: (string|null);
                    quantity?: (number|Long|null);
                }

                class RemoveVaultItemMessage implements IRemoveVaultItemMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IRemoveVaultItemMessage);
                    public vault_item_id: string;
                    public quantity: (number|Long);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IRemoveVaultItemMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.RemoveVaultItemMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.RemoveVaultItemMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.RemoveVaultItemMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IRentPotMessage {
                    outpost_id?: (string|null);
                    pot_id?: (string|null);
                    time_item_gmt_id?: (string|null);
                }

                class RentPotMessage implements IRentPotMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IRentPotMessage);
                    public outpost_id: string;
                    public pot_id: string;
                    public time_item_gmt_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IRentPotMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.RentPotMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.RentPotMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.RentPotMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ISetPlayerFlagToDefaultMessage {
                    player_flag_id?: (string|null);
                }

                class SetPlayerFlagToDefaultMessage implements ISetPlayerFlagToDefaultMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.ISetPlayerFlagToDefaultMessage);
                    public player_flag_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.ISetPlayerFlagToDefaultMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.SetPlayerFlagToDefaultMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.SetPlayerFlagToDefaultMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.SetPlayerFlagToDefaultMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ISetRunestonesMessage {
                    reg_runestone_vaultitem_gmt_id?: (string|null);
                    boss_runestone_vaultitem_gmt_id_or_empty?: (string|null);
                }

                class SetRunestonesMessage implements ISetRunestonesMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.ISetRunestonesMessage);
                    public reg_runestone_vaultitem_gmt_id: string;
                    public boss_runestone_vaultitem_gmt_id_or_empty: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.ISetRunestonesMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.SetRunestonesMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.SetRunestonesMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.SetRunestonesMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IStoryboardCancelMessage {
                    storyboard_gmt_id?: (string|null);
                }

                class StoryboardCancelMessage implements IStoryboardCancelMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IStoryboardCancelMessage);
                    public storyboard_gmt_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IStoryboardCancelMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.StoryboardCancelMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.StoryboardCancelMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.StoryboardCancelMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IStoryboardCompleteMessage {
                    storyboard_gmt_id?: (string|null);
                }

                class StoryboardCompleteMessage implements IStoryboardCompleteMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IStoryboardCompleteMessage);
                    public storyboard_gmt_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IStoryboardCompleteMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.StoryboardCompleteMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.StoryboardCompleteMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.StoryboardCompleteMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IStoryboardDoStepMessage {
                    storyboard_gmt_id?: (string|null);
                    step_number?: (number|Long|null);
                    request_version?: (number|null);
                }

                class StoryboardDoStepMessage implements IStoryboardDoStepMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IStoryboardDoStepMessage);
                    public storyboard_gmt_id: string;
                    public step_number: (number|Long);
                    public request_version: number;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IStoryboardDoStepMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.StoryboardDoStepMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.StoryboardDoStepMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.StoryboardDoStepMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface ISubmitNewPoiMessage {
                    title?: (string|null);
                    long_description?: (string|null);
                    image_gs_file_path?: (string|null);
                    lat_e6?: (number|null);
                    lng_e6?: (number|null);
                    image_serving_url?: (string|null);
                    supporting_image_gs_file_path?: (string|null);
                    supporting_image_serving_url?: (string|null);
                    supporting_statement?: (string|null);
                }

                class SubmitNewPoiMessage implements ISubmitNewPoiMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.ISubmitNewPoiMessage);
                    public title: string;
                    public long_description: string;
                    public image_gs_file_path: string;
                    public lat_e6: number;
                    public lng_e6: number;
                    public image_serving_url: string;
                    public supporting_image_gs_file_path: string;
                    public supporting_image_serving_url: string;
                    public supporting_statement: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.ISubmitNewPoiMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.SubmitNewPoiMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.SubmitNewPoiMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.SubmitNewPoiMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IUpdateNotificationMessage {
                    notification_ids?: (string[]|null);
                    create_timestamp_ms?: ((number|Long)[]|null);
                    state?: (WUProtos.Enums.NotificationState|null);
                }

                class UpdateNotificationMessage implements IUpdateNotificationMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IUpdateNotificationMessage);
                    public notification_ids: string[];
                    public create_timestamp_ms: (number|Long)[];
                    public state: WUProtos.Enums.NotificationState;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IUpdateNotificationMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.UpdateNotificationMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.UpdateNotificationMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.UpdateNotificationMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IUpdateProfileFieldMessage {
                    updates?: (WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage.IProfileFieldUpdate[]|null);
                }

                class UpdateProfileFieldMessage implements IUpdateProfileFieldMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IUpdateProfileFieldMessage);
                    public updates: WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage.IProfileFieldUpdate[];
                    public static encode(message: WUProtos.Networking.Requests.Messages.IUpdateProfileFieldMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace UpdateProfileFieldMessage {

                    interface IProfileFieldUpdate {
                        operation?: (WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage.ProfileFieldOperation|null);
                        value?: (string|null);
                    }

                    class ProfileFieldUpdate implements IProfileFieldUpdate {
                        constructor(properties?: WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage.IProfileFieldUpdate);
                        public operation: WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage.ProfileFieldOperation;
                        public value: string;
                        public static encode(message: WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage.IProfileFieldUpdate, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage.ProfileFieldUpdate;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage.ProfileFieldUpdate;
                        public static toObject(message: WUProtos.Networking.Requests.Messages.UpdateProfileFieldMessage.ProfileFieldUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    enum ProfileFieldOperation {
                        UNSET = 0,
                        SET_TITLE = 1,
                        SET_THEME = 2,
                        SET_HOUSE = 3,
                        SET_WAND_CORE = 4,
                        SET_WAND_WOOD = 5,
                        SET_WAND_FLEXIBILITY = 6,
                        SET_WAND_LENGTH = 7,
                        ADD_FAVORITE_BADGE = 8,
                        REMOVE_FAVORITE_BADGE = 9,
                        ADD_FAVORITE_TITLE = 10,
                        REMOVE_FAVORITE_TITLE = 11,
                        SET_FIRST_NAME = 12,
                        SET_LAST_NAME = 13,
                        SET_PROFILE_CREATION_LOCATION = 14,
                        ADD_UNLOCKED_SELFIE_AVATAR_ASSET = 15,
                        ADD_DISCOVERED_MASTER_NOTE = 16
                    }
                }

                interface IUploadPoiPhotoByUrlMessage {
                    request_id?: (string|null);
                    image_url?: (string|null);
                }

                class UploadPoiPhotoByUrlMessage implements IUploadPoiPhotoByUrlMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IUploadPoiPhotoByUrlMessage);
                    public request_id: string;
                    public image_url: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IUploadPoiPhotoByUrlMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.UploadPoiPhotoByUrlMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.UploadPoiPhotoByUrlMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.UploadPoiPhotoByUrlMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IUsePortkeyMessage {
                    portkey_id?: (number|Long|null);
                }

                class UsePortkeyMessage implements IUsePortkeyMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IUsePortkeyMessage);
                    public portkey_id: (number|Long);
                    public static encode(message: WUProtos.Networking.Requests.Messages.IUsePortkeyMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.UsePortkeyMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.UsePortkeyMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.UsePortkeyMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IUsePotionMessage {
                    potion_id?: (string|null);
                }

                class UsePotionMessage implements IUsePotionMessage {
                    constructor(properties?: WUProtos.Networking.Requests.Messages.IUsePotionMessage);
                    public potion_id: string;
                    public static encode(message: WUProtos.Networking.Requests.Messages.IUsePotionMessage, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Messages.UsePotionMessage;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Messages.UsePotionMessage;
                    public static toObject(message: WUProtos.Networking.Requests.Messages.UsePotionMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IRequest {
                request_type?: (WUProtos.Networking.Requests.RequestType|null);
                request_message?: (Uint8Array|null);
            }

            class Request implements IRequest {
                constructor(properties?: WUProtos.Networking.Requests.IRequest);
                public request_type: WUProtos.Networking.Requests.RequestType;
                public request_message: Uint8Array;
                public static encode(message: WUProtos.Networking.Requests.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Requests.Request;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Requests.Request;
                public static toObject(message: WUProtos.Networking.Requests.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            enum RequestType {
                METHOD_UNSET = 0,
                DOWNLOAD_SETTINGS = 1,
                CREATE_OR_UPDATE_PLAYER = 2,
                ENCOUNTER_START = 3,
                ENCOUNTER_SPELLCAST = 4,
                ENCOUNTER_FLEE = 5,
                GRANT_ONE_TIME_REWARDS = 6,
                LEVEL_UP_COLLECTION_FAMILY = 7,
                LOOT_OUTPOST = 8,
                PLAYER_LEVEL_UP = 9,
                GET_SERVER_TIME = 10,
                BUY_STORE_PACK = 11,
                CLAIM_PLAYER_NICKNAME = 12,
                ADD_DARK_DETECTOR = 13,
                GET_OUTPOST_DETAILS = 14,
                CHECK_WALKBOXES = 15,
                APPLY_KEY_TO_WALKBOX = 16,
                USE_PORTKEY = 17,
                SET_PLAYER_FLAG_TO_DEFAULT = 18,
                ENCOUNTER_GET_STATE = 19,
                GET_PLAYER_FEATURE_LIST = 20,
                PUSH_ANALYTICS_EVENTS = 24,
                USE_POTION = 25,
                ENCOUNTER_USE_POTION = 26,
                GET_PLAYER_STATE = 27,
                GET_FORTRESS_DETAILS = 28,
                JOIN_CHAMBER = 29,
                LEAVE_CHAMBER = 30,
                GET_CHAMBER_STATE = 33,
                CLAIM_CHAMBER_REWARDS = 34,
                PUSH_PERFORMANCE_METRICS = 35,
                PLAYER_SELECT_TEAM = 36,
                GET_FORTRESS_FLOO_NETWORK_STATISTICS = 37,
                GET_FLOO_NETWORK_SEASON_SCORES = 38,
                GET_FLOO_NETWORK_REGION_SCORES = 39,
                PROFESSION_SELECT = 40,
                PROFESSION_NODE_LEVEL_UNLOCK = 41,
                CONTRIBUTE_FLOO_POWDER_TO_FORTRESS = 42,
                OPEN_CONTAINER = 43,
                UPDATE_PROFILE_FIELD = 44,
                COLLECT_INGREDIENT = 45,
                MAP_ABILITY_START = 46,
                CRAFT_POTION = 47,
                OPEN_FAMILY_CHESTS = 48,
                RELEASE_ESCROWED_REWARDS = 49,
                CLAIM_POTION = 50,
                PLACE_ITEM = 51,
                PRESTIGE_PAGE = 52,
                SET_RUNESTONES = 53,
                APPLY_MASTER_NOTE = 54,
                REMOVE_VAULT_ITEM = 55,
                GET_CURRENCY_BALANCE = 56,
                BUY_POTION_INGREDIENTS = 57,
                INSTANT_FINISH_BREWING = 58,
                ENCOUNTER_START_TUTORIAL = 59,
                STORYBOARD_DO_STEP = 60,
                STORYBOARD_CANCEL = 61,
                ADD_TIME_TO_CAULDRON = 62,
                CLAIM_DAILY_REWARD = 63,
                QUEST_COMPLETE = 64,
                QUEST_ACQUIRE_DAILIES = 65,
                GIVEAWAY_INGREDIENT_GREENHOUSE = 66,
                PROFANITY_FILTER = 67,
                GET_GREENHOUSE_DETAILS = 68,
                PLAYER_HELP_INFO = 69,
                NOTIFY_PRIVACY_POLICY = 70,
                ACCEPT_TERMS_OF_SERVICE = 71,
                STORYBOARD_COMPLETE = 72,
                ACKNOWLEDGE_PUNISHMENT = 73,
                OPT_INTO_MARKETING_EMAILS = 74,
                RENT_POT = 75,
                PLANT_INGREDIENT = 76,
                CAST_SPELL_FOR_GROWING = 77,
                REDEEM_POI_PASSCODE = 78,
                GET_PLAYER_DISPLAY_INFO = 79,
                ECHO = 666,
                DBG_UPDATE_INVENTORY = 999000,
                DBG_MODIFY_COLLECTION_ITEMS = 999001,
                DBG_RETURN_COLLECTION_ITEM = 999002,
                DBG_GRANT_LOOT_COLLECTION = 999003,
                DBG_START_ENCOUNTER = 999004,
                DBG_RESET_PLAYER = 999005,
                DBG_GET_SPELL_CAST_INFO = 999006,
                DBG_GET_LOOT_ROLL_INFO = 999007,
                DBG_SIMULATE_WALKING = 999008,
                DBG_SET_PLAYER_FLAG = 999009,
                DBG_PLAYER_SELECT_TEAM = 999011,
                DBG_SET_TEAM_FLOO_POINTS = 999012,
                DBG_RESET_PROFESSION = 999013,
                DBG_GET_CHAMBER_INFO = 999014,
                DBG_WC_ADD_BUFF = 999015,
                DBG_CHALLENGE_WIN = 999016,
                DBG_RESET_STORE_PACK_PURCHASED = 999017
            }
        }

        namespace Responses {

            interface IAcceptTermsOfServiceResponse {
                status?: (WUProtos.Networking.Responses.AcceptTermsOfServiceResponse.Status|null);
            }

            class AcceptTermsOfServiceResponse implements IAcceptTermsOfServiceResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAcceptTermsOfServiceResponse);
                public status: WUProtos.Networking.Responses.AcceptTermsOfServiceResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IAcceptTermsOfServiceResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AcceptTermsOfServiceResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AcceptTermsOfServiceResponse;
                public static toObject(message: WUProtos.Networking.Responses.AcceptTermsOfServiceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AcceptTermsOfServiceResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    COMPLETED = 2
                }
            }

            interface IAcknowledgePunishmentResponse {
                result?: (WUProtos.Networking.Responses.AcknowledgePunishmentResponse.Result|null);
            }

            class AcknowledgePunishmentResponse implements IAcknowledgePunishmentResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAcknowledgePunishmentResponse);
                public result: WUProtos.Networking.Responses.AcknowledgePunishmentResponse.Result;
                public static encode(message: WUProtos.Networking.Responses.IAcknowledgePunishmentResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AcknowledgePunishmentResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AcknowledgePunishmentResponse;
                public static toObject(message: WUProtos.Networking.Responses.AcknowledgePunishmentResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AcknowledgePunishmentResponse {

                enum Result {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    ERROR_ANTICHEAT_NOT_ENABLED = 2,
                    ERROR_NO_PUNISHMENT_TO_ACK = 3
                }
            }

            interface IAddDarkDetectorResponse {
                result?: (WUProtos.Networking.Responses.AddDarkDetectorResponse.Result|null);
                dark_detector_amplifier?: (WUProtos.Data.Client.IClientDarkDetectorAmplifier|null);
                partner_id?: (string|null);
            }

            class AddDarkDetectorResponse implements IAddDarkDetectorResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAddDarkDetectorResponse);
                public result: WUProtos.Networking.Responses.AddDarkDetectorResponse.Result;
                public dark_detector_amplifier?: (WUProtos.Data.Client.IClientDarkDetectorAmplifier|null);
                public partner_id: string;
                public static encode(message: WUProtos.Networking.Responses.IAddDarkDetectorResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AddDarkDetectorResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AddDarkDetectorResponse;
                public static toObject(message: WUProtos.Networking.Responses.AddDarkDetectorResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AddDarkDetectorResponse {

                enum Result {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    SLOT_NOT_OPEN = 2,
                    NO_ITEM_IN_INVENTORY = 3,
                    OUTPOST_TOO_FAR_AWAY = 4,
                    POI_CLOSED = 5
                }
            }

            interface IAddLoginResponse {
                success?: (boolean|null);
                login_detail?: (WUProtos.Data.ILoginDetail[]|null);
                status?: (WUProtos.Networking.Responses.AddLoginResponse.Status|null);
            }

            class AddLoginResponse implements IAddLoginResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAddLoginResponse);
                public success: boolean;
                public login_detail: WUProtos.Data.ILoginDetail[];
                public status: WUProtos.Networking.Responses.AddLoginResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IAddLoginResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AddLoginResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AddLoginResponse;
                public static toObject(message: WUProtos.Networking.Responses.AddLoginResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AddLoginResponse {

                enum Status {
                    UNSET = 0,
                    AUTH_FAILURE = 1,
                    LOGIN_TAKEN = 2
                }
            }

            interface IAddTimeToCauldronResponse {
                result?: (WUProtos.Networking.Responses.AddTimeToCauldronResponse.AddTimeToCauldronResult|null);
            }

            class AddTimeToCauldronResponse implements IAddTimeToCauldronResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAddTimeToCauldronResponse);
                public result: WUProtos.Networking.Responses.AddTimeToCauldronResponse.AddTimeToCauldronResult;
                public static encode(message: WUProtos.Networking.Responses.IAddTimeToCauldronResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AddTimeToCauldronResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AddTimeToCauldronResponse;
                public static toObject(message: WUProtos.Networking.Responses.AddTimeToCauldronResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AddTimeToCauldronResponse {

                enum AddTimeToCauldronResult {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    CAULDRON_NOT_FOUND = 2,
                    TIME_ITEM_NOT_FOUND = 3,
                    INVALID_CAULDRON_TYPE = 4,
                    INSUFFICIENT_RESOURCES = 5
                }
            }

            interface IAdminAdjustBalanceResponse {
                status?: (WUProtos.Networking.Responses.AdminAdjustBalanceResponse.Status|null);
            }

            class AdminAdjustBalanceResponse implements IAdminAdjustBalanceResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAdminAdjustBalanceResponse);
                public status: WUProtos.Networking.Responses.AdminAdjustBalanceResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IAdminAdjustBalanceResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AdminAdjustBalanceResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AdminAdjustBalanceResponse;
                public static toObject(message: WUProtos.Networking.Responses.AdminAdjustBalanceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AdminAdjustBalanceResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    FAILURE = 2,
                    BALANCE_TOO_LOW = 3
                }
            }

            interface IAdminCreateSkuResponse {
                status?: (WUProtos.Networking.Responses.AdminCreateSkuResponse.Status|null);
            }

            class AdminCreateSkuResponse implements IAdminCreateSkuResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAdminCreateSkuResponse);
                public status: WUProtos.Networking.Responses.AdminCreateSkuResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IAdminCreateSkuResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AdminCreateSkuResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AdminCreateSkuResponse;
                public static toObject(message: WUProtos.Networking.Responses.AdminCreateSkuResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AdminCreateSkuResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    FAILURE = 2
                }
            }

            interface IAdminDeleteInAppPurchaseItemResponse {
                status?: (WUProtos.Networking.Responses.AdminDeleteInAppPurchaseItemResponse.Status|null);
            }

            class AdminDeleteInAppPurchaseItemResponse implements IAdminDeleteInAppPurchaseItemResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAdminDeleteInAppPurchaseItemResponse);
                public status: WUProtos.Networking.Responses.AdminDeleteInAppPurchaseItemResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IAdminDeleteInAppPurchaseItemResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AdminDeleteInAppPurchaseItemResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AdminDeleteInAppPurchaseItemResponse;
                public static toObject(message: WUProtos.Networking.Responses.AdminDeleteInAppPurchaseItemResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AdminDeleteInAppPurchaseItemResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    FAILURE = 2
                }
            }

            interface IAdminGetInAppPurchaseLogsResponse {
                log?: (WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IPlayerInAppPurchaseLog[]|null);
                current_balance?: (WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IBalanceSnapshotEntry[]|null);
            }

            class AdminGetInAppPurchaseLogsResponse implements IAdminGetInAppPurchaseLogsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAdminGetInAppPurchaseLogsResponse);
                public log: WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IPlayerInAppPurchaseLog[];
                public current_balance: WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IBalanceSnapshotEntry[];
                public static encode(message: WUProtos.Networking.Responses.IAdminGetInAppPurchaseLogsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse;
                public static toObject(message: WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AdminGetInAppPurchaseLogsResponse {

                interface IBalanceSnapshotEntry {
                    currency_type?: (string|null);
                    quantity?: (number|null);
                }

                class BalanceSnapshotEntry implements IBalanceSnapshotEntry {
                    constructor(properties?: WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IBalanceSnapshotEntry);
                    public currency_type: string;
                    public quantity: number;
                    public static encode(message: WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IBalanceSnapshotEntry, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.BalanceSnapshotEntry;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.BalanceSnapshotEntry;
                    public static toObject(message: WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.BalanceSnapshotEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayerInAppPurchaseLog {
                    timestamp_ms?: (number|Long|null);
                    player_id?: (string|null);
                    type?: (string|null);
                    description?: (string|null);
                    sku_id?: (string|null);
                    currency_used?: (string|null);
                    price_paid_e6?: (number|Long|null);
                    vendor_code?: (string|null);
                    initial_balance?: (WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IBalanceSnapshotEntry[]|null);
                    final_balance?: (WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IBalanceSnapshotEntry[]|null);
                    item_id?: (string[]|null);
                }

                class PlayerInAppPurchaseLog implements IPlayerInAppPurchaseLog {
                    constructor(properties?: WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IPlayerInAppPurchaseLog);
                    public timestamp_ms: (number|Long);
                    public player_id: string;
                    public type: string;
                    public description: string;
                    public sku_id: string;
                    public currency_used: string;
                    public price_paid_e6: (number|Long);
                    public vendor_code: string;
                    public initial_balance: WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IBalanceSnapshotEntry[];
                    public final_balance: WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IBalanceSnapshotEntry[];
                    public item_id: string[];
                    public static encode(message: WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.IPlayerInAppPurchaseLog, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.PlayerInAppPurchaseLog;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.PlayerInAppPurchaseLog;
                    public static toObject(message: WUProtos.Networking.Responses.AdminGetInAppPurchaseLogsResponse.PlayerInAppPurchaseLog, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IAdminGrantInAppPurchaseItemResponse {
                status?: (WUProtos.Networking.Responses.AdminGrantInAppPurchaseItemResponse.Status|null);
            }

            class AdminGrantInAppPurchaseItemResponse implements IAdminGrantInAppPurchaseItemResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAdminGrantInAppPurchaseItemResponse);
                public status: WUProtos.Networking.Responses.AdminGrantInAppPurchaseItemResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IAdminGrantInAppPurchaseItemResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AdminGrantInAppPurchaseItemResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AdminGrantInAppPurchaseItemResponse;
                public static toObject(message: WUProtos.Networking.Responses.AdminGrantInAppPurchaseItemResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AdminGrantInAppPurchaseItemResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    FAILURE = 2
                }
            }

            interface IAdminReadSkusResponse {
                sku?: (WUProtos.Data.ISkuData[]|null);
            }

            class AdminReadSkusResponse implements IAdminReadSkusResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAdminReadSkusResponse);
                public sku: WUProtos.Data.ISkuData[];
                public static encode(message: WUProtos.Networking.Responses.IAdminReadSkusResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AdminReadSkusResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AdminReadSkusResponse;
                public static toObject(message: WUProtos.Networking.Responses.AdminReadSkusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IAdminUpdateSkuResponse {
                status?: (WUProtos.Networking.Responses.AdminUpdateSkuResponse.Status|null);
            }

            class AdminUpdateSkuResponse implements IAdminUpdateSkuResponse {
                constructor(properties?: WUProtos.Networking.Responses.IAdminUpdateSkuResponse);
                public status: WUProtos.Networking.Responses.AdminUpdateSkuResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IAdminUpdateSkuResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.AdminUpdateSkuResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.AdminUpdateSkuResponse;
                public static toObject(message: WUProtos.Networking.Responses.AdminUpdateSkuResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace AdminUpdateSkuResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    FAILURE = 2
                }
            }

            interface IApplyKeyToWalkboxResponse {
                status?: (WUProtos.Networking.Responses.ApplyKeyToWalkboxResponse.Status|null);
            }

            class ApplyKeyToWalkboxResponse implements IApplyKeyToWalkboxResponse {
                constructor(properties?: WUProtos.Networking.Responses.IApplyKeyToWalkboxResponse);
                public status: WUProtos.Networking.Responses.ApplyKeyToWalkboxResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IApplyKeyToWalkboxResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ApplyKeyToWalkboxResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ApplyKeyToWalkboxResponse;
                public static toObject(message: WUProtos.Networking.Responses.ApplyKeyToWalkboxResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ApplyKeyToWalkboxResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    ERROR = 2,
                    INVALID_WALKBOX = 3,
                    KEY_UNAVAILABLE = 4,
                    ALREADY_UNLOCKING = 5
                }
            }

            interface IApplyMasterNoteResponse {
                result?: (WUProtos.Networking.Responses.ApplyMasterNoteResponse.ApplyMasterNoteResult|null);
            }

            class ApplyMasterNoteResponse implements IApplyMasterNoteResponse {
                constructor(properties?: WUProtos.Networking.Responses.IApplyMasterNoteResponse);
                public result: WUProtos.Networking.Responses.ApplyMasterNoteResponse.ApplyMasterNoteResult;
                public static encode(message: WUProtos.Networking.Responses.IApplyMasterNoteResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ApplyMasterNoteResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ApplyMasterNoteResponse;
                public static toObject(message: WUProtos.Networking.Responses.ApplyMasterNoteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ApplyMasterNoteResponse {

                enum ApplyMasterNoteResult {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    INCORRECT_GESTURE_SEQUENCE = 2,
                    NO_POTION_BREWING = 3,
                    CAULDRON_HAS_COMPLETED_BREWS = 4,
                    MASTER_NOTE_ALREADY_APPLIED = 5
                }
            }

            interface IBuyPotionIngredientsResponse {
                status?: (WUProtos.Networking.Responses.BuyPotionIngredientsResponse.Status|null);
                rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class BuyPotionIngredientsResponse implements IBuyPotionIngredientsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IBuyPotionIngredientsResponse);
                public status: WUProtos.Networking.Responses.BuyPotionIngredientsResponse.Status;
                public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Networking.Responses.IBuyPotionIngredientsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.BuyPotionIngredientsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.BuyPotionIngredientsResponse;
                public static toObject(message: WUProtos.Networking.Responses.BuyPotionIngredientsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace BuyPotionIngredientsResponse {

                enum Status {
                    UNKNOWN = 0,
                    ERROR = 1,
                    PACK_NOT_AVAILABLE = 2,
                    INSUFFICIENT_FUNDS = 3,
                    ALREADY_PURCHASED = 4,
                    SUCCESS = 5,
                    AT_ITEM_CAP = 6
                }
            }

            interface ICastSpellForGrowingResponse {
                status?: (WUProtos.Networking.Responses.CastSpellForGrowingResponse.Status|null);
            }

            class CastSpellForGrowingResponse implements ICastSpellForGrowingResponse {
                constructor(properties?: WUProtos.Networking.Responses.ICastSpellForGrowingResponse);
                public status: WUProtos.Networking.Responses.CastSpellForGrowingResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.ICastSpellForGrowingResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.CastSpellForGrowingResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.CastSpellForGrowingResponse;
                public static toObject(message: WUProtos.Networking.Responses.CastSpellForGrowingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace CastSpellForGrowingResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    TOO_FAR = 2,
                    POI_CLOSED = 3,
                    FEATURE_DISABLED = 4,
                    INVALID_POT = 5,
                    NOT_ENOUGH_SPELL_ENERGY = 6,
                    NO_GROWING_IN_PROGRESS = 7
                }
            }

            interface ICheckWalkboxesResponse {
                opened_walkboxes?: (WUProtos.Networking.Responses.CheckWalkboxesResponse.IOpenedWalkboxProto[]|null);
            }

            class CheckWalkboxesResponse implements ICheckWalkboxesResponse {
                constructor(properties?: WUProtos.Networking.Responses.ICheckWalkboxesResponse);
                public opened_walkboxes: WUProtos.Networking.Responses.CheckWalkboxesResponse.IOpenedWalkboxProto[];
                public static encode(message: WUProtos.Networking.Responses.ICheckWalkboxesResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.CheckWalkboxesResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.CheckWalkboxesResponse;
                public static toObject(message: WUProtos.Networking.Responses.CheckWalkboxesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace CheckWalkboxesResponse {

                interface IOpenedWalkboxProto {
                    walkbox_gmt_template?: (string|null);
                    rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    portkey_ids?: ((number|Long)[]|null);
                }

                class OpenedWalkboxProto implements IOpenedWalkboxProto {
                    constructor(properties?: WUProtos.Networking.Responses.CheckWalkboxesResponse.IOpenedWalkboxProto);
                    public walkbox_gmt_template: string;
                    public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    public portkey_ids: (number|Long)[];
                    public static encode(message: WUProtos.Networking.Responses.CheckWalkboxesResponse.IOpenedWalkboxProto, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.CheckWalkboxesResponse.OpenedWalkboxProto;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.CheckWalkboxesResponse.OpenedWalkboxProto;
                    public static toObject(message: WUProtos.Networking.Responses.CheckWalkboxesResponse.OpenedWalkboxProto, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IClaimChamberRewardsResponse {
                status?: (WUProtos.Enums.ChallengeRpcStatus|null);
                state?: (WUProtos.Data.IChamberState|null);
                player_snapshot?: (WUProtos.Data.Client.IClientPlayerSnapshot|null);
            }

            class ClaimChamberRewardsResponse implements IClaimChamberRewardsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IClaimChamberRewardsResponse);
                public status: WUProtos.Enums.ChallengeRpcStatus;
                public state?: (WUProtos.Data.IChamberState|null);
                public player_snapshot?: (WUProtos.Data.Client.IClientPlayerSnapshot|null);
                public static encode(message: WUProtos.Networking.Responses.IClaimChamberRewardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ClaimChamberRewardsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ClaimChamberRewardsResponse;
                public static toObject(message: WUProtos.Networking.Responses.ClaimChamberRewardsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClaimDailyRewardResponse {
                time_until_next_claim?: (number|Long|null);
                daily_reward_monthly_schedule_id?: (string|null);
                days_claimed_this_month?: (number|null);
                reward?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class ClaimDailyRewardResponse implements IClaimDailyRewardResponse {
                constructor(properties?: WUProtos.Networking.Responses.IClaimDailyRewardResponse);
                public time_until_next_claim: (number|Long);
                public daily_reward_monthly_schedule_id: string;
                public days_claimed_this_month: number;
                public reward?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Networking.Responses.IClaimDailyRewardResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ClaimDailyRewardResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ClaimDailyRewardResponse;
                public static toObject(message: WUProtos.Networking.Responses.ClaimDailyRewardResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClaimPlayerNicknameResponse {
                status?: (WUProtos.Networking.Responses.ClaimPlayerNicknameResponse.Status|null);
            }

            class ClaimPlayerNicknameResponse implements IClaimPlayerNicknameResponse {
                constructor(properties?: WUProtos.Networking.Responses.IClaimPlayerNicknameResponse);
                public status: WUProtos.Networking.Responses.ClaimPlayerNicknameResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IClaimPlayerNicknameResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ClaimPlayerNicknameResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ClaimPlayerNicknameResponse;
                public static toObject(message: WUProtos.Networking.Responses.ClaimPlayerNicknameResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClaimPlayerNicknameResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    ERROR = 2,
                    NAME_NOT_AVAILABLE = 3
                }
            }

            interface IClaimPotionResponse {
                result?: (WUProtos.Networking.Responses.ClaimPotionResponse.ClaimPotionResult|null);
                received_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                remaining_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class ClaimPotionResponse implements IClaimPotionResponse {
                constructor(properties?: WUProtos.Networking.Responses.IClaimPotionResponse);
                public result: WUProtos.Networking.Responses.ClaimPotionResponse.ClaimPotionResult;
                public received_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public remaining_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Networking.Responses.IClaimPotionResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ClaimPotionResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ClaimPotionResponse;
                public static toObject(message: WUProtos.Networking.Responses.ClaimPotionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClaimPotionResponse {

                enum ClaimPotionResult {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    EMPTY_SLOT_SELECTED = 2,
                    BREWING_NOT_COMPLETE = 3,
                    INSUFFICIENT_INVENTORY_SPACE_FOR_POTION = 4,
                    CAULDRON_DOES_NOT_CONTAIN_REQUESTED_REWARDS = 5
                }
            }

            interface IClientConfigurationResponse {
                force_update?: (boolean|null);
                server_uri?: (string|null);
                actual_env_id?: (string|null);
                manifest_version?: (string|null);
                quality_level?: (WUProtos.Data.QualityLevel.ISharedQualityLevel|null);
                force_update_url?: (string|null);
            }

            class ClientConfigurationResponse implements IClientConfigurationResponse {
                constructor(properties?: WUProtos.Networking.Responses.IClientConfigurationResponse);
                public force_update: boolean;
                public server_uri: string;
                public actual_env_id: string;
                public manifest_version: string;
                public quality_level?: (WUProtos.Data.QualityLevel.ISharedQualityLevel|null);
                public force_update_url: string;
                public static encode(message: WUProtos.Networking.Responses.IClientConfigurationResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ClientConfigurationResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ClientConfigurationResponse;
                public static toObject(message: WUProtos.Networking.Responses.ClientConfigurationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IClientTelemetryResponse {
                status?: (WUProtos.Networking.Responses.ClientTelemetryResponse.Status|null);
                rows_written?: (number|null);
            }

            class ClientTelemetryResponse implements IClientTelemetryResponse {
                constructor(properties?: WUProtos.Networking.Responses.IClientTelemetryResponse);
                public status: WUProtos.Networking.Responses.ClientTelemetryResponse.Status;
                public rows_written: number;
                public static encode(message: WUProtos.Networking.Responses.IClientTelemetryResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ClientTelemetryResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ClientTelemetryResponse;
                public static toObject(message: WUProtos.Networking.Responses.ClientTelemetryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ClientTelemetryResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    FAILURE = 2,
                    ERROR_INVALID_REQUEST = 3,
                    ERROR_INVALID_PROTO = 4,
                    ERROR_UNSET_TELEMETRY_ID = 5
                }
            }

            interface ICollectIngredientResponse {
                result?: (WUProtos.Networking.Responses.CollectIngredientResponse.CollectIngredientResult|null);
                rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class CollectIngredientResponse implements ICollectIngredientResponse {
                constructor(properties?: WUProtos.Networking.Responses.ICollectIngredientResponse);
                public result: WUProtos.Networking.Responses.CollectIngredientResponse.CollectIngredientResult;
                public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Networking.Responses.ICollectIngredientResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.CollectIngredientResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.CollectIngredientResponse;
                public static toObject(message: WUProtos.Networking.Responses.CollectIngredientResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace CollectIngredientResponse {

                enum CollectIngredientResult {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    BAD_TICKET = 2,
                    NOT_IN_RANGE = 3,
                    ALREADY_COLLECTED = 4,
                    FULL_CAPACITY = 5
                }
            }

            interface IContainerConsumptionResponse {
                status?: (WUProtos.Networking.Responses.ContainerConsumptionResponse.Status|null);
                container_contents?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class ContainerConsumptionResponse implements IContainerConsumptionResponse {
                constructor(properties?: WUProtos.Networking.Responses.IContainerConsumptionResponse);
                public status: WUProtos.Networking.Responses.ContainerConsumptionResponse.Status;
                public container_contents?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Networking.Responses.IContainerConsumptionResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ContainerConsumptionResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ContainerConsumptionResponse;
                public static toObject(message: WUProtos.Networking.Responses.ContainerConsumptionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ContainerConsumptionResponse {

                enum Status {
                    NONE = 0,
                    UNKNOWN_CONTAINER_CONSUMPTION_RESULT = 1,
                    SUCCESS = 2,
                    CONTAINER_NOT_IN_VAULT = 3
                }
            }

            interface IContributeFlooPowderToFortressResponse {
                result?: (WUProtos.Networking.Responses.ContributeFlooPowderToFortressResponse.Result|null);
                fortress_statistics?: (WUProtos.Data.IFlooNetworkFortressStatistics|null);
            }

            class ContributeFlooPowderToFortressResponse implements IContributeFlooPowderToFortressResponse {
                constructor(properties?: WUProtos.Networking.Responses.IContributeFlooPowderToFortressResponse);
                public result: WUProtos.Networking.Responses.ContributeFlooPowderToFortressResponse.Result;
                public fortress_statistics?: (WUProtos.Data.IFlooNetworkFortressStatistics|null);
                public static encode(message: WUProtos.Networking.Responses.IContributeFlooPowderToFortressResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ContributeFlooPowderToFortressResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ContributeFlooPowderToFortressResponse;
                public static toObject(message: WUProtos.Networking.Responses.ContributeFlooPowderToFortressResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ContributeFlooPowderToFortressResponse {

                enum Result {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    PLAYER_HAS_NO_TEAM = 2,
                    INSUFFICIENT_FLOO_POWDER = 3,
                    TOO_FAR_FROM_FORTRESS = 4,
                    SEASON_NOT_ACTIVE = 5,
                    FLOO_NETWORK_UNAVAILABLE = 6
                }
            }

            interface ICraftPotionResponse {
                result?: (WUProtos.Networking.Responses.CraftPotionResponse.CraftPotionResult|null);
                rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class CraftPotionResponse implements ICraftPotionResponse {
                constructor(properties?: WUProtos.Networking.Responses.ICraftPotionResponse);
                public result: WUProtos.Networking.Responses.CraftPotionResponse.CraftPotionResult;
                public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Networking.Responses.ICraftPotionResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.CraftPotionResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.CraftPotionResponse;
                public static toObject(message: WUProtos.Networking.Responses.CraftPotionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace CraftPotionResponse {

                enum CraftPotionResult {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    INSUFFICIENT_RESOURCES = 2,
                    CAULDRON_QUEUE_FULL = 3,
                    CAULDRON_HAS_COMPLETED_BREWS = 4,
                    RENTAL_CAULDRON_NOT_AVAILABLE = 5,
                    RENTAL_CAULDRON_NOT_ENOUGH_TIME_LEFT = 6,
                    PURCHASE_INGREDIENTS_INSUFFICIENT_RESOURCES = 7,
                    RECIPE_NOT_ENABLED = 8,
                    RECIPE_NOT_UNLOCKED = 9
                }
            }

            interface ICreateOrUpdatePlayerResponse {
                success?: (boolean|null);
                player?: (WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.IClientPlayerData|null);
                first_login_of_day?: (boolean|null);
                player_discipline?: (WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.IPlayerDisciplineInfo|null);
            }

            class CreateOrUpdatePlayerResponse implements ICreateOrUpdatePlayerResponse {
                constructor(properties?: WUProtos.Networking.Responses.ICreateOrUpdatePlayerResponse);
                public success: boolean;
                public player?: (WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.IClientPlayerData|null);
                public first_login_of_day: boolean;
                public player_discipline?: (WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.IPlayerDisciplineInfo|null);
                public static encode(message: WUProtos.Networking.Responses.ICreateOrUpdatePlayerResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse;
                public static toObject(message: WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace CreateOrUpdatePlayerResponse {

                interface IClientPlayerData {
                    creation_time_ms?: (number|Long|null);
                    update_privacy_policy?: (boolean|null);
                    update_terms_of_service?: (boolean|null);
                }

                class ClientPlayerData implements IClientPlayerData {
                    constructor(properties?: WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.IClientPlayerData);
                    public creation_time_ms: (number|Long);
                    public update_privacy_policy: boolean;
                    public update_terms_of_service: boolean;
                    public static encode(message: WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.IClientPlayerData, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.ClientPlayerData;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.ClientPlayerData;
                    public static toObject(message: WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.ClientPlayerData, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IPlayerDisciplineInfo {
                    warn?: (boolean|null);
                    warn_message_acknowledged?: (boolean|null);
                    warn_expire_ms?: (number|Long|null);
                    was_suspended?: (boolean|null);
                    suspended_message_acknowledged?: (boolean|null);
                }

                class PlayerDisciplineInfo implements IPlayerDisciplineInfo {
                    constructor(properties?: WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.IPlayerDisciplineInfo);
                    public warn: boolean;
                    public warn_message_acknowledged: boolean;
                    public warn_expire_ms: (number|Long);
                    public was_suspended: boolean;
                    public suspended_message_acknowledged: boolean;
                    public static encode(message: WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.IPlayerDisciplineInfo, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.PlayerDisciplineInfo;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.PlayerDisciplineInfo;
                    public static toObject(message: WUProtos.Networking.Responses.CreateOrUpdatePlayerResponse.PlayerDisciplineInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IDbgChallengeWinResponse {
            }

            class DbgChallengeWinResponse implements IDbgChallengeWinResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgChallengeWinResponse);
                public static encode(message: WUProtos.Networking.Responses.IDbgChallengeWinResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgChallengeWinResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgChallengeWinResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgChallengeWinResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgGetChamberInfoResponse {
                chamber_template_id?: (string|null);
                total_population_allotment?: (number|null);
                used_population_allotment?: (number|null);
                challenge_rating?: (number|null);
            }

            class DbgGetChamberInfoResponse implements IDbgGetChamberInfoResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgGetChamberInfoResponse);
                public chamber_template_id: string;
                public total_population_allotment: number;
                public used_population_allotment: number;
                public challenge_rating: number;
                public static encode(message: WUProtos.Networking.Responses.IDbgGetChamberInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgGetChamberInfoResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgGetChamberInfoResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgGetChamberInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgGetLootRollInfoResponse {
                loot?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class DbgGetLootRollInfoResponse implements IDbgGetLootRollInfoResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgGetLootRollInfoResponse);
                public loot?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Networking.Responses.IDbgGetLootRollInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgGetLootRollInfoResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgGetLootRollInfoResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgGetLootRollInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgGetSpellcastInfoResponse {
                spell_hit_chance?: (number|null);
                spell_hit_roll?: (number|null);
                flee_chance?: (number|null);
                flee_roll?: (number|null);
            }

            class DbgGetSpellcastInfoResponse implements IDbgGetSpellcastInfoResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgGetSpellcastInfoResponse);
                public spell_hit_chance: number;
                public spell_hit_roll: number;
                public flee_chance: number;
                public flee_roll: number;
                public static encode(message: WUProtos.Networking.Responses.IDbgGetSpellcastInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgGetSpellcastInfoResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgGetSpellcastInfoResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgGetSpellcastInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgGrantLootCollectionResponse {
                loot_granted?: (boolean|null);
            }

            class DbgGrantLootCollectionResponse implements IDbgGrantLootCollectionResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgGrantLootCollectionResponse);
                public loot_granted: boolean;
                public static encode(message: WUProtos.Networking.Responses.IDbgGrantLootCollectionResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgGrantLootCollectionResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgGrantLootCollectionResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgGrantLootCollectionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgModifyCollectionItemsResponse {
                updated_collection_item_ids?: (string[]|null);
            }

            class DbgModifyCollectionItemsResponse implements IDbgModifyCollectionItemsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgModifyCollectionItemsResponse);
                public updated_collection_item_ids: string[];
                public static encode(message: WUProtos.Networking.Responses.IDbgModifyCollectionItemsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgModifyCollectionItemsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgModifyCollectionItemsResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgModifyCollectionItemsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgPlayerSelectTeamResponse {
                result?: (WUProtos.Networking.Responses.DbgPlayerSelectTeamResponse.Result|null);
            }

            class DbgPlayerSelectTeamResponse implements IDbgPlayerSelectTeamResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgPlayerSelectTeamResponse);
                public result: WUProtos.Networking.Responses.DbgPlayerSelectTeamResponse.Result;
                public static encode(message: WUProtos.Networking.Responses.IDbgPlayerSelectTeamResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgPlayerSelectTeamResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgPlayerSelectTeamResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgPlayerSelectTeamResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace DbgPlayerSelectTeamResponse {

                enum Result {
                    UNKNOWN = 0,
                    TEAM_SET = 1,
                    TEAM_ID_INVALID = 2
                }
            }

            interface IDbgResetPlayerResponse {
                success?: (boolean|null);
            }

            class DbgResetPlayerResponse implements IDbgResetPlayerResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgResetPlayerResponse);
                public success: boolean;
                public static encode(message: WUProtos.Networking.Responses.IDbgResetPlayerResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgResetPlayerResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgResetPlayerResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgResetPlayerResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgResetProfessionResponse {
                success?: (boolean|null);
            }

            class DbgResetProfessionResponse implements IDbgResetProfessionResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgResetProfessionResponse);
                public success: boolean;
                public static encode(message: WUProtos.Networking.Responses.IDbgResetProfessionResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgResetProfessionResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgResetProfessionResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgResetProfessionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgResetStorePackPurchasedResponse {
                successful?: (boolean|null);
            }

            class DbgResetStorePackPurchasedResponse implements IDbgResetStorePackPurchasedResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgResetStorePackPurchasedResponse);
                public successful: boolean;
                public static encode(message: WUProtos.Networking.Responses.IDbgResetStorePackPurchasedResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgResetStorePackPurchasedResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgResetStorePackPurchasedResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgResetStorePackPurchasedResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgReturnCollectionItemResponse {
                did_return_collection_item?: (boolean|null);
            }

            class DbgReturnCollectionItemResponse implements IDbgReturnCollectionItemResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgReturnCollectionItemResponse);
                public did_return_collection_item: boolean;
                public static encode(message: WUProtos.Networking.Responses.IDbgReturnCollectionItemResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgReturnCollectionItemResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgReturnCollectionItemResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgReturnCollectionItemResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgSetPlayerFlagResponse {
                did_set_flag?: (boolean|null);
            }

            class DbgSetPlayerFlagResponse implements IDbgSetPlayerFlagResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgSetPlayerFlagResponse);
                public did_set_flag: boolean;
                public static encode(message: WUProtos.Networking.Responses.IDbgSetPlayerFlagResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgSetPlayerFlagResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgSetPlayerFlagResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgSetPlayerFlagResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgSetTeamFlooPointsResponse {
                fortress_statistics?: (WUProtos.Data.IFlooNetworkFortressStatistics|null);
            }

            class DbgSetTeamFlooPointsResponse implements IDbgSetTeamFlooPointsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgSetTeamFlooPointsResponse);
                public fortress_statistics?: (WUProtos.Data.IFlooNetworkFortressStatistics|null);
                public static encode(message: WUProtos.Networking.Responses.IDbgSetTeamFlooPointsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgSetTeamFlooPointsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgSetTeamFlooPointsResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgSetTeamFlooPointsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgSimulateWalkingResponse {
                status?: (WUProtos.Networking.Responses.DbgSimulateWalkingResponse.Status|null);
            }

            class DbgSimulateWalkingResponse implements IDbgSimulateWalkingResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgSimulateWalkingResponse);
                public status: WUProtos.Networking.Responses.DbgSimulateWalkingResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IDbgSimulateWalkingResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgSimulateWalkingResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgSimulateWalkingResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgSimulateWalkingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace DbgSimulateWalkingResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    ERROR = 2
                }
            }

            interface IDbgStartEncounterResponse {
                response?: (WUProtos.Networking.Responses.IEncounterStartResponse|null);
            }

            class DbgStartEncounterResponse implements IDbgStartEncounterResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgStartEncounterResponse);
                public response?: (WUProtos.Networking.Responses.IEncounterStartResponse|null);
                public static encode(message: WUProtos.Networking.Responses.IDbgStartEncounterResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgStartEncounterResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgStartEncounterResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgStartEncounterResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgUpdatePlayerInventoryResponse {
                successful?: (boolean|null);
                added_keys?: (WUProtos.Inventory.IAtlasInventoryKey[]|null);
                replaced_keys?: (WUProtos.Inventory.IAtlasInventoryKey[]|null);
                deleted_keys?: (WUProtos.Inventory.IAtlasInventoryKey[]|null);
            }

            class DbgUpdatePlayerInventoryResponse implements IDbgUpdatePlayerInventoryResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgUpdatePlayerInventoryResponse);
                public successful: boolean;
                public added_keys: WUProtos.Inventory.IAtlasInventoryKey[];
                public replaced_keys: WUProtos.Inventory.IAtlasInventoryKey[];
                public deleted_keys: WUProtos.Inventory.IAtlasInventoryKey[];
                public static encode(message: WUProtos.Networking.Responses.IDbgUpdatePlayerInventoryResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgUpdatePlayerInventoryResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgUpdatePlayerInventoryResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgUpdatePlayerInventoryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDbgWcAddBuffResponse {
            }

            class DbgWcAddBuffResponse implements IDbgWcAddBuffResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDbgWcAddBuffResponse);
                public static encode(message: WUProtos.Networking.Responses.IDbgWcAddBuffResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DbgWcAddBuffResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DbgWcAddBuffResponse;
                public static toObject(message: WUProtos.Networking.Responses.DbgWcAddBuffResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IDownloadGameMasterTemplatesResponse {
                result?: (WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse.Result|null);
                template?: (WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse.IClientGameMasterTemplate[]|null);
                deleted_template?: (string[]|null);
                batch_id?: (number|Long|null);
                page_offset?: (number|null);
            }

            class DownloadGameMasterTemplatesResponse implements IDownloadGameMasterTemplatesResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDownloadGameMasterTemplatesResponse);
                public result: WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse.Result;
                public template: WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse.IClientGameMasterTemplate[];
                public deleted_template: string[];
                public batch_id: (number|Long);
                public page_offset: number;
                public static encode(message: WUProtos.Networking.Responses.IDownloadGameMasterTemplatesResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse;
                public static toObject(message: WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace DownloadGameMasterTemplatesResponse {

                enum Result {
                    UNSET = 0,
                    COMPLETE = 1,
                    MORE_RESULTS = 2,
                    BATCH_ID_NOT_LIVE = 3,
                    INVALID_BASIS_BATCH_ID = 4
                }

                interface IClientGameMasterTemplate {
                    template_id?: (string|null);
                    data?: (Uint8Array|null);
                }

                class ClientGameMasterTemplate implements IClientGameMasterTemplate {
                    constructor(properties?: WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse.IClientGameMasterTemplate);
                    public template_id: string;
                    public data: Uint8Array;
                    public static encode(message: WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse.IClientGameMasterTemplate, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse.ClientGameMasterTemplate;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse.ClientGameMasterTemplate;
                    public static toObject(message: WUProtos.Networking.Responses.DownloadGameMasterTemplatesResponse.ClientGameMasterTemplate, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IDownloadSettingsResponse {
                error?: (string|null);
                sha1?: (string|null);
                values?: (Uint8Array|null);
            }

            class DownloadSettingsResponse implements IDownloadSettingsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IDownloadSettingsResponse);
                public error: string;
                public sha1: string;
                public values: Uint8Array;
                public static encode(message: WUProtos.Networking.Responses.IDownloadSettingsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.DownloadSettingsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.DownloadSettingsResponse;
                public static toObject(message: WUProtos.Networking.Responses.DownloadSettingsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IEchoResponse {
                response?: (string|null);
            }

            class EchoResponse implements IEchoResponse {
                constructor(properties?: WUProtos.Networking.Responses.IEchoResponse);
                public response: string;
                public static encode(message: WUProtos.Networking.Responses.IEchoResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EchoResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EchoResponse;
                public static toObject(message: WUProtos.Networking.Responses.EchoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IEncounterFleeResponse {
                status?: (WUProtos.Networking.Responses.EncounterFleeResponse.Status|null);
            }

            class EncounterFleeResponse implements IEncounterFleeResponse {
                constructor(properties?: WUProtos.Networking.Responses.IEncounterFleeResponse);
                public status: WUProtos.Networking.Responses.EncounterFleeResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IEncounterFleeResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterFleeResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterFleeResponse;
                public static toObject(message: WUProtos.Networking.Responses.EncounterFleeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace EncounterFleeResponse {

                enum Status {
                    ENCOUNTER_FLEE_UNKNOWN = 0,
                    ENCOUNTER_FLEE_SUCCESS = 1,
                    ENCOUNTER_FLEE_NOT_IN_ENCOUNTER = 2,
                    ENCOUNTER_FLEE_CLIENT_STALE_DATA = 3,
                    ENCOUNTER_FLEE_ERROR = 4,
                    ENCOUNTER_FLEE_WC_PLAYER_NOT_IN_CHAMBER = 5,
                    ENCOUNTER_FLEE_WC_NOT_IN_PROGRESS = 6
                }
            }

            interface IEncounterGetStateResponse {
                status?: (WUProtos.Networking.Responses.EncounterGetStateResponse.Status|null);
                current_stage_index?: (number|null);
                stage?: (WUProtos.Networking.Responses.EncounterGetStateResponse.IEncounterGetStateStageResult|null);
            }

            class EncounterGetStateResponse implements IEncounterGetStateResponse {
                constructor(properties?: WUProtos.Networking.Responses.IEncounterGetStateResponse);
                public status: WUProtos.Networking.Responses.EncounterGetStateResponse.Status;
                public current_stage_index: number;
                public stage?: (WUProtos.Networking.Responses.EncounterGetStateResponse.IEncounterGetStateStageResult|null);
                public static encode(message: WUProtos.Networking.Responses.IEncounterGetStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterGetStateResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterGetStateResponse;
                public static toObject(message: WUProtos.Networking.Responses.EncounterGetStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace EncounterGetStateResponse {

                interface IEncounterGetStateStageResult {
                    swish?: (WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.IEncounterGetStateSwishStageResult|null);
                    combat?: (WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.IEncounterGetStateCombatStageResult|null);
                }

                class EncounterGetStateStageResult implements IEncounterGetStateStageResult {
                    constructor(properties?: WUProtos.Networking.Responses.EncounterGetStateResponse.IEncounterGetStateStageResult);
                    public swish?: (WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.IEncounterGetStateSwishStageResult|null);
                    public combat?: (WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.IEncounterGetStateCombatStageResult|null);
                    public Type?: ("swish"|"combat");
                    public static encode(message: WUProtos.Networking.Responses.EncounterGetStateResponse.IEncounterGetStateStageResult, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult;
                    public static toObject(message: WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace EncounterGetStateStageResult {

                    interface IEncounterGetStateSwishStageResult {
                    }

                    class EncounterGetStateSwishStageResult implements IEncounterGetStateSwishStageResult {
                        constructor(properties?: WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.IEncounterGetStateSwishStageResult);
                        public static encode(message: WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.IEncounterGetStateSwishStageResult, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.EncounterGetStateSwishStageResult;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.EncounterGetStateSwishStageResult;
                        public static toObject(message: WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.EncounterGetStateSwishStageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IEncounterGetStateCombatStageResult {
                        results?: (WUProtos.Data.Combat.ICombatResults|null);
                    }

                    class EncounterGetStateCombatStageResult implements IEncounterGetStateCombatStageResult {
                        constructor(properties?: WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.IEncounterGetStateCombatStageResult);
                        public results?: (WUProtos.Data.Combat.ICombatResults|null);
                        public static encode(message: WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.IEncounterGetStateCombatStageResult, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.EncounterGetStateCombatStageResult;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.EncounterGetStateCombatStageResult;
                        public static toObject(message: WUProtos.Networking.Responses.EncounterGetStateResponse.EncounterGetStateStageResult.EncounterGetStateCombatStageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }

                enum Status {
                    ENCOUNTER_GET_STATE_UNKNOWN = 0,
                    ENCOUNTER_GET_STATE_SUCCESS = 1,
                    ENCOUNTER_GET_STATE_NOT_IN_ENCOUNTER = 2,
                    ENCOUNTER_GET_STATE_CLIENT_STALE_DATA = 3,
                    ENCOUNTER_GET_STATE_ERROR = 4,
                    ENCOUNTER_GET_STATE_WC_PLAYER_NOT_IN_CHAMBER = 5,
                    ENCOUNTER_GET_STATE_WC_NOT_IN_PROGRESS = 6
                }
            }

            interface IEncounterInteractResponse {
                status?: (WUProtos.Networking.Responses.EncounterInteractResponse.IEncounterInteractStatus|null);
                stage?: (WUProtos.Networking.Responses.EncounterInteractResponse.IEncounterInteractStageResult|null);
                encounter_type?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterType|null);
            }

            class EncounterInteractResponse implements IEncounterInteractResponse {
                constructor(properties?: WUProtos.Networking.Responses.IEncounterInteractResponse);
                public status?: (WUProtos.Networking.Responses.EncounterInteractResponse.IEncounterInteractStatus|null);
                public stage?: (WUProtos.Networking.Responses.EncounterInteractResponse.IEncounterInteractStageResult|null);
                public encounter_type: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterType;
                public static encode(message: WUProtos.Networking.Responses.IEncounterInteractResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterInteractResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterInteractResponse;
                public static toObject(message: WUProtos.Networking.Responses.EncounterInteractResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace EncounterInteractResponse {

                enum EncounterType {
                    UNKNOWN = 0,
                    TRACE_SWISH = 1,
                    TRACE_COMBAT = 2,
                    WC_COMBAT = 3,
                    INGREDIENT = 4
                }

                interface IEncounterInteractStageResult {
                    swish?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.IEncounterInteractSwishStageResult|null);
                    combat?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.IEncounterInteractCombatStageResult|null);
                }

                class EncounterInteractStageResult implements IEncounterInteractStageResult {
                    constructor(properties?: WUProtos.Networking.Responses.EncounterInteractResponse.IEncounterInteractStageResult);
                    public swish?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.IEncounterInteractSwishStageResult|null);
                    public combat?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.IEncounterInteractCombatStageResult|null);
                    public Type?: ("swish"|"combat");
                    public static encode(message: WUProtos.Networking.Responses.EncounterInteractResponse.IEncounterInteractStageResult, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult;
                    public static toObject(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace EncounterInteractStageResult {

                    interface IEncounterInteractSwishStageResult {
                        status?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.EncounterInteractSwishStageResult.Status|null);
                        success_rate?: (number|null);
                        flee_rate?: (number|null);
                    }

                    class EncounterInteractSwishStageResult implements IEncounterInteractSwishStageResult {
                        constructor(properties?: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.IEncounterInteractSwishStageResult);
                        public status: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.EncounterInteractSwishStageResult.Status;
                        public success_rate: number;
                        public flee_rate: number;
                        public static encode(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.IEncounterInteractSwishStageResult, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.EncounterInteractSwishStageResult;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.EncounterInteractSwishStageResult;
                        public static toObject(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.EncounterInteractSwishStageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace EncounterInteractSwishStageResult {

                        enum Status {
                            SWISH_INTERACT_RESULT_UNKNOWN = 0,
                            SWISH_INTERACT_RESULT_SUCCESS = 1,
                            SWISH_INTERACT_RESULT_RESIST = 2,
                            SWISH_INTERACT_RESULT_FLED = 3,
                            SWISH_INTERACT_RESULT_OUT_OF_ENERGY = 4,
                            SWISH_INTERACT_RESULT_ERROR = 5
                        }
                    }

                    interface IEncounterInteractCombatStageResult {
                        status?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.EncounterInteractCombatStageResult.Status|null);
                        results?: (WUProtos.Data.Combat.ICombatResults|null);
                    }

                    class EncounterInteractCombatStageResult implements IEncounterInteractCombatStageResult {
                        constructor(properties?: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.IEncounterInteractCombatStageResult);
                        public status: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.EncounterInteractCombatStageResult.Status;
                        public results?: (WUProtos.Data.Combat.ICombatResults|null);
                        public static encode(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.IEncounterInteractCombatStageResult, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.EncounterInteractCombatStageResult;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.EncounterInteractCombatStageResult;
                        public static toObject(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStageResult.EncounterInteractCombatStageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace EncounterInteractCombatStageResult {

                        enum Status {
                            COMBAT_INTERACT_RESULT_UNKNOWN = 0,
                            COMBAT_INTERACT_RESULT_ENEMY_DEFEATED = 1,
                            COMBAT_INTERACT_RESULT_CONTINUE = 2,
                            COMBAT_INTERACT_RESULT_PLAYER_DEFEATED = 3,
                            COMBAT_INTERACT_RESULT_OUT_OF_ENERGY = 4,
                            COMBAT_INTERACT_RESULT_ERROR = 5
                        }
                    }
                }

                interface IEncounterInteractStatus {
                    "continue"?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IContinue|null);
                    next_stage?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.INextStage|null);
                    win?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IWin|null);
                    lose?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.ILose|null);
                    client_stale_data?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IClientStaleData|null);
                    error?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IError|null);
                }

                class EncounterInteractStatus implements IEncounterInteractStatus {
                    constructor(properties?: WUProtos.Networking.Responses.EncounterInteractResponse.IEncounterInteractStatus);
                    public continue?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IContinue|null);
                    public next_stage?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.INextStage|null);
                    public win?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IWin|null);
                    public lose?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.ILose|null);
                    public client_stale_data?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IClientStaleData|null);
                    public error?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IError|null);
                    public Status?: ("continue"|"next_stage"|"win"|"lose"|"client_stale_data"|"error");
                    public static encode(message: WUProtos.Networking.Responses.EncounterInteractResponse.IEncounterInteractStatus, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus;
                    public static toObject(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace EncounterInteractStatus {

                    interface IClientStaleData {
                        reason?: (WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.ClientStaleData.Reason|null);
                    }

                    class ClientStaleData implements IClientStaleData {
                        constructor(properties?: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IClientStaleData);
                        public reason: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.ClientStaleData.Reason;
                        public static encode(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IClientStaleData, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.ClientStaleData;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.ClientStaleData;
                        public static toObject(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.ClientStaleData, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    namespace ClientStaleData {

                        enum Reason {
                            ENCOUNTER_INTERACT_UNKNOWN = 0,
                            ENCOUNTER_INTERACT_NOT_IN_ENCOUNTER = 1,
                            ENCOUNTER_INTERACT_WC_PLAYER_NOT_IN_CHAMBER = 2,
                            ENCOUNTER_INTERACT_WC_NOT_IN_PROGRESS = 3,
                            ENCOUNTER_INTERACT_WC_ACTION_ON_COOLDOWN = 4
                        }
                    }

                    interface IContinue {
                    }

                    class Continue implements IContinue {
                        constructor(properties?: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IContinue);
                        public static encode(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IContinue, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Continue;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Continue;
                        public static toObject(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Continue, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IError {
                        description?: (string|null);
                    }

                    class Error implements IError {
                        constructor(properties?: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IError);
                        public description: string;
                        public static encode(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IError, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Error;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Error;
                        public static toObject(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Error, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface ILose {
                    }

                    class Lose implements ILose {
                        constructor(properties?: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.ILose);
                        public static encode(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.ILose, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Lose;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Lose;
                        public static toObject(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Lose, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface INextStage {
                        next_stage_index?: (number|null);
                    }

                    class NextStage implements INextStage {
                        constructor(properties?: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.INextStage);
                        public next_stage_index: number;
                        public static encode(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.INextStage, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.NextStage;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.NextStage;
                        public static toObject(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.NextStage, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IWin {
                        rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                        one_time_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                    }

                    class Win implements IWin {
                        constructor(properties?: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IWin);
                        public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                        public one_time_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                        public static encode(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.IWin, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Win;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Win;
                        public static toObject(message: WUProtos.Networking.Responses.EncounterInteractResponse.EncounterInteractStatus.Win, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            interface IEncounterSpellcatResponse {
                response?: (WUProtos.Networking.Responses.IEncounterStartResponse|null);
            }

            class EncounterSpellcatResponse implements IEncounterSpellcatResponse {
                constructor(properties?: WUProtos.Networking.Responses.IEncounterSpellcatResponse);
                public response?: (WUProtos.Networking.Responses.IEncounterStartResponse|null);
                public static encode(message: WUProtos.Networking.Responses.IEncounterSpellcatResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterSpellcatResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterSpellcatResponse;
                public static toObject(message: WUProtos.Networking.Responses.EncounterSpellcatResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IEncounterStartResponse {
                status?: (WUProtos.Networking.Responses.EncounterStartResponse.Status|null);
                encounter_id?: (Uint8Array|null);
                stages?: (WUProtos.Data.Encounter.IEncounterStartStageResult[]|null);
                first_stage_combat_results?: (WUProtos.Data.Combat.ICombatResults|null);
            }

            class EncounterStartResponse implements IEncounterStartResponse {
                constructor(properties?: WUProtos.Networking.Responses.IEncounterStartResponse);
                public status: WUProtos.Networking.Responses.EncounterStartResponse.Status;
                public encounter_id: Uint8Array;
                public stages: WUProtos.Data.Encounter.IEncounterStartStageResult[];
                public first_stage_combat_results?: (WUProtos.Data.Combat.ICombatResults|null);
                public static encode(message: WUProtos.Networking.Responses.IEncounterStartResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterStartResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterStartResponse;
                public static toObject(message: WUProtos.Networking.Responses.EncounterStartResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace EncounterStartResponse {

                enum Status {
                    ENCOUNTER_START_UNKNOWN = 0,
                    ENCOUNTER_START_SUCCESS = 1,
                    ENCOUNTER_START_NOT_AVAILABLE = 2,
                    ENCOUNTER_START_NOT_IN_RANGE = 3,
                    ENCOUNTER_START_ALREADY_HAPPENED = 4,
                    ENCOUNTER_START_ALREADY_STARTED = 5,
                    ENCOUNTER_START_CLIENT_STALE_DATA = 6,
                    ENCOUNTER_START_BAD_ENCOUNTER_TICKET = 7,
                    ENCOUNTER_START_WC_PLAYER_NOT_IN_CHAMBER = 8,
                    ENCOUNTER_START_WC_NOT_IN_PROGRESS = 9,
                    ENCOUNTER_START_WC_MOB_NOT_FOUND = 10,
                    ENCOUNTER_START_WC_MOB_IS_DEFEATED = 11,
                    ENCOUNTER_START_WC_PLAYER_ALREADY_ENGAGED = 12,
                    ENCOUNTER_START_WC_MOB_ALREADY_ENGAGED = 13,
                    ENCOUNTER_TUTORIAL_COMPLETED = 14,
                    ENCOUNTER_START_EXPIRY_TIME_REACHED = 15,
                    ENCOUNTER_START_WC_ACTION_ON_COOLDOWN = 16
                }
            }

            interface IEncounterUsePotionResponse {
                result?: (WUProtos.Networking.Responses.EncounterUsePotionResponse.EncounterUsePotionResult|null);
                maybe_updated_combat_results?: (WUProtos.Data.Combat.ICombatResults|null);
            }

            class EncounterUsePotionResponse implements IEncounterUsePotionResponse {
                constructor(properties?: WUProtos.Networking.Responses.IEncounterUsePotionResponse);
                public result: WUProtos.Networking.Responses.EncounterUsePotionResponse.EncounterUsePotionResult;
                public maybe_updated_combat_results?: (WUProtos.Data.Combat.ICombatResults|null);
                public static encode(message: WUProtos.Networking.Responses.IEncounterUsePotionResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.EncounterUsePotionResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.EncounterUsePotionResponse;
                public static toObject(message: WUProtos.Networking.Responses.EncounterUsePotionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace EncounterUsePotionResponse {

                enum EncounterUsePotionResult {
                    UNKNOWN_ENCOUNTER_USE_POTION_RESULT = 0,
                    POTION_USED = 1,
                    POTION_NOT_IN_VAULT = 2,
                    POTION_EFFECTS_ALREADY_ACTIVE = 3,
                    POTION_NOT_USABLE_FOR_ENCOUNTERS = 4,
                    INCORRECT_ENCOUNTER_ID = 5,
                    ENCOUNTER_USE_POTION_ERROR = 6,
                    ENCOUNTER_USE_POTION_WC_PLAYER_NOT_IN_CHAMBER = 7,
                    ENCOUNTER_USE_POTION_WC_NOT_IN_PROGRESS = 8,
                    ENCOUNTER_USE_POTION_WC_POTION_USED_BUT_PLAYER_DISENGAGED = 9
                }
            }

            interface IGetAllStorePacksResponse {
                store_pack?: (WUProtos.Data.IStorePack[]|null);
                status?: (WUProtos.Networking.Responses.GetAllStorePacksResponse.Status|null);
            }

            class GetAllStorePacksResponse implements IGetAllStorePacksResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetAllStorePacksResponse);
                public store_pack: WUProtos.Data.IStorePack[];
                public status: WUProtos.Networking.Responses.GetAllStorePacksResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IGetAllStorePacksResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetAllStorePacksResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetAllStorePacksResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetAllStorePacksResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetAllStorePacksResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    ERROR = 2
                }
            }

            interface IGetAvailableSkusAndBalancesResponse {
                available_sku?: (WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.IAvailableSku[]|null);
                balance?: (WUProtos.Data.ICurrencyQuantity[]|null);
                player_token?: (string|null);
            }

            class GetAvailableSkusAndBalancesResponse implements IGetAvailableSkusAndBalancesResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetAvailableSkusAndBalancesResponse);
                public available_sku: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.IAvailableSku[];
                public balance: WUProtos.Data.ICurrencyQuantity[];
                public player_token: string;
                public static encode(message: WUProtos.Networking.Responses.IGetAvailableSkusAndBalancesResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetAvailableSkusAndBalancesResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    FAILURE = 2
                }

                interface IAvailableSku {
                    id?: (string|null);
                    is_third_party_vendor_item?: (boolean|null);
                    price?: (WUProtos.Data.ICurrencyQuantity[]|null);
                    currency_granted?: (WUProtos.Data.ICurrencyQuantity[]|null);
                    game_item_content?: (WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.IGameItemContent[]|null);
                    presentation_data?: (WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.ISkuPresentation[]|null);
                    can_be_purchased?: (boolean|null);
                }

                class AvailableSku implements IAvailableSku {
                    constructor(properties?: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.IAvailableSku);
                    public id: string;
                    public is_third_party_vendor_item: boolean;
                    public price: WUProtos.Data.ICurrencyQuantity[];
                    public currency_granted: WUProtos.Data.ICurrencyQuantity[];
                    public game_item_content: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.IGameItemContent[];
                    public presentation_data: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.ISkuPresentation[];
                    public can_be_purchased: boolean;
                    public static encode(message: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.IAvailableSku, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku;
                    public static toObject(message: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace AvailableSku {

                    interface ISkuPresentation {
                        key?: (string|null);
                        value?: (string|null);
                    }

                    class SkuPresentation implements ISkuPresentation {
                        constructor(properties?: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.ISkuPresentation);
                        public key: string;
                        public value: string;
                        public static encode(message: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.ISkuPresentation, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.SkuPresentation;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.SkuPresentation;
                        public static toObject(message: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.SkuPresentation, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }

                    interface IGameItemContent {
                        type?: (string|null);
                        quantity?: (number|null);
                    }

                    class GameItemContent implements IGameItemContent {
                        constructor(properties?: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.IGameItemContent);
                        public type: string;
                        public quantity: number;
                        public static encode(message: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.IGameItemContent, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.GameItemContent;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.GameItemContent;
                        public static toObject(message: WUProtos.Networking.Responses.GetAvailableSkusAndBalancesResponse.AvailableSku.GameItemContent, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            interface IGetAvailableSubmissionsResponse {
                submissions_left?: (number|null);
                min_player_level?: (number|null);
            }

            class GetAvailableSubmissionsResponse implements IGetAvailableSubmissionsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetAvailableSubmissionsResponse);
                public submissions_left: number;
                public min_player_level: number;
                public static encode(message: WUProtos.Networking.Responses.IGetAvailableSubmissionsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetAvailableSubmissionsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetAvailableSubmissionsResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetAvailableSubmissionsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IGetChamberStateResponse {
                status?: (WUProtos.Enums.ChallengeRpcStatus|null);
                state?: (WUProtos.Data.IChamberState|null);
                player_snapshot?: (WUProtos.Data.Client.IClientPlayerSnapshot|null);
                next_call_timestamp?: (number|Long|null);
            }

            class GetChamberStateResponse implements IGetChamberStateResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetChamberStateResponse);
                public status: WUProtos.Enums.ChallengeRpcStatus;
                public state?: (WUProtos.Data.IChamberState|null);
                public player_snapshot?: (WUProtos.Data.Client.IClientPlayerSnapshot|null);
                public next_call_timestamp: (number|Long);
                public static encode(message: WUProtos.Networking.Responses.IGetChamberStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetChamberStateResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetChamberStateResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetChamberStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IGetCurrencyBalanceResponse {
                status?: (WUProtos.Networking.Responses.GetCurrencyBalanceResponse.Status|null);
                balance?: (WUProtos.Data.ICurrencyQuantity[]|null);
            }

            class GetCurrencyBalanceResponse implements IGetCurrencyBalanceResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetCurrencyBalanceResponse);
                public status: WUProtos.Networking.Responses.GetCurrencyBalanceResponse.Status;
                public balance: WUProtos.Data.ICurrencyQuantity[];
                public static encode(message: WUProtos.Networking.Responses.IGetCurrencyBalanceResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetCurrencyBalanceResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetCurrencyBalanceResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetCurrencyBalanceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetCurrencyBalanceResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    FAILURE = 2
                }
            }

            interface IGetFlooNetworkRegionScoresResponse {
                season_id?: (string|null);
                region_id?: (string|null);
                scores?: (WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.IFlooNetworkRegionScores|null);
                region_name?: (string|null);
            }

            class GetFlooNetworkRegionScoresResponse implements IGetFlooNetworkRegionScoresResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetFlooNetworkRegionScoresResponse);
                public season_id: string;
                public region_id: string;
                public scores?: (WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.IFlooNetworkRegionScores|null);
                public region_name: string;
                public static encode(message: WUProtos.Networking.Responses.IGetFlooNetworkRegionScoresResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetFlooNetworkRegionScoresResponse {

                interface IFlooNetworkRegionScores {
                    season_id?: (string|null);
                    region_id?: (string|null);
                    points_per_team?: ({ [k: string]: (number|Long) }|null);
                }

                class FlooNetworkRegionScores implements IFlooNetworkRegionScores {
                    constructor(properties?: WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.IFlooNetworkRegionScores);
                    public season_id: string;
                    public region_id: string;
                    public points_per_team: { [k: string]: (number|Long) };
                    public static encode(message: WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.IFlooNetworkRegionScores, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.FlooNetworkRegionScores;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.FlooNetworkRegionScores;
                    public static toObject(message: WUProtos.Networking.Responses.GetFlooNetworkRegionScoresResponse.FlooNetworkRegionScores, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IGetFlooNetworkSeasonScoresResponse {
                season_id?: (string|null);
                scores?: (WUProtos.Networking.Responses.GetFlooNetworkSeasonScoresResponse.IFlooNetworkSeasonScores|null);
            }

            class GetFlooNetworkSeasonScoresResponse implements IGetFlooNetworkSeasonScoresResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetFlooNetworkSeasonScoresResponse);
                public season_id: string;
                public scores?: (WUProtos.Networking.Responses.GetFlooNetworkSeasonScoresResponse.IFlooNetworkSeasonScores|null);
                public static encode(message: WUProtos.Networking.Responses.IGetFlooNetworkSeasonScoresResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetFlooNetworkSeasonScoresResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetFlooNetworkSeasonScoresResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetFlooNetworkSeasonScoresResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetFlooNetworkSeasonScoresResponse {

                interface IFlooNetworkSeasonScores {
                    season_id?: (string|null);
                    points_per_team?: ({ [k: string]: (number|Long) }|null);
                }

                class FlooNetworkSeasonScores implements IFlooNetworkSeasonScores {
                    constructor(properties?: WUProtos.Networking.Responses.GetFlooNetworkSeasonScoresResponse.IFlooNetworkSeasonScores);
                    public season_id: string;
                    public points_per_team: { [k: string]: (number|Long) };
                    public static encode(message: WUProtos.Networking.Responses.GetFlooNetworkSeasonScoresResponse.IFlooNetworkSeasonScores, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetFlooNetworkSeasonScoresResponse.FlooNetworkSeasonScores;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetFlooNetworkSeasonScoresResponse.FlooNetworkSeasonScores;
                    public static toObject(message: WUProtos.Networking.Responses.GetFlooNetworkSeasonScoresResponse.FlooNetworkSeasonScores, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IGetFortressDetailsResponse {
                fortress_template_gmt_id?: (string|null);
                chambers?: (WUProtos.Networking.Responses.GetFortressDetailsResponse.IChamberPreview[]|null);
                partner_id?: (string|null);
                poi_details?: (WUProtos.Data.IPoiDetails|null);
                poi_accessibility?: (WUProtos.Enums.PoiAccessibility|null);
                fortress_occupancy?: (WUProtos.Networking.Responses.GetFortressDetailsResponse.Occupancy|null);
                cooldown_data?: (WUProtos.Data.IFortressCooldownData|null);
            }

            class GetFortressDetailsResponse implements IGetFortressDetailsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetFortressDetailsResponse);
                public fortress_template_gmt_id: string;
                public chambers: WUProtos.Networking.Responses.GetFortressDetailsResponse.IChamberPreview[];
                public partner_id: string;
                public poi_details?: (WUProtos.Data.IPoiDetails|null);
                public poi_accessibility: WUProtos.Enums.PoiAccessibility;
                public fortress_occupancy: WUProtos.Networking.Responses.GetFortressDetailsResponse.Occupancy;
                public cooldown_data?: (WUProtos.Data.IFortressCooldownData|null);
                public static encode(message: WUProtos.Networking.Responses.IGetFortressDetailsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetFortressDetailsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetFortressDetailsResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetFortressDetailsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetFortressDetailsResponse {

                interface IChamberPreview {
                    chamber_template_gmt_id?: (string|null);
                    player_count?: (number|null);
                    start_time_ms?: (number|Long|null);
                    num_friends_inside?: (number|null);
                }

                class ChamberPreview implements IChamberPreview {
                    constructor(properties?: WUProtos.Networking.Responses.GetFortressDetailsResponse.IChamberPreview);
                    public chamber_template_gmt_id: string;
                    public player_count: number;
                    public start_time_ms: (number|Long);
                    public num_friends_inside: number;
                    public static encode(message: WUProtos.Networking.Responses.GetFortressDetailsResponse.IChamberPreview, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetFortressDetailsResponse.ChamberPreview;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetFortressDetailsResponse.ChamberPreview;
                    public static toObject(message: WUProtos.Networking.Responses.GetFortressDetailsResponse.ChamberPreview, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                enum Occupancy {
                    NOT_BUSY = 0,
                    BUSY = 1,
                    FULL = 2
                }
            }

            interface IGetFortressFlooNetworkStatisticsResponse {
                fortress_statistics?: (WUProtos.Data.IFlooNetworkFortressStatistics|null);
                temp_next_add_pts_timestamp_ms?: (number|Long|null);
            }

            class GetFortressFlooNetworkStatisticsResponse implements IGetFortressFlooNetworkStatisticsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetFortressFlooNetworkStatisticsResponse);
                public fortress_statistics?: (WUProtos.Data.IFlooNetworkFortressStatistics|null);
                public temp_next_add_pts_timestamp_ms: (number|Long);
                public static encode(message: WUProtos.Networking.Responses.IGetFortressFlooNetworkStatisticsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetFortressFlooNetworkStatisticsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetFortressFlooNetworkStatisticsResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetFortressFlooNetworkStatisticsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IGetGreenhouseDetailsResponse {
                partner_id?: (string|null);
                poi_details?: (WUProtos.Data.IPoiDetails|null);
                poi_accessibility?: (WUProtos.Enums.PoiAccessibility|null);
                normal_pot?: (WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.IClientPot[]|null);
                rental_pot?: (WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.IClientPot[]|null);
            }

            class GetGreenhouseDetailsResponse implements IGetGreenhouseDetailsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetGreenhouseDetailsResponse);
                public partner_id: string;
                public poi_details?: (WUProtos.Data.IPoiDetails|null);
                public poi_accessibility: WUProtos.Enums.PoiAccessibility;
                public normal_pot: WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.IClientPot[];
                public rental_pot: WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.IClientPot[];
                public static encode(message: WUProtos.Networking.Responses.IGetGreenhouseDetailsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetGreenhouseDetailsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetGreenhouseDetailsResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetGreenhouseDetailsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetGreenhouseDetailsResponse {

                interface IClientPot {
                    id?: (string|null);
                    recipe_gmt_id?: (string|null);
                    planter?: (string|null);
                    contributor?: (string[]|null);
                    growing_completion_time_ms?: (number|Long|null);
                    spell_count?: (number|null);
                    rental_details?: (WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.ClientPot.IRentalDetails|null);
                }

                class ClientPot implements IClientPot {
                    constructor(properties?: WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.IClientPot);
                    public id: string;
                    public recipe_gmt_id: string;
                    public planter: string;
                    public contributor: string[];
                    public growing_completion_time_ms: (number|Long);
                    public spell_count: number;
                    public rental_details?: (WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.ClientPot.IRentalDetails|null);
                    public static encode(message: WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.IClientPot, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.ClientPot;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.ClientPot;
                    public static toObject(message: WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.ClientPot, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace ClientPot {

                    interface IRentalDetails {
                        renter?: (string|null);
                        rental_start_time_ms?: (number|Long|null);
                        rental_expiration_time_ms?: (number|Long|null);
                    }

                    class RentalDetails implements IRentalDetails {
                        constructor(properties?: WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.ClientPot.IRentalDetails);
                        public renter: string;
                        public rental_start_time_ms: (number|Long);
                        public rental_expiration_time_ms: (number|Long);
                        public static encode(message: WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.ClientPot.IRentalDetails, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.ClientPot.RentalDetails;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.ClientPot.RentalDetails;
                        public static toObject(message: WUProtos.Networking.Responses.GetGreenhouseDetailsResponse.ClientPot.RentalDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            interface IInventoryDelta {
                original_timestamp?: (number|Long|null);
                new_timestamp?: (number|Long|null);
                inventory_item?: (WUProtos.Inventory.IInventoryItem[]|null);
            }

            class InventoryDelta implements IInventoryDelta {
                constructor(properties?: WUProtos.Networking.Responses.IInventoryDelta);
                public original_timestamp: (number|Long);
                public new_timestamp: (number|Long);
                public inventory_item: WUProtos.Inventory.IInventoryItem[];
                public static encode(message: WUProtos.Networking.Responses.IInventoryDelta, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.InventoryDelta;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.InventoryDelta;
                public static toObject(message: WUProtos.Networking.Responses.InventoryDelta, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IGetLexiconInventoryResponse {
                success?: (boolean|null);
                inventory_delta?: (WUProtos.Networking.Responses.IInventoryDelta|null);
                volatile_vault_deltas?: ({ [k: string]: (number|Long) }|null);
            }

            class GetLexiconInventoryResponse implements IGetLexiconInventoryResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetLexiconInventoryResponse);
                public success: boolean;
                public inventory_delta?: (WUProtos.Networking.Responses.IInventoryDelta|null);
                public volatile_vault_deltas: { [k: string]: (number|Long) };
                public static encode(message: WUProtos.Networking.Responses.IGetLexiconInventoryResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetLexiconInventoryResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetLexiconInventoryResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetLexiconInventoryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IGetOutpostDetailsResponse {
                image_urls?: (string[]|null);
                current_menu?: (WUProtos.Networking.Responses.GetOutpostDetailsResponse.IOutpostMenu|null);
                partner_id?: (string|null);
                poi_details?: (WUProtos.Data.IPoiDetails|null);
                poi_accessibility?: (WUProtos.Enums.PoiAccessibility|null);
            }

            class GetOutpostDetailsResponse implements IGetOutpostDetailsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetOutpostDetailsResponse);
                public image_urls: string[];
                public current_menu?: (WUProtos.Networking.Responses.GetOutpostDetailsResponse.IOutpostMenu|null);
                public partner_id: string;
                public poi_details?: (WUProtos.Data.IPoiDetails|null);
                public poi_accessibility: WUProtos.Enums.PoiAccessibility;
                public static encode(message: WUProtos.Networking.Responses.IGetOutpostDetailsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetOutpostDetailsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetOutpostDetailsResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetOutpostDetailsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetOutpostDetailsResponse {

                interface IOutpostMenu {
                    menu_options?: ({ [k: string]: WUProtos.Data.Loot.ILootReward }|null);
                    menu_timestamp?: (number|Long|null);
                }

                class OutpostMenu implements IOutpostMenu {
                    constructor(properties?: WUProtos.Networking.Responses.GetOutpostDetailsResponse.IOutpostMenu);
                    public menu_options: { [k: string]: WUProtos.Data.Loot.ILootReward };
                    public menu_timestamp: (number|Long);
                    public static encode(message: WUProtos.Networking.Responses.GetOutpostDetailsResponse.IOutpostMenu, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetOutpostDetailsResponse.OutpostMenu;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetOutpostDetailsResponse.OutpostMenu;
                    public static toObject(message: WUProtos.Networking.Responses.GetOutpostDetailsResponse.OutpostMenu, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IGetPlayerFeatureListResponse {
                enabled_feature_list?: (string[]|null);
                disabled_feature_list?: (WUProtos.Networking.Responses.GetPlayerFeatureListResponse.IDisabledFeatureConfig[]|null);
            }

            class GetPlayerFeatureListResponse implements IGetPlayerFeatureListResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetPlayerFeatureListResponse);
                public enabled_feature_list: string[];
                public disabled_feature_list: WUProtos.Networking.Responses.GetPlayerFeatureListResponse.IDisabledFeatureConfig[];
                public static encode(message: WUProtos.Networking.Responses.IGetPlayerFeatureListResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetPlayerFeatureListResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetPlayerFeatureListResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetPlayerFeatureListResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetPlayerFeatureListResponse {

                interface IDisabledFeatureConfig {
                    id?: (string|null);
                    failed_reqs?: (WUProtos.Data.IRequirements|null);
                }

                class DisabledFeatureConfig implements IDisabledFeatureConfig {
                    constructor(properties?: WUProtos.Networking.Responses.GetPlayerFeatureListResponse.IDisabledFeatureConfig);
                    public id: string;
                    public failed_reqs?: (WUProtos.Data.IRequirements|null);
                    public static encode(message: WUProtos.Networking.Responses.GetPlayerFeatureListResponse.IDisabledFeatureConfig, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetPlayerFeatureListResponse.DisabledFeatureConfig;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetPlayerFeatureListResponse.DisabledFeatureConfig;
                    public static toObject(message: WUProtos.Networking.Responses.GetPlayerFeatureListResponse.DisabledFeatureConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IGetPlayerStateResponse {
                player?: (WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayer|null);
            }

            class GetPlayerStateResponse implements IGetPlayerStateResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetPlayerStateResponse);
                public player?: (WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayer|null);
                public static encode(message: WUProtos.Networking.Responses.IGetPlayerStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetPlayerStateResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetPlayerStateResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetPlayerStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetPlayerStateResponse {

                interface IClientPlayer {
                    creation_time_ms?: (number|Long|null);
                    map?: (WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayerMapState|null);
                    challenge?: (WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayerChallengeState|null);
                }

                class ClientPlayer implements IClientPlayer {
                    constructor(properties?: WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayer);
                    public creation_time_ms: (number|Long);
                    public map?: (WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayerMapState|null);
                    public challenge?: (WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayerChallengeState|null);
                    public State?: ("map"|"challenge");
                    public static encode(message: WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayer, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetPlayerStateResponse.ClientPlayer;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetPlayerStateResponse.ClientPlayer;
                    public static toObject(message: WUProtos.Networking.Responses.GetPlayerStateResponse.ClientPlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientPlayerMapState {
                }

                class ClientPlayerMapState implements IClientPlayerMapState {
                    constructor(properties?: WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayerMapState);
                    public static encode(message: WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayerMapState, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetPlayerStateResponse.ClientPlayerMapState;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetPlayerStateResponse.ClientPlayerMapState;
                    public static toObject(message: WUProtos.Networking.Responses.GetPlayerStateResponse.ClientPlayerMapState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                interface IClientPlayerChallengeState {
                    fortress_id?: (string|null);
                    fortress_poi?: (WUProtos.Data.Client.IClientMapPoi|null);
                }

                class ClientPlayerChallengeState implements IClientPlayerChallengeState {
                    constructor(properties?: WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayerChallengeState);
                    public fortress_id: string;
                    public fortress_poi?: (WUProtos.Data.Client.IClientMapPoi|null);
                    public static encode(message: WUProtos.Networking.Responses.GetPlayerStateResponse.IClientPlayerChallengeState, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetPlayerStateResponse.ClientPlayerChallengeState;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetPlayerStateResponse.ClientPlayerChallengeState;
                    public static toObject(message: WUProtos.Networking.Responses.GetPlayerStateResponse.ClientPlayerChallengeState, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IGetServerTimeResponse {
                server_time_ms?: (number|Long|null);
                time_until_daily_rollover?: (number|Long|null);
            }

            class GetServerTimeResponse implements IGetServerTimeResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetServerTimeResponse);
                public server_time_ms: (number|Long);
                public time_until_daily_rollover: (number|Long);
                public static encode(message: WUProtos.Networking.Responses.IGetServerTimeResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetServerTimeResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetServerTimeResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetServerTimeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IGetSignedUrlForPhotoUploadResponse {
                status?: (WUProtos.Networking.Responses.GetSignedUrlForPhotoUploadResponse.Status|null);
                signed_url?: (string|null);
                supporting_image_signed_url?: (string|null);
            }

            class GetSignedUrlForPhotoUploadResponse implements IGetSignedUrlForPhotoUploadResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetSignedUrlForPhotoUploadResponse);
                public status: WUProtos.Networking.Responses.GetSignedUrlForPhotoUploadResponse.Status;
                public signed_url: string;
                public supporting_image_signed_url: string;
                public static encode(message: WUProtos.Networking.Responses.IGetSignedUrlForPhotoUploadResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetSignedUrlForPhotoUploadResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetSignedUrlForPhotoUploadResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetSignedUrlForPhotoUploadResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetSignedUrlForPhotoUploadResponse {

                enum Status {
                    UNSET = 0,
                    FAILURES = 1,
                    SUCCESS = 2
                }
            }

            interface IGetStorePackInfoResponse {
                store_pack?: (WUProtos.Data.IStorePack|null);
                status?: (WUProtos.Networking.Responses.GetStorePackInfoResponse.Status|null);
            }

            class GetStorePackInfoResponse implements IGetStorePackInfoResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGetStorePackInfoResponse);
                public store_pack?: (WUProtos.Data.IStorePack|null);
                public status: WUProtos.Networking.Responses.GetStorePackInfoResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IGetStorePackInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GetStorePackInfoResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GetStorePackInfoResponse;
                public static toObject(message: WUProtos.Networking.Responses.GetStorePackInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GetStorePackInfoResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    ERROR = 2
                }
            }

            interface IGiveAwayGreenhouseResponse {
                status?: (WUProtos.Networking.Responses.GiveAwayGreenhouseResponse.Status|null);
                loot?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                next_loot_time?: (number|Long|null);
            }

            class GiveAwayGreenhouseResponse implements IGiveAwayGreenhouseResponse {
                constructor(properties?: WUProtos.Networking.Responses.IGiveAwayGreenhouseResponse);
                public status: WUProtos.Networking.Responses.GiveAwayGreenhouseResponse.Status;
                public loot?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public next_loot_time: (number|Long);
                public static encode(message: WUProtos.Networking.Responses.IGiveAwayGreenhouseResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.GiveAwayGreenhouseResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.GiveAwayGreenhouseResponse;
                public static toObject(message: WUProtos.Networking.Responses.GiveAwayGreenhouseResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace GiveAwayGreenhouseResponse {

                enum Status {
                    UNKNOWN = 0,
                    ERROR = 1,
                    TOO_FAR = 2,
                    ON_COOLDOWN = 3,
                    SUCCESS = 4,
                    POI_CLOSED = 5
                }
            }

            interface IInstantFinishBrewingResponse {
                result?: (WUProtos.Networking.Responses.InstantFinishBrewingResponse.InstantFinishBrewingResult|null);
            }

            class InstantFinishBrewingResponse implements IInstantFinishBrewingResponse {
                constructor(properties?: WUProtos.Networking.Responses.IInstantFinishBrewingResponse);
                public result: WUProtos.Networking.Responses.InstantFinishBrewingResponse.InstantFinishBrewingResult;
                public static encode(message: WUProtos.Networking.Responses.IInstantFinishBrewingResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.InstantFinishBrewingResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.InstantFinishBrewingResponse;
                public static toObject(message: WUProtos.Networking.Responses.InstantFinishBrewingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace InstantFinishBrewingResponse {

                enum InstantFinishBrewingResult {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    INSUFFICIENT_RESOURCES = 2,
                    EMPTY_CAULDRON_SELECTED = 3
                }
            }

            interface IJoinChamberResponse {
                status?: (WUProtos.Enums.ChallengeRpcStatus|null);
                state?: (WUProtos.Data.IChamberState|null);
                player_snapshot?: (WUProtos.Data.Client.IClientPlayerSnapshot|null);
                partner_id?: (string|null);
                cooldown_data?: (WUProtos.Data.IFortressCooldownData|null);
            }

            class JoinChamberResponse implements IJoinChamberResponse {
                constructor(properties?: WUProtos.Networking.Responses.IJoinChamberResponse);
                public status: WUProtos.Enums.ChallengeRpcStatus;
                public state?: (WUProtos.Data.IChamberState|null);
                public player_snapshot?: (WUProtos.Data.Client.IClientPlayerSnapshot|null);
                public partner_id: string;
                public cooldown_data?: (WUProtos.Data.IFortressCooldownData|null);
                public static encode(message: WUProtos.Networking.Responses.IJoinChamberResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.JoinChamberResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.JoinChamberResponse;
                public static toObject(message: WUProtos.Networking.Responses.JoinChamberResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ILeaveChamberResponse {
                status?: (WUProtos.Enums.ChallengeRpcStatus|null);
                partner_id?: (string|null);
                fortress_id?: (string|null);
            }

            class LeaveChamberResponse implements ILeaveChamberResponse {
                constructor(properties?: WUProtos.Networking.Responses.ILeaveChamberResponse);
                public status: WUProtos.Enums.ChallengeRpcStatus;
                public partner_id: string;
                public fortress_id: string;
                public static encode(message: WUProtos.Networking.Responses.ILeaveChamberResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.LeaveChamberResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.LeaveChamberResponse;
                public static toObject(message: WUProtos.Networking.Responses.LeaveChamberResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ILevelUpCollectionFamilyResponse {
                did_level_up?: (boolean|null);
                family_level?: (number|null);
            }

            class LevelUpCollectionFamilyResponse implements ILevelUpCollectionFamilyResponse {
                constructor(properties?: WUProtos.Networking.Responses.ILevelUpCollectionFamilyResponse);
                public did_level_up: boolean;
                public family_level: number;
                public static encode(message: WUProtos.Networking.Responses.ILevelUpCollectionFamilyResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.LevelUpCollectionFamilyResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.LevelUpCollectionFamilyResponse;
                public static toObject(message: WUProtos.Networking.Responses.LevelUpCollectionFamilyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IListLoginResponse {
                success?: (boolean|null);
                login_detail?: (WUProtos.Data.ILoginDetail[]|null);
            }

            class ListLoginResponse implements IListLoginResponse {
                constructor(properties?: WUProtos.Networking.Responses.IListLoginResponse);
                public success: boolean;
                public login_detail: WUProtos.Data.ILoginDetail[];
                public static encode(message: WUProtos.Networking.Responses.IListLoginResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ListLoginResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ListLoginResponse;
                public static toObject(message: WUProtos.Networking.Responses.ListLoginResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ILootOutpostResponse {
                status?: (WUProtos.Networking.Responses.LootOutpostResponse.Status|null);
                awarded_food_key?: (number|Long|null);
                next_loot_time?: (number|Long|null);
                loot?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                partner_id?: (string|null);
            }

            class LootOutpostResponse implements ILootOutpostResponse {
                constructor(properties?: WUProtos.Networking.Responses.ILootOutpostResponse);
                public status: WUProtos.Networking.Responses.LootOutpostResponse.Status;
                public awarded_food_key: (number|Long);
                public next_loot_time: (number|Long);
                public loot?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public partner_id: string;
                public static encode(message: WUProtos.Networking.Responses.ILootOutpostResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.LootOutpostResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.LootOutpostResponse;
                public static toObject(message: WUProtos.Networking.Responses.LootOutpostResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace LootOutpostResponse {

                enum Status {
                    UNKNOWN = 0,
                    ERROR = 1,
                    TOO_FAR = 2,
                    ON_COOLDOWN = 3,
                    SUCCESS = 4,
                    POI_CLOSED = 5
                }
            }

            interface IMapAbilityStartResponse {
                status?: (WUProtos.Networking.Responses.MapAbilityStartResponse.Status|null);
            }

            class MapAbilityStartResponse implements IMapAbilityStartResponse {
                constructor(properties?: WUProtos.Networking.Responses.IMapAbilityStartResponse);
                public status: WUProtos.Networking.Responses.MapAbilityStartResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IMapAbilityStartResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.MapAbilityStartResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.MapAbilityStartResponse;
                public static toObject(message: WUProtos.Networking.Responses.MapAbilityStartResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace MapAbilityStartResponse {

                enum Status {
                    NONE = 0,
                    SUCCESS = 1,
                    PLAYER_DOES_NOT_HAVE_ABILITY = 2,
                    ABILITY_UNAVAILABLE = 3,
                    TARGET_UNAVAILABLE = 4,
                    CHALLENGE_OVER = 5,
                    ERROR = 6,
                    CHAMBER_NOT_IN_PROGRESS = 7,
                    PLAYER_NOT_IN_CHAMBER = 8,
                    NOT_ENOUGH_FOCUS = 9,
                    TARGET_INVALID = 10,
                    STRONGER_BUFF_EXISTS = 11
                }
            }

            interface INotifyPrivacyPolicyResponse {
                status?: (WUProtos.Networking.Responses.NotifyPrivacyPolicyResponse.Status|null);
            }

            class NotifyPrivacyPolicyResponse implements INotifyPrivacyPolicyResponse {
                constructor(properties?: WUProtos.Networking.Responses.INotifyPrivacyPolicyResponse);
                public status: WUProtos.Networking.Responses.NotifyPrivacyPolicyResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.INotifyPrivacyPolicyResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.NotifyPrivacyPolicyResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.NotifyPrivacyPolicyResponse;
                public static toObject(message: WUProtos.Networking.Responses.NotifyPrivacyPolicyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace NotifyPrivacyPolicyResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    COMPLETED = 2
                }
            }

            interface IOpenContainerResponse {
                family_level?: (number|null);
                chest_reward?: (WUProtos.Data.Loot.LootReward.ILootCollection[]|null);
                family_xp?: (number|null);
                current_chests_opened?: (number|null);
            }

            class OpenContainerResponse implements IOpenContainerResponse {
                constructor(properties?: WUProtos.Networking.Responses.IOpenContainerResponse);
                public family_level: number;
                public chest_reward: WUProtos.Data.Loot.LootReward.ILootCollection[];
                public family_xp: number;
                public current_chests_opened: number;
                public static encode(message: WUProtos.Networking.Responses.IOpenContainerResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.OpenContainerResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.OpenContainerResponse;
                public static toObject(message: WUProtos.Networking.Responses.OpenContainerResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IOptIntoMarketingEmailsResponse {
                status?: (WUProtos.Networking.Responses.OptIntoMarketingEmailsResponse.Status|null);
            }

            class OptIntoMarketingEmailsResponse implements IOptIntoMarketingEmailsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IOptIntoMarketingEmailsResponse);
                public status: WUProtos.Networking.Responses.OptIntoMarketingEmailsResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IOptIntoMarketingEmailsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.OptIntoMarketingEmailsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.OptIntoMarketingEmailsResponse;
                public static toObject(message: WUProtos.Networking.Responses.OptIntoMarketingEmailsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace OptIntoMarketingEmailsResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    FAILED = 2
                }
            }

            interface IOptOutPushNotificationCategoryResponse {
                categories?: (string[]|null);
            }

            class OptOutPushNotificationCategoryResponse implements IOptOutPushNotificationCategoryResponse {
                constructor(properties?: WUProtos.Networking.Responses.IOptOutPushNotificationCategoryResponse);
                public categories: string[];
                public static encode(message: WUProtos.Networking.Responses.IOptOutPushNotificationCategoryResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.OptOutPushNotificationCategoryResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.OptOutPushNotificationCategoryResponse;
                public static toObject(message: WUProtos.Networking.Responses.OptOutPushNotificationCategoryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPingResponse {
                user_info?: (string|null);
                server_info?: (string|null);
                random_response_bytes?: (string|null);
            }

            class PingResponse implements IPingResponse {
                constructor(properties?: WUProtos.Networking.Responses.IPingResponse);
                public user_info: string;
                public server_info: string;
                public random_response_bytes: string;
                public static encode(message: WUProtos.Networking.Responses.IPingResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.PingResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.PingResponse;
                public static toObject(message: WUProtos.Networking.Responses.PingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlaceItemResponse {
                status?: (WUProtos.Networking.Responses.PlaceItemResponse.Status|null);
                collection_item_id?: (string|null);
                completion_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection[]|null);
            }

            class PlaceItemResponse implements IPlaceItemResponse {
                constructor(properties?: WUProtos.Networking.Responses.IPlaceItemResponse);
                public status: WUProtos.Networking.Responses.PlaceItemResponse.Status;
                public collection_item_id: string;
                public completion_rewards: WUProtos.Data.Loot.LootReward.ILootCollection[];
                public static encode(message: WUProtos.Networking.Responses.IPlaceItemResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.PlaceItemResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.PlaceItemResponse;
                public static toObject(message: WUProtos.Networking.Responses.PlaceItemResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace PlaceItemResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    NOT_READY = 2
                }
            }

            interface IPlantIngredientResponse {
                status?: (WUProtos.Networking.Responses.PlantIngredientResponse.Status|null);
            }

            class PlantIngredientResponse implements IPlantIngredientResponse {
                constructor(properties?: WUProtos.Networking.Responses.IPlantIngredientResponse);
                public status: WUProtos.Networking.Responses.PlantIngredientResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IPlantIngredientResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.PlantIngredientResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.PlantIngredientResponse;
                public static toObject(message: WUProtos.Networking.Responses.PlantIngredientResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace PlantIngredientResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    TOO_FAR = 2,
                    POI_CLOSED = 3,
                    FEATURE_DISABLED = 4,
                    INVALID_POT = 5,
                    RECIPE_DISABLED = 6,
                    RECIPE_LOCKED = 7,
                    INSUFFICIENT_RESOURCES = 8,
                    GROWING_IN_PROGRESS = 9,
                    RENTAL_EXPIRED = 10,
                    RENTER_HAS_PRIORITY = 11
                }
            }

            interface IPlayerHelpInfoResponse {
                player_id?: (string|null);
            }

            class PlayerHelpInfoResponse implements IPlayerHelpInfoResponse {
                constructor(properties?: WUProtos.Networking.Responses.IPlayerHelpInfoResponse);
                public player_id: string;
                public static encode(message: WUProtos.Networking.Responses.IPlayerHelpInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.PlayerHelpInfoResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.PlayerHelpInfoResponse;
                public static toObject(message: WUProtos.Networking.Responses.PlayerHelpInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlayerLevelUpResponse {
                did_level_up?: (boolean|null);
                new_level?: (number|null);
                granted_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class PlayerLevelUpResponse implements IPlayerLevelUpResponse {
                constructor(properties?: WUProtos.Networking.Responses.IPlayerLevelUpResponse);
                public did_level_up: boolean;
                public new_level: number;
                public granted_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Networking.Responses.IPlayerLevelUpResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.PlayerLevelUpResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.PlayerLevelUpResponse;
                public static toObject(message: WUProtos.Networking.Responses.PlayerLevelUpResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPlayerSelectTeamResponse {
                result?: (WUProtos.Networking.Responses.PlayerSelectTeamResponse.Result|null);
            }

            class PlayerSelectTeamResponse implements IPlayerSelectTeamResponse {
                constructor(properties?: WUProtos.Networking.Responses.IPlayerSelectTeamResponse);
                public result: WUProtos.Networking.Responses.PlayerSelectTeamResponse.Result;
                public static encode(message: WUProtos.Networking.Responses.IPlayerSelectTeamResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.PlayerSelectTeamResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.PlayerSelectTeamResponse;
                public static toObject(message: WUProtos.Networking.Responses.PlayerSelectTeamResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace PlayerSelectTeamResponse {

                enum Result {
                    UNKNOWN = 0,
                    TEAM_SET = 1,
                    TEAM_ID_INVALID = 2,
                    PLAYER_ALREADY_HAS_TEAM = 3
                }
            }

            interface IPrestigePageResponse {
                status?: (WUProtos.Networking.Responses.PrestigePageResponse.Status|null);
                collection_page_id?: (string|null);
            }

            class PrestigePageResponse implements IPrestigePageResponse {
                constructor(properties?: WUProtos.Networking.Responses.IPrestigePageResponse);
                public status: WUProtos.Networking.Responses.PrestigePageResponse.Status;
                public collection_page_id: string;
                public static encode(message: WUProtos.Networking.Responses.IPrestigePageResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.PrestigePageResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.PrestigePageResponse;
                public static toObject(message: WUProtos.Networking.Responses.PrestigePageResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace PrestigePageResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    NOT_READY = 2
                }
            }

            interface IProfanityFilterResponse {
                status?: (WUProtos.Networking.Responses.ProfanityFilterResponse.Status[]|null);
            }

            class ProfanityFilterResponse implements IProfanityFilterResponse {
                constructor(properties?: WUProtos.Networking.Responses.IProfanityFilterResponse);
                public status: WUProtos.Networking.Responses.ProfanityFilterResponse.Status[];
                public static encode(message: WUProtos.Networking.Responses.IProfanityFilterResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ProfanityFilterResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ProfanityFilterResponse;
                public static toObject(message: WUProtos.Networking.Responses.ProfanityFilterResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ProfanityFilterResponse {

                enum Status {
                    UNSET = 0,
                    UNKNOWN = 1,
                    ALLOW = 2,
                    REJECT = 3
                }
            }

            interface IProfessionNodeLevelUnlockResponse {
                status?: (WUProtos.Networking.Responses.ProfessionNodeLevelUnlockResponse.Status|null);
            }

            class ProfessionNodeLevelUnlockResponse implements IProfessionNodeLevelUnlockResponse {
                constructor(properties?: WUProtos.Networking.Responses.IProfessionNodeLevelUnlockResponse);
                public status: WUProtos.Networking.Responses.ProfessionNodeLevelUnlockResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IProfessionNodeLevelUnlockResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ProfessionNodeLevelUnlockResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ProfessionNodeLevelUnlockResponse;
                public static toObject(message: WUProtos.Networking.Responses.ProfessionNodeLevelUnlockResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ProfessionNodeLevelUnlockResponse {

                enum Status {
                    NONE = 0,
                    SUCCESS = 1,
                    PROFESSION_NODE_GMT_ID_INVALID = 2,
                    DOES_NOT_MEET_REQUIREMENTS = 3,
                    INVALID_PROFESSION_NODE_FOR_PROFESSION = 4,
                    PROFESSION_LEVEL_IS_COMPLETED = 5,
                    PROFESSION_LEVEL_INVALID = 6,
                    INSUFFICIENT_RESOURCES = 7,
                    ERROR = 8,
                    ERROR_ADDING_BUFFS = 9,
                    ERROR_PLAYER_IN_CHALLENGE = 10,
                    PROFESSION_RANK_GMT_ID_INVALID = 11
                }
            }

            interface IProfessionSelectResponse {
                status?: (WUProtos.Networking.Responses.ProfessionSelectResponse.Status|null);
            }

            class ProfessionSelectResponse implements IProfessionSelectResponse {
                constructor(properties?: WUProtos.Networking.Responses.IProfessionSelectResponse);
                public status: WUProtos.Networking.Responses.ProfessionSelectResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IProfessionSelectResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ProfessionSelectResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ProfessionSelectResponse;
                public static toObject(message: WUProtos.Networking.Responses.ProfessionSelectResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ProfessionSelectResponse {

                enum Status {
                    NONE = 0,
                    SUCCESS = 1,
                    PROFESSION_GMT_ID_INVALID = 2,
                    PROFESSION_UNAVAILABLE = 3,
                    ERROR = 4,
                    PROFESSION_ALREADY_ACTIVE = 5,
                    ERROR_ADDING_BUFFS = 6,
                    ERROR_PLAYER_IN_CHALLENGE = 7
                }
            }

            interface IProxyResponse {
                status?: (WUProtos.Networking.Responses.ProxyResponse.Status|null);
                assigned_host?: (string|null);
                payload?: (Uint8Array|null);
            }

            class ProxyResponse implements IProxyResponse {
                constructor(properties?: WUProtos.Networking.Responses.IProxyResponse);
                public status: WUProtos.Networking.Responses.ProxyResponse.Status;
                public assigned_host: string;
                public payload: Uint8Array;
                public static encode(message: WUProtos.Networking.Responses.IProxyResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ProxyResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ProxyResponse;
                public static toObject(message: WUProtos.Networking.Responses.ProxyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ProxyResponse {

                enum Status {
                    UNSET = 0,
                    COMPLETED = 1,
                    COMPLETED_AND_REASSIGNED = 2,
                    ACTION_NOT_FOUND = 3,
                    ASSIGNMENT_ERROR = 4,
                    PROXY_UNAUTHORIZED_ERROR = 5,
                    INTERNAL_ERROR = 6,
                    BAD_REQUEST = 7,
                    ACCESS_DENIED = 8,
                    TIMEOUT_ERROR = 9
                }
            }

            interface IPurchaseSkuResponse {
                status?: (WUProtos.Networking.Responses.PurchaseSkuResponse.Status|null);
            }

            class PurchaseSkuResponse implements IPurchaseSkuResponse {
                constructor(properties?: WUProtos.Networking.Responses.IPurchaseSkuResponse);
                public status: WUProtos.Networking.Responses.PurchaseSkuResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IPurchaseSkuResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.PurchaseSkuResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.PurchaseSkuResponse;
                public static toObject(message: WUProtos.Networking.Responses.PurchaseSkuResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace PurchaseSkuResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    FAILURE = 2,
                    BALANCE_TOO_LOW = 3,
                    SKU_NOT_AVAILABLE = 4,
                    OVER_INVENTORY_LIMIT = 5
                }
            }

            interface IPushAnalyticsEventsResponse {
            }

            class PushAnalyticsEventsResponse implements IPushAnalyticsEventsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IPushAnalyticsEventsResponse);
                public static encode(message: WUProtos.Networking.Responses.IPushAnalyticsEventsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.PushAnalyticsEventsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.PushAnalyticsEventsResponse;
                public static toObject(message: WUProtos.Networking.Responses.PushAnalyticsEventsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IPushNotificationRegistryResponse {
                result?: (WUProtos.Networking.Responses.PushNotificationRegistryResponse.Result|null);
            }

            class PushNotificationRegistryResponse implements IPushNotificationRegistryResponse {
                constructor(properties?: WUProtos.Networking.Responses.IPushNotificationRegistryResponse);
                public result: WUProtos.Networking.Responses.PushNotificationRegistryResponse.Result;
                public static encode(message: WUProtos.Networking.Responses.IPushNotificationRegistryResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.PushNotificationRegistryResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.PushNotificationRegistryResponse;
                public static toObject(message: WUProtos.Networking.Responses.PushNotificationRegistryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace PushNotificationRegistryResponse {

                enum Result {
                    UNSET = 0,
                    SUCCESS = 1,
                    NO_CHANGE = 2
                }
            }

            interface IPushPerformanceMetricsResponse {
            }

            class PushPerformanceMetricsResponse implements IPushPerformanceMetricsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IPushPerformanceMetricsResponse);
                public static encode(message: WUProtos.Networking.Responses.IPushPerformanceMetricsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.PushPerformanceMetricsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.PushPerformanceMetricsResponse;
                public static toObject(message: WUProtos.Networking.Responses.PushPerformanceMetricsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IQuestAcquireDailiesResponse {
                added_quest_gmt_ids?: (string[]|null);
                replaced_quest_gmt_ids?: (string[]|null);
                deleted_quest_gmt_ids?: (string[]|null);
            }

            class QuestAcquireDailiesResponse implements IQuestAcquireDailiesResponse {
                constructor(properties?: WUProtos.Networking.Responses.IQuestAcquireDailiesResponse);
                public added_quest_gmt_ids: string[];
                public replaced_quest_gmt_ids: string[];
                public deleted_quest_gmt_ids: string[];
                public static encode(message: WUProtos.Networking.Responses.IQuestAcquireDailiesResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.QuestAcquireDailiesResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.QuestAcquireDailiesResponse;
                public static toObject(message: WUProtos.Networking.Responses.QuestAcquireDailiesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IQuestCompleteResponse {
                status?: (WUProtos.Networking.Responses.QuestCompleteResponse.Status|null);
            }

            class QuestCompleteResponse implements IQuestCompleteResponse {
                constructor(properties?: WUProtos.Networking.Responses.IQuestCompleteResponse);
                public status: WUProtos.Networking.Responses.QuestCompleteResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IQuestCompleteResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.QuestCompleteResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.QuestCompleteResponse;
                public static toObject(message: WUProtos.Networking.Responses.QuestCompleteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace QuestCompleteResponse {

                enum Status {
                    QUEST_COMPLETE_UNKNOWN = 0,
                    QUEST_COMPLETE_SUCCESS = 1,
                    QUEST_COMPLETE_STILL_IN_PROGRESS = 2,
                    QUEST_COMPLETE_ALREADY_COMPLETE = 3,
                    QUEST_COMPLETE_NOT_IN_QUEST_LOG = 4,
                    QUEST_COMPLETE_DAILY_TOO_OLD = 5,
                    QUEST_COMPLETE_DAILY_NOT_ENABLED_IN_GAME_CONFIG = 6,
                    QUEST_COMPLETE_ERROR = 7
                }
            }

            interface IRedeemGoogleReceiptResponse {
                transaction_token?: (string|null);
            }

            class RedeemGoogleReceiptResponse implements IRedeemGoogleReceiptResponse {
                constructor(properties?: WUProtos.Networking.Responses.IRedeemGoogleReceiptResponse);
                public transaction_token: string;
                public static encode(message: WUProtos.Networking.Responses.IRedeemGoogleReceiptResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.RedeemGoogleReceiptResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.RedeemGoogleReceiptResponse;
                public static toObject(message: WUProtos.Networking.Responses.RedeemGoogleReceiptResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace RedeemGoogleReceiptResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    FAILURE = 2
                }
            }

            interface IRedeemPasscodeResponse {
                result?: (WUProtos.Networking.Responses.RedeemPasscodeResponse.Result|null);
                acquired_item?: (WUProtos.Networking.Responses.RedeemPasscodeResponse.IAcquiredItem[]|null);
                acquired_items_proto?: (Uint8Array|null);
                passcode?: (string|null);
            }

            class RedeemPasscodeResponse implements IRedeemPasscodeResponse {
                constructor(properties?: WUProtos.Networking.Responses.IRedeemPasscodeResponse);
                public result: WUProtos.Networking.Responses.RedeemPasscodeResponse.Result;
                public acquired_item: WUProtos.Networking.Responses.RedeemPasscodeResponse.IAcquiredItem[];
                public acquired_items_proto: Uint8Array;
                public passcode: string;
                public static encode(message: WUProtos.Networking.Responses.IRedeemPasscodeResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.RedeemPasscodeResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.RedeemPasscodeResponse;
                public static toObject(message: WUProtos.Networking.Responses.RedeemPasscodeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace RedeemPasscodeResponse {

                enum Result {
                    UNSET = 0,
                    SUCCESS = 1,
                    NOT_AVAILABLE = 2,
                    OVER_INVENTORY_LIMIT = 3,
                    ALREADY_REDEEMED = 4
                }

                interface IAcquiredItem {
                    item?: (string|null);
                    count?: (number|Long|null);
                }

                class AcquiredItem implements IAcquiredItem {
                    constructor(properties?: WUProtos.Networking.Responses.RedeemPasscodeResponse.IAcquiredItem);
                    public item: string;
                    public count: (number|Long);
                    public static encode(message: WUProtos.Networking.Responses.RedeemPasscodeResponse.IAcquiredItem, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.RedeemPasscodeResponse.AcquiredItem;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.RedeemPasscodeResponse.AcquiredItem;
                    public static toObject(message: WUProtos.Networking.Responses.RedeemPasscodeResponse.AcquiredItem, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }
            }

            interface IRedeemPoiPassCodeResponse {
                status?: (WUProtos.Networking.Responses.RedeemPoiPassCodeResponse.Status|null);
                rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class RedeemPoiPassCodeResponse implements IRedeemPoiPassCodeResponse {
                constructor(properties?: WUProtos.Networking.Responses.IRedeemPoiPassCodeResponse);
                public status: WUProtos.Networking.Responses.RedeemPoiPassCodeResponse.Status;
                public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Networking.Responses.IRedeemPoiPassCodeResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.RedeemPoiPassCodeResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.RedeemPoiPassCodeResponse;
                public static toObject(message: WUProtos.Networking.Responses.RedeemPoiPassCodeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace RedeemPoiPassCodeResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    ALREADY_REDEEMED = 2,
                    FAILED_INVENTORY_CHECK = 3,
                    OUT_OF_RANGE = 4,
                    WRONG_LOCATION = 5,
                    RATE_LIMITED = 6,
                    INVALID = 7
                }
            }

            interface IReleaseEscrowedRewardsResponse {
                status?: (WUProtos.Networking.Responses.ReleaseEscrowedRewardsResponse.Status|null);
                claimed_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class ReleaseEscrowedRewardsResponse implements IReleaseEscrowedRewardsResponse {
                constructor(properties?: WUProtos.Networking.Responses.IReleaseEscrowedRewardsResponse);
                public status: WUProtos.Networking.Responses.ReleaseEscrowedRewardsResponse.Status;
                public claimed_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Networking.Responses.IReleaseEscrowedRewardsResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.ReleaseEscrowedRewardsResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.ReleaseEscrowedRewardsResponse;
                public static toObject(message: WUProtos.Networking.Responses.ReleaseEscrowedRewardsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace ReleaseEscrowedRewardsResponse {

                enum Status {
                    UNSET = 0,
                    CLAIM_SUCCESS = 1,
                    NO_ESCROW_ERROR = 2,
                    FULL_CAPACITY_ERROR = 3,
                    CATEGORY_UNKNOWN_ERROR = 4,
                    ABANDON_ALL_SUCCESS = 5
                }
            }

            interface IRemoveLoginResponse {
                success?: (boolean|null);
                login_detail?: (WUProtos.Data.ILoginDetail[]|null);
            }

            class RemoveLoginResponse implements IRemoveLoginResponse {
                constructor(properties?: WUProtos.Networking.Responses.IRemoveLoginResponse);
                public success: boolean;
                public login_detail: WUProtos.Data.ILoginDetail[];
                public static encode(message: WUProtos.Networking.Responses.IRemoveLoginResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.RemoveLoginResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.RemoveLoginResponse;
                public static toObject(message: WUProtos.Networking.Responses.RemoveLoginResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IRemoveVaultItemResponse {
                status?: (WUProtos.Networking.Responses.RemoveVaultItemResponse.Status|null);
            }

            class RemoveVaultItemResponse implements IRemoveVaultItemResponse {
                constructor(properties?: WUProtos.Networking.Responses.IRemoveVaultItemResponse);
                public status: WUProtos.Networking.Responses.RemoveVaultItemResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IRemoveVaultItemResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.RemoveVaultItemResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.RemoveVaultItemResponse;
                public static toObject(message: WUProtos.Networking.Responses.RemoveVaultItemResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace RemoveVaultItemResponse {

                enum Status {
                    NONE = 0,
                    SUCCESS = 1,
                    VAULT_ITEM_NOT_FOUND = 2
                }
            }

            interface IRentPotResponse {
                status?: (WUProtos.Networking.Responses.RentPotResponse.Status|null);
            }

            class RentPotResponse implements IRentPotResponse {
                constructor(properties?: WUProtos.Networking.Responses.IRentPotResponse);
                public status: WUProtos.Networking.Responses.RentPotResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IRentPotResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.RentPotResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.RentPotResponse;
                public static toObject(message: WUProtos.Networking.Responses.RentPotResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace RentPotResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    TOO_FAR = 2,
                    POI_CLOSED = 3,
                    FEATURE_DISABLED = 4,
                    INVALID_POT = 5,
                    POT_ALREADY_RENTED = 6,
                    INSUFFICIENT_RESOURCES = 7
                }
            }

            interface ISetPlayerFlagToDefaultResponse {
                did_set_flag?: (boolean|null);
            }

            class SetPlayerFlagToDefaultResponse implements ISetPlayerFlagToDefaultResponse {
                constructor(properties?: WUProtos.Networking.Responses.ISetPlayerFlagToDefaultResponse);
                public did_set_flag: boolean;
                public static encode(message: WUProtos.Networking.Responses.ISetPlayerFlagToDefaultResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.SetPlayerFlagToDefaultResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.SetPlayerFlagToDefaultResponse;
                public static toObject(message: WUProtos.Networking.Responses.SetPlayerFlagToDefaultResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface ISetRunestonesResponse {
                status?: (WUProtos.Enums.ChallengeRpcStatus|null);
                state?: (WUProtos.Data.IChamberState|null);
                player_snapshot?: (WUProtos.Data.Client.IClientPlayerSnapshot|null);
                fortress_id?: (string|null);
                partner_id?: (string|null);
            }

            class SetRunestonesResponse implements ISetRunestonesResponse {
                constructor(properties?: WUProtos.Networking.Responses.ISetRunestonesResponse);
                public status: WUProtos.Enums.ChallengeRpcStatus;
                public state?: (WUProtos.Data.IChamberState|null);
                public player_snapshot?: (WUProtos.Data.Client.IClientPlayerSnapshot|null);
                public fortress_id: string;
                public partner_id: string;
                public static encode(message: WUProtos.Networking.Responses.ISetRunestonesResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.SetRunestonesResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.SetRunestonesResponse;
                public static toObject(message: WUProtos.Networking.Responses.SetRunestonesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IStoryboardCancelResponse {
                status?: (WUProtos.Networking.Responses.StoryboardCancelResponse.Status|null);
            }

            class StoryboardCancelResponse implements IStoryboardCancelResponse {
                constructor(properties?: WUProtos.Networking.Responses.IStoryboardCancelResponse);
                public status: WUProtos.Networking.Responses.StoryboardCancelResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IStoryboardCancelResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.StoryboardCancelResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.StoryboardCancelResponse;
                public static toObject(message: WUProtos.Networking.Responses.StoryboardCancelResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace StoryboardCancelResponse {

                enum Status {
                    STORYBOARD_SKIP_UNKNOWN = 0,
                    STORYBOARD_SKIP_SUCCESS = 1,
                    STORYBOARD_SKIP_ERROR = 2
                }
            }

            interface IStoryboardCompleteResponse {
                status?: (WUProtos.Networking.Responses.StoryboardCompleteResponse.Status|null);
            }

            class StoryboardCompleteResponse implements IStoryboardCompleteResponse {
                constructor(properties?: WUProtos.Networking.Responses.IStoryboardCompleteResponse);
                public status: WUProtos.Networking.Responses.StoryboardCompleteResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IStoryboardCompleteResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.StoryboardCompleteResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.StoryboardCompleteResponse;
                public static toObject(message: WUProtos.Networking.Responses.StoryboardCompleteResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace StoryboardCompleteResponse {

                enum Status {
                    STORYBOARD_COMPLETE_UNKNOWN = 0,
                    STORYBOARD_COMPLETE_SUCCESS = 1,
                    STORYBOARD_COMPLETE_ALREADY_COMPLETED = 2,
                    STORYBOARD_COMPLETE_STEPS_MISMATCH = 3,
                    STORYBOARD_COMPLETE_ERROR = 4
                }
            }

            interface IStoryboardDoStepResponse {
                status?: (WUProtos.Networking.Responses.StoryboardDoStepResponse.Status|null);
                rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
            }

            class StoryboardDoStepResponse implements IStoryboardDoStepResponse {
                constructor(properties?: WUProtos.Networking.Responses.IStoryboardDoStepResponse);
                public status: WUProtos.Networking.Responses.StoryboardDoStepResponse.Status;
                public rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public static encode(message: WUProtos.Networking.Responses.IStoryboardDoStepResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.StoryboardDoStepResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.StoryboardDoStepResponse;
                public static toObject(message: WUProtos.Networking.Responses.StoryboardDoStepResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace StoryboardDoStepResponse {

                enum Status {
                    STORYBOARD_DO_STEP_UNKNOWN = 0,
                    STORYBOARD_DO_STEP_SUCCESS = 1,
                    STORYBOARD_DO_STEP_BAD_STEP_NUMBER = 2,
                    STORYBOARD_DO_STEP_NO_RESET_ALLOWED = 3,
                    STORYBOARD_DO_STEP_RESET_REQUIREMENTS_FAILED = 4,
                    STORYBOARD_DO_STEP_START_REQUIREMENTS_FAILED = 5,
                    STORYBOARD_DO_STEP_ERROR = 6,
                    STORYBOARD_DO_STEP_SUCCESS_AND_COMPLETION = 7
                }
            }

            interface ISubmitNewPoiResponse {
                status?: (WUProtos.Networking.Responses.SubmitNewPoiResponse.Status|null);
                message?: (string[]|null);
            }

            class SubmitNewPoiResponse implements ISubmitNewPoiResponse {
                constructor(properties?: WUProtos.Networking.Responses.ISubmitNewPoiResponse);
                public status: WUProtos.Networking.Responses.SubmitNewPoiResponse.Status;
                public message: string[];
                public static encode(message: WUProtos.Networking.Responses.ISubmitNewPoiResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.SubmitNewPoiResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.SubmitNewPoiResponse;
                public static toObject(message: WUProtos.Networking.Responses.SubmitNewPoiResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace SubmitNewPoiResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    FAILURE = 2,
                    INTERNAL_ERROR = 3,
                    TOO_MANY_RECENT_SUBMISSIONS = 4,
                    INVALID_INPUT = 5,
                    MINOR = 6
                }
            }

            interface IUpdateNotificationResponse {
                notification_ids?: (string[]|null);
                create_timestamp_ms?: ((number|Long)[]|null);
                state?: (WUProtos.Enums.NotificationState|null);
            }

            class UpdateNotificationResponse implements IUpdateNotificationResponse {
                constructor(properties?: WUProtos.Networking.Responses.IUpdateNotificationResponse);
                public notification_ids: string[];
                public create_timestamp_ms: (number|Long)[];
                public state: WUProtos.Enums.NotificationState;
                public static encode(message: WUProtos.Networking.Responses.IUpdateNotificationResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.UpdateNotificationResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.UpdateNotificationResponse;
                public static toObject(message: WUProtos.Networking.Responses.UpdateNotificationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            interface IUpdateProfileFieldResponse {
                status?: (WUProtos.Networking.Responses.UpdateProfileFieldResponse.Status|null);
            }

            class UpdateProfileFieldResponse implements IUpdateProfileFieldResponse {
                constructor(properties?: WUProtos.Networking.Responses.IUpdateProfileFieldResponse);
                public status: WUProtos.Networking.Responses.UpdateProfileFieldResponse.Status;
                public static encode(message: WUProtos.Networking.Responses.IUpdateProfileFieldResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.UpdateProfileFieldResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.UpdateProfileFieldResponse;
                public static toObject(message: WUProtos.Networking.Responses.UpdateProfileFieldResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace UpdateProfileFieldResponse {

                enum Status {
                    UNSET = 0,
                    SUCCESS = 1,
                    INVALID_VALUE = 2,
                    ERROR = 3
                }
            }

            interface IUploadPoiPhotoByUrlResponse {
                status?: (WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse.PortalCurationImageResult.Result|null);
            }

            class UploadPoiPhotoByUrlResponse implements IUploadPoiPhotoByUrlResponse {
                constructor(properties?: WUProtos.Networking.Responses.IUploadPoiPhotoByUrlResponse);
                public status: WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse.PortalCurationImageResult.Result;
                public static encode(message: WUProtos.Networking.Responses.IUploadPoiPhotoByUrlResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse;
                public static toObject(message: WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace UploadPoiPhotoByUrlResponse {

                interface IPortalCurationImageResult {
                    result?: (WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse.PortalCurationImageResult.Result|null);
                }

                class PortalCurationImageResult implements IPortalCurationImageResult {
                    constructor(properties?: WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse.IPortalCurationImageResult);
                    public result: WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse.PortalCurationImageResult.Result;
                    public static encode(message: WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse.IPortalCurationImageResult, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse.PortalCurationImageResult;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse.PortalCurationImageResult;
                    public static toObject(message: WUProtos.Networking.Responses.UploadPoiPhotoByUrlResponse.PortalCurationImageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace PortalCurationImageResult {

                    enum Result {
                        UNSET = 0,
                        SUCCESS = 1,
                        FEATURE_DISABLED = 2,
                        ALREADY_UPLOADED = 3,
                        IMAGE_NOT_FOUND = 4,
                        IMAGE_TOO_BIG = 5,
                        IMAGE_NOT_SERVABLE = 6,
                        PORTAL_NOT_FOUND = 7
                    }
                }
            }

            interface IUsePortkeyResponse {
                status?: (WUProtos.Networking.Responses.UsePortkeyResponse.Status|null);
                portkey_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                all_bonus_nodes_rewards?: (WUProtos.Networking.Responses.UsePortkeyResponse.IPortkeyBonusGameNodeRewards[]|null);
            }

            class UsePortkeyResponse implements IUsePortkeyResponse {
                constructor(properties?: WUProtos.Networking.Responses.IUsePortkeyResponse);
                public status: WUProtos.Networking.Responses.UsePortkeyResponse.Status;
                public portkey_rewards?: (WUProtos.Data.Loot.LootReward.ILootCollection|null);
                public all_bonus_nodes_rewards: WUProtos.Networking.Responses.UsePortkeyResponse.IPortkeyBonusGameNodeRewards[];
                public static encode(message: WUProtos.Networking.Responses.IUsePortkeyResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.UsePortkeyResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.UsePortkeyResponse;
                public static toObject(message: WUProtos.Networking.Responses.UsePortkeyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace UsePortkeyResponse {

                enum Status {
                    UNKNOWN = 0,
                    SUCCESS = 1,
                    ERROR = 2,
                    INVALID_PORTKEY = 3
                }

                interface IPortkeyBonusGameNodeRewards {
                    rewards?: (WUProtos.Networking.Responses.UsePortkeyResponse.PortkeyBonusGameNodeRewards.IPortkeyBonusGameRewardTuple[]|null);
                }

                class PortkeyBonusGameNodeRewards implements IPortkeyBonusGameNodeRewards {
                    constructor(properties?: WUProtos.Networking.Responses.UsePortkeyResponse.IPortkeyBonusGameNodeRewards);
                    public rewards: WUProtos.Networking.Responses.UsePortkeyResponse.PortkeyBonusGameNodeRewards.IPortkeyBonusGameRewardTuple[];
                    public static encode(message: WUProtos.Networking.Responses.UsePortkeyResponse.IPortkeyBonusGameNodeRewards, writer?: $protobuf.Writer): $protobuf.Writer;
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.UsePortkeyResponse.PortkeyBonusGameNodeRewards;
                    public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.UsePortkeyResponse.PortkeyBonusGameNodeRewards;
                    public static toObject(message: WUProtos.Networking.Responses.UsePortkeyResponse.PortkeyBonusGameNodeRewards, options?: $protobuf.IConversionOptions): { [k: string]: any };
                    public toJSON(): { [k: string]: any };
                }

                namespace PortkeyBonusGameNodeRewards {

                    interface IPortkeyBonusGameRewardTuple {
                        reward?: (WUProtos.Data.Loot.ILootReward|null);
                        multiplier?: (number|null);
                        category_proto_id?: (string|null);
                    }

                    class PortkeyBonusGameRewardTuple implements IPortkeyBonusGameRewardTuple {
                        constructor(properties?: WUProtos.Networking.Responses.UsePortkeyResponse.PortkeyBonusGameNodeRewards.IPortkeyBonusGameRewardTuple);
                        public reward?: (WUProtos.Data.Loot.ILootReward|null);
                        public multiplier: number;
                        public category_proto_id: string;
                        public static encode(message: WUProtos.Networking.Responses.UsePortkeyResponse.PortkeyBonusGameNodeRewards.IPortkeyBonusGameRewardTuple, writer?: $protobuf.Writer): $protobuf.Writer;
                        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.UsePortkeyResponse.PortkeyBonusGameNodeRewards.PortkeyBonusGameRewardTuple;
                        public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.UsePortkeyResponse.PortkeyBonusGameNodeRewards.PortkeyBonusGameRewardTuple;
                        public static toObject(message: WUProtos.Networking.Responses.UsePortkeyResponse.PortkeyBonusGameNodeRewards.PortkeyBonusGameRewardTuple, options?: $protobuf.IConversionOptions): { [k: string]: any };
                        public toJSON(): { [k: string]: any };
                    }
                }
            }

            interface IUsePotionResponse {
                result?: (WUProtos.Networking.Responses.UsePotionResponse.UsePotionResult|null);
            }

            class UsePotionResponse implements IUsePotionResponse {
                constructor(properties?: WUProtos.Networking.Responses.IUsePotionResponse);
                public result: WUProtos.Networking.Responses.UsePotionResponse.UsePotionResult;
                public static encode(message: WUProtos.Networking.Responses.IUsePotionResponse, writer?: $protobuf.Writer): $protobuf.Writer;
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WUProtos.Networking.Responses.UsePotionResponse;
                public static fromObject(object: { [k: string]: any }): WUProtos.Networking.Responses.UsePotionResponse;
                public static toObject(message: WUProtos.Networking.Responses.UsePotionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
                public toJSON(): { [k: string]: any };
            }

            namespace UsePotionResponse {

                enum UsePotionResult {
                    UNKNOWN_USE_POTION_RESULT = 0,
                    POTION_USED = 1,
                    POTION_NOT_IN_VAULT = 2,
                    POTION_EFFECTS_ALREADY_ACTIVE = 3,
                    POTION_NOT_USABLE_IN_OVERWORLD = 4
                }
            }
        }
    }
}
