syntax = "proto3";
package WUProtos.Data.Client;

import "WUProtos/Data/Client/ClientProfileConfig.proto";
import "WUProtos/Data/Color.proto";
import "WUProtos/Data/Requirements.proto";
import "WUProtos/Data/AudioParameter.proto";
import "WUProtos/Data/SoundConfig.proto";
import "WUProtos/Data/Collection/CollectionFamily.proto";

message ClientGmTemplate {
    oneof MessageType {
        ClientCollectionFamily collection_family = 1;
        ClientCollectionItem collection_item = 2;
        ClientWalkboxTemplate walkbox_template = 3;
        ClientEncounter encounter = 4;
        ClientPortkey portkey = 5;
        ClientVaultItem vault_item = 6;
        ClientGameConfig game_config = 7;
        ClientStorePack store_pack = 8;
        ClientSpell spell = 9;
        ClientProtegoPattern protego_pattern = 10;
        ClientChamberTemplate chamber_template = 11;
        ClientCollectionPage collection_page = 12;
        ClientTeamControl team_control = 13;
        ClientStoreConfig store_config = 14;
        ClientStoreSubcategory store_subcategory = 15;
        ClientHaptic haptic = 16;
        ClientProfession profession = 17;
        ClientBonusCategory bonus_category = 18;
        ClientVaultCategory vault_category = 19;
        .WUProtos.Data.Client.ClientProfileConfig profile_config = 20;
        ClientMapIngredient map_ingredient = 21;
        ClientMapAbility map_ability = 22;
        ClientStoryboard storyboard = 23;
        ClientRpgstat rpgstat = 24;
        ClientRpgstatsBlock rpgstats_block = 25;
        ClientSelfieAvatarAsset selfie_avatar_asset = 26;
        ClientBuff buff = 27;
        ClientOutpostTemplate outpost_template = 29;
        ClientChallengeBonus challenge_bonus = 30;
        ClientRecipe recipe = 31;
        ClientMasterNote master_note = 32;
        ClientQuest quest = 33;
        ClientDailyRewardMonthlySchedule daily_reward_monthly_schedule = 34;
        ClientEncounterType encounter_type = 35;
        ClientEvent event = 36;
    }

    message ClientGameConfig {
        string id = 1;
        .WUProtos.Data.Color target_glyph_color = 2;
        .WUProtos.Data.Color reticle_glyph_color = 3;
        .WUProtos.Data.Color aligned_glyph_color = 4;
        float encounter_angle_of_spawn = 5;
        float time_before_ar_hint_display = 6;
        float max_lock_distance_from_origin = 7;
        float distance_behind_camera_to_spawn_marker = 8;
        float time_before_switch_to_ar_simple = 9;
        string tutorial_encounter_id = 10;
        float encounter_reset_gforce = 11;
        float local_map_update_interval_seconds = 12;
        ClientFlooNetworkConfig floo_network_config = 13;
        repeated int64 floo_contribution_button_values = 14;
        int32 app_background_map = 15;
        int32 app_background_full = 16;
        float triggerable_cooldown = 17;
        int32 level_up_trigger_priority = 18;
        int32 walkbox_trigger_priority = 19;
        PermissionsConfigStaticList permissions_config = 20;
        repeated float swish_game_scoring_thresholds = 22;
        repeated float swish_game_scoring_bonuses = 23;
        AudioConfig audio_config = 24;
        repeated string audio_initial_banks = 25;
        repeated CollectionSubfeaturePrestigeLevels subfeature_prestige_levels = 26;
        ClientBonusConfig bonus_config = 27;
        string portkey_wrackspurt_collection_haptic_key = 28;
        map<string, string> parkmode_bgs = 29;
        int32 potion_masternote_unlock_treshold = 30;
        repeated CollectionSubfeatureFamilyOrders subfeature_family_orders = 31;
        repeated BatterySaverProfile battery_saver_profiles = 32;
        int32 rate_app_min_player_level = 33;
        int32 rate_app_cooldown_days = 34;
        int32 too_fast_cooldown = 35;
        repeated EncounterSoundBanks encounter_banks = 36;
        int32 daily_reward_popup_trigger_priority = 37;
        int32 rate_app_trigger_priority = 38;
        ClientFtueVideoConfig ftue_video = 43;
        string tutorial_potion_brew = 44;
        string generic_trace_spell_fail_sfx = 45;
        string tracing_spell_glyph_sfx = 46;
        string tracing_complete_sfx = 47;
        string spell_bar_increasing_sfx = 48;
        string bad_spell_cast_sfx = 49;
        string good_spell_cast_sfx = 50;
        string great_spell_cast_sfx = 51;
        string perfect_spell_cast_sfx = 52;
        string registry_sticker_placed_haptic_key = 53;
        repeated string rewards_vessel_by_rarity = 54;
        repeated string rewards_sound_banks = 55;
        string first_sticker_storyboard_id = 56;
        string first_sticker_collection_id = 57;
        .WUProtos.Data.Color avatar_default_color = 58;
        .WUProtos.Data.SoundConfig lock_on_completion_sfx = 59;
        .WUProtos.Data.SoundConfig lock_on_time_up_sfx = 60;
        .WUProtos.Data.SoundConfig protego_cast_sfx = 61;
        .WUProtos.Data.SoundConfig protego_time_up_sfx = 62;
        int32 ms_before_final_intensity = 63;
        int32 ms_before_secondary_intensity = 64;
        repeated .WUProtos.Data.AudioParameter challenge_thirty_seconds_left_stinger = 65;
        repeated .WUProtos.Data.AudioParameter challenge_encounter_player_victorious_stinger = 66;
        repeated .WUProtos.Data.AudioParameter challenge_encounter_player_defeated_stinger = 67;
        repeated .WUProtos.Data.AudioParameter challenge_begin_stinger = 68;
        repeated .WUProtos.Data.AudioParameter challenge_finish_victory = 69;
        repeated .WUProtos.Data.AudioParameter challenge_finish_defeat = 70;
        repeated .WUProtos.Data.AudioParameter challenge_elite_mob_spawns_stinger = 71;
        string internet_reachability_check_url = 72;
        int32 rate_app_max_prompts = 73;
        int32 rate_app_version = 74;
        int32 rate_app_trigger_wizarding_challenge = 75;
        int32 rate_app_trigger_sticker_page_complete = 76;
        int32 rate_app_trigger_event_quest_line_complete = 77;
        int32 checks_until_gps_prompt = 78;
        repeated string fortress_sound_banks = 79;
        .WUProtos.Data.SoundConfig ten_seconds_left_in_challenge_sfx = 80;
        .WUProtos.Data.SoundConfig long_second_left_in_challenge_sfx = 81;
        .WUProtos.Data.SoundConfig short_half_second_left_in_challenge_sfx = 82;
        .WUProtos.Data.SoundConfig one_minute_warning_sfx = 83;
        bool rate_app_trigger_map_enter = 84;
        string professions_affinity_advantage_icon = 85;
        string professions_affinity_neutral_icon = 86;
        string professions_affinity_disadvantage_icon = 87;
        int32 internet_outage_backoff_time = 88;
        string ar_core_storyboard_trigger = 89;
        repeated VoiceOverLanguageMapping voice_over_mappings = 90;
        int32 in_app_message_trigger_priority = 91;
        float internal_fortress_interact_range = 92;
        float low_connectivity_threshold_bytes_per_ms = 93;
        int32 game_size_in_kb = 94;
        string wc_map_enemy_marker_buff_occupied_image = 95;
        string wc_map_enemy_marker_buff_vacant_image = 96;
        string wc_enemy_look_in_buff_border_image = 97;
        repeated LocalizationMapping localization_mappings = 98;

        message ClientFtueVideoConfig {
            oneof VideoSource {
                ClientFtueVideoFallbackDefinition from_assets = 1;
                ClientFtueVideoNameDefinition from_url = 2;
            }

            repeated string quality_buckets = 3;
            map<string, ClientFtueVideoQualityMapping> quality_mappings = 4;

            message ClientFtueVideoQualityMapping {
                Measure measure = 1;
                int32 lower_bound = 2;
                int32 upper_bound = 3;

                enum Measure {
                    camera_pixel_width = 0;
                    camera_pixel_height = 1;
                    screen_pixel_width = 2;
                    screen_pixel_height = 3;
                }
            }

            message ClientFtueVideoFallbackDefinition {
                repeated ClientFtueVideoNameDefinition name_definitions = 1;
            }

            message ClientFtueVideoNameDefinition {
                string name_format = 1;
            }
        }

        message ClientFlooNetworkConfig {
            repeated ElectoralVotesPerFlooPoints electoral_votes_per_floo_points = 1;

            message ElectoralVotesPerFlooPoints {
                repeated string fortress_prefabs = 1;
            }
        }

        message ClientBonusConfig {
            string id = 1;
            repeated float accuracy_tier = 2;
            repeated string accuracy_tier_bonus_id = 3;
            repeated string accuracy_tier_bonus_text = 4;
            string first_time_bonus_id = 5;
            string first_time_bonus_text = 6;
            string life_time_bonus_id = 7;
            string life_time_bonus_text = 8;
        }

        message LocalizationMapping {
            string language_code = 1;
            string loc_string = 2;
            bool is_enabled = 3;
        }

        message PermissionsConfigStaticList {
            repeated PermissionsConfigStaticData list = 1;

            message PermissionsConfigStaticData {
                string id = 1;
                string initial_prompt = 2;
                string denial_prompt = 3;
                bool optional = 4;
                string title = 5;
                bool begging_enabled = 6;
            }
        }

        message VoiceOverLanguageMapping {
            string language_code = 1;
            string language_folder = 2;
        }

        message AudioConfig {
            string music_event = 1;
            repeated MusicConfig music_config = 2;
        }

        message BatterySaverProfile {
            repeated string profiles = 1;
            string name = 2;
        }

        message CollectionSubfeatureFamilyOrders {
            .WUProtos.Data.Collection.CollectionFamily.SubfeatureType subfeature = 1;
            repeated string family_ids = 2;
        }

        message CollectionSubfeaturePrestigeLevels {
            .WUProtos.Data.Collection.CollectionFamily.SubfeatureType subfeature = 1;
            repeated CollectionPrestigeLevel prestige_levels = 2;
        }

        message EncounterSoundBanks {
            string encounter_type = 1;
            repeated string sound_banks = 2;
        }

        message MusicConfig {
            int32 music_location = 1;
            repeated .WUProtos.Data.AudioParameter parameters = 2;
        }
    }

    message ClientCollectionFamily {
        string id = 1;
        string name = 3;
        string description = 4;
        string icon = 5;
        string landmark_texture = 6;
        string landmark_prefab = 7;
        string landmark_description = 8;
        bool show_in_ui = 9;
        string landmark_icon = 11;
        .WUProtos.Data.Color color = 12;
        .WUProtos.Data.Color color_highlight = 13;
        string trace_prefab = 14;
        repeated string border_images = 15;
        string family_runestone_icon = 16;
        .WUProtos.Data.SoundConfig sound = 17;
        .WUProtos.Data.Requirements unarchive_requirements = 18;
        string trace_rarity_vfx_override = 19;
        repeated CollectionPrestigeLevel prestige_override = 20;
        bool hide_landmark_info_details = 21;
    }

    message CollectionPrestigeLevel {
        string border_image = 1;
        string name = 2;
        .WUProtos.Data.Color color = 3;
        bool is_metallic = 4;
        string frame_mesh = 5;
        string normal_map = 6;
        string albedo_map = 7;
        float roughness = 8;
    }

    message ClientVaultItem {
        string id = 1;
        string name = 2;
        string icon = 3;
        string prefab = 4;
        int64 rarity = 5;
        string description = 6;
        bool show_in_vault_item_menu = 8;
        bool deletable = 9;
        bool show_in_rewards_flow = 10;
        .WUProtos.Data.Color color = 11;
        string background = 12;
        int32 ordering = 13;
        .WUProtos.Data.SoundConfig reward_sound = 14;
        int32 reward_sound_priority = 15;
        string spine_animated_icon = 16;
    }

    message ClientStoreConfig {
        string id = 1;
        repeated StoreCategory store_categories = 2;
        repeated StoreRarity store_rarities = 3;
        string default_store_pack_icon_path = 4;

        message StoreRarity {
            string id = 1;
            .WUProtos.Data.Color text_color = 2;
            string title = 3;
        }

        message StoreCategory {
            string icon_path = 1;
            string title = 2;
            string header = 3;
            .WUProtos.Data.Color header_color = 4;
            string background = 5;
            .WUProtos.Data.Color background_color = 6;
            repeated string store_subcategories = 7;
            string header_prefab = 8;
            .WUProtos.Data.Color item_color = 9;
            bool enabled = 10;
        }
    }

    message ClientSpell {
        string id = 1;
        string name = 2;
        repeated string charge_up_effect = 3;
        map<string, string> timelines = 4;
        map<string, string> critical_hits = 5;
        string pattern = 6;
        string glyph_image = 7;
        string protego_player_succeed_tl = 8;
        string protego_player_failed_tl = 9;
        string protego_player_succeed_intro_tl = 10;
        string end_burst_effect = 11;
        string rng_vfx_tl = 12;
        string spell_rng_loop_tl = 13;
        string spell_rng_succeed_tl = 14;
        string spell_rng_fail_tl = 15;
    }

    message ClientTeamControl {
        string id = 1;
        string team_name = 2;
        string team_icon = 3;
        .WUProtos.Data.Color team_color = 4;
        string team_header_icon = 5;
        string team_banner = 6;
        string team_flag = 7;
    }

    message ClientSelfieAvatarAsset {
        string id = 1;
        repeated .WUProtos.Data.Requirements unlock_conditions = 2;
        string asset_script_name = 3;
        string icon = 4;
        SelfieAvatarAssetType asset_type = 5;
        SelfieAvatarLensType lens_type = 6;
        bool visible = 7;
        SelfieAvatarMediaSupportedType media_supported_type = 8;
        bool animated = 9;
        string store_pack_id = 10;
        int32 order_id = 11;
        bool is_full_body_lens = 12;
        bool is_empty_asset = 13;
        bool show_badge = 14;
        .WUProtos.Data.Requirements visibility_conditions = 15;
        string stock_asset_name = 16;

        enum SelfieAvatarAssetType {
            UNKNOWN_ASSET_TYPE = 0;
            LENSE = 1;
            FILTER = 2;
            FRAME = 3;
            STICKER = 4;
            STOCK = 5;
        }

        enum SelfieAvatarLensType {
            UNKNOWN_LENS_TYPE = 0;
            HEAD = 1;
            FACE = 2;
            NECK = 3;
        }

        enum SelfieAvatarMediaSupportedType {
            UNKNOWN_MEDIA_TYPE = 0;
            ALL = 1;
            VIDEO = 2;
            PHOTO = 3;
        }
    }

    message ClientRpgstatsBlock {
        string id = 1;
        repeated string relevant_stats = 2;
    }

    message ClientStorePack {
        string id = 1;
        bool show_in_inline_buy = 2;
        string name = 3;
        repeated StorePackConfig store_pack_config = 4;
        string sku_id = 5;
        string override_title_loc_key = 6;
        int32 max_reward_item_count = 7;

        message StorePackConfig {
            int32 priority = 1;
            string subcategory_id = 2;
            string icon_path = 3;
            bool show_quantity_banner = 4;
            string quantity_override = 5;
            string prefab_path = 6;
            string marketing_text = 7;
            string description_text = 8;
            bool show_badge = 9;
            int32 bonus_value = 10;
            string rarity_id = 11;
            StorePackConfigSize pack_size = 12;
            bool show_in_hud = 13;
            int32 hud_priority = 14;
            string hud_icon_path = 15;
            string icon2_path = 16;
            string popup_image_override = 17;
            bool hide_pack_on_sold_out = 18;
            bool hide_pack_on_map_hud_click = 19;

            enum StorePackConfigSize {
                SIZE_SMALL = 0;
                SIZE_MEDIUM = 1;
                SIZE_LARGE = 2;
            }
        }
    }

    message ClientStoryboard {
        string id = 1;
        repeated ClientStoryboardStep steps = 2;
        string trigger_point = 3;
        int32 priority = 4;

        message ClientStoryboardStep {
            string custom_state = 1;

            oneof Data {
                StoryboardGenericDialogStep generic_dialog = 2;
                StoryboardPauseStep pause = 3;
                StoryboardAdviceOverlayStep advice_overlay = 4;
                StoryboardAdviceInterjectionStep advice_interjection = 5;
                StoryboardConversationInterjectionStep conversation_interjection = 6;
            }

            string call_to_action_asset = 7;
            string call_to_action_button_identifier = 8;

            message StoryboardPauseStep {
            }

            message StoryboardGenericDialogStep {
                string title = 1;
                string text = 2;
                string button_text = 3;
            }

            message SpeechBubble {
                string character_portrait_image = 1;
                string character_name_lockey = 2;
                string bubble_prefab_name = 3;
                string bubble_content_lockey = 4;
                .WUProtos.Data.SoundConfig sound_config = 5;
            }

            message StoryboardConversationInterjectionStep {
                repeated SpeechBubble conversation = 1;
            }

            message StoryboardAdviceOverlayStep {
                SpeechBubble speech_bubble = 1;
                bool requires_scrim = 2;
                AdviceOverlayAlignment alignment = 3;
                bool show_continue_action_text = 4;

                enum AdviceOverlayAlignment {
                    bottom = 0;
                    top = 1;
                }
            }

            message StoryboardAdviceInterjectionStep {
                string character_portrait_image = 1;
                string character_name_lockey = 2;
                string content_text_lockey = 3;
                string content_image_name = 4;
                .WUProtos.Data.SoundConfig sound_config = 5;
                string button_lockey = 6;
            }
        }
    }

    message ClientRpgstat {
        string id = 1;
        string tooltip = 2;
        bool percentage = 3;
        bool show_ui = 4;
        string stat_name = 5;
        int32 display_threshold = 6;
        string icon_display_type = 7;
        string info_desc = 8;
        map<string, string> icons = 9;
    }

    message ClientRecipe {
        string id = 1;
        string name = 2;
        string description = 3;
        string icon = 4;
        string model = 5;
        string collect_fx = 6;
        string crafting_fx = 7;
        string reveal_fx = 8;
        .WUProtos.Data.Color primary_color = 9;
        .WUProtos.Data.Color secondary_color = 10;
        int32 index = 11;
    }

    message ClientQuest {
        string id = 1;
        int32 sort_order = 2;
        string quest_name_loc_key = 3;
        string quest_desc_loc_key = 4;
    }

    message ClientProtegoPattern {
        string id = 1;
        Vector2 ui_target_start_pos = 2;
        float ui_target_start_radius = 3;
        Vector2 ui_target_end_pos = 4;
        float ui_target_end_radius = 5;

        message Vector2 {
            float x = 1;
            float y = 2;
        }
    }

    message ClientProfession {
        string id = 1;
        int32 display_order = 2;
        string name = 3;
        string desc = 4;
        string icon = 5;
        string mentor_name = 6;
        string mentor_desc = 7;
        string mentor_icon = 8;
        string screen_background = 9;
        string icon_stamp = 10;
        string screen_background_header = 11;
        bool show_coming_soon = 12;
        bool show_profession_rank_meter = 14;
        string profession_activated_sfx = 15;
        map<string, ClientProfessionRank> profession_ranks_map = 16;
        string enemy_affinity_icon = 17;
        string enemy_affinity_name = 18;
        string affinity_desc = 19;
        .WUProtos.Data.Color profession_color = 20;
    }

    message ClientProfessionRank {
        map<string, ClientProfessionNode> profession_nodes_map = 1;
        string name = 2;
        repeated ClientProfessionNode profession_nodes = 3;
        string image_unlocked = 4;
        string image_unlocked_open = 5;
        string image_locked = 6;
        string image_locked_open = 7;
        int32 professin_rank_order = 8;

        message ClientProfessionNode {
            string name = 1;
            string icon = 2;
            repeated ClientProfessionNodeLevel levels = 3;
            string unlock_desc = 4;
            string completed_desc = 5;
            string completed_icon = 6;

            message ClientProfessionNodeLevel {
                bool is_grant_new_map_ability = 1;
            }
        }
    }

    message ClientPortkey {
        string id = 1;
        string name = 2;
        string icon = 3;
        string localized_complete_text = 4;
    }

    message ClientOutpostTemplate {
        string id = 1;
        string interior = 2;
        string exterior = 3;
    }

    message ClientMapIngredient {
        string id = 1;
        string prefab = 2;
        bool hide_at_capacity = 3;
    }

    message ClientMapAbility {
        string id = 1;
        string name = 2;
        string icon = 3;
        string description = 4;
        string effect_sprite = 5;
        string status_icon = 6;
        int32 slot = 7;
        string effect_prefab = 8;
        AdditionalSelectionRule rule = 9;

        enum AdditionalSelectionRule {
            none_additional_selection = 0;
            no_if_max_health = 1;
            no_if_max_focus = 2;
            no_if_alive = 3;
        }
    }

    message ClientHaptic {
        string id = 1;
        repeated int32 ioswait_timings = 2;
        repeated int32 ioshaptic_types = 3;
        repeated int32 android_wait_timings = 4;
        repeated int32 android_amplitudes = 5;
        repeated int32 android_durations = 6;
    }

    message ClientEvent {
        string id = 1;
        bool is_user_facing = 2;
        string title_text = 3;
        string description_text = 4;
        string image = 5;
        string encounter_icon = 6;
        string encounter_hud_tooltip_text = 7;
        string encounter_start_text = 8;
        .WUProtos.Data.Color quest_ui_frame_color = 9;
        .WUProtos.Data.Color quest_ui_background_color = 10;
    }

    message ClientEncounterType {
        string id = 1;
        bool show_in_look_in = 2;
        string look_in_description = 3;
        string look_in_icon = 4;
        string conditional_tag_stat_desc = 5;
    }

    message ClientEncounter {
        string id = 1;
        string encounter_searching_timeline = 2;
        repeated string encounter_searching_idle_timelines = 3;
        string encounter_flee_timeline = 4;
        string encounter_target = 5;
        repeated ClientEncounterStage stages = 6;
        string encounter_target_layout = 7;
        string search_target_layout = 8;
        repeated string encounter_assets = 9;
        string encounter_map_sprite = 10;
        repeated .WUProtos.Data.AudioParameter encounter_music_params = 11;
        string name = 12;
        string encounter_map_sprite_frame = 13;
        .WUProtos.Data.Color map_health_bar_color = 14;
        .WUProtos.Data.Color hud_health_bar_color = 15;

        message ClientEncounterStage {
            oneof Type {
                ClientEncounterStageSwish swish = 1;
                ClientEncounterStageCombat combat = 2;
                ClientEncounterStagePortkey portkey = 3;
                ClientEncounterStagePicture picture = 4;
            }

            float disappear_delay = 5;
            string intro_text = 6;
            repeated ClientSequenceData stage_setup_sequence = 7;
            repeated ClientSequenceData stage_completion_sequence = 8;
            string spell_aim_layout = 9;
            repeated string idle_loop_timelines = 10;
            string rng_intro_timeline = 11;
            string rng_loop_timeline = 12;
            string spell_failed_timeline = 13;
            repeated string combat_spell_list = 14;

            message ClientSequenceData {
                int32 sequence_type = 1;
                string obstacle = 2;
                string obstacle_alias = 3;
                string encounter_target = 4;
                string timeline_file = 5;
                float sequence_delay_time = 6;
                string sequence_layout_node = 7;
            }

            message ClientEncounterStageSwish {
                .WUProtos.Data.AudioParameter trace_succeeds_fanfare = 1;
                .WUProtos.Data.AudioParameter trace_fails_fanfare = 2;
            }

            message ClientEncounterStagePortkey {
                string scene_id = 1;
                string portal_id = 2;
                string object_placement_id = 3;
                string portal_placement_id = 4;
                string portkey_asset = 5;
            }

            message ClientEncounterStagePicture {
                string id = 1;
                float spawn_scale = 2;
                float min_scale = 3;
                float max_scale = 4;
                Vector3 simple_ar_pos_offset = 5;

                message Vector3 {
                    float x = 1;
                    float y = 2;
                    float z = 3;
                }
            }

            message ClientEncounterStageCombat {
                repeated ClientCombatState state_graph_nodes = 1;
                repeated ClientCombatEnemyTrait enemy_traits = 2;
                repeated ClientEncounterType enemy_rank_tags = 3;
                string enemy_flavor_text = 4;

                message ClientCombatState {
                    repeated ClientCombatMoveType possible_moves = 1;

                    message ClientCombatMoveType {
                        oneof CombatMove {
                            ClientCombatPlayerAttack player_attack = 1;
                            ClientCombatPlayerDefend player_defend = 2;
                            ClientCombatPlayerAutoAdvance player_auto_advance = 3;
                        }

                        string enemy_action_timeline = 4;
                        string player_succeed_timeline = 5;
                        string player_failed_timeline = 6;

                        message ClientCombatPlayerDefend {
                            repeated ClientCombatPlayerDefendPattern pattern_list = 1;

                            message ClientCombatPlayerDefendPattern {
                                int32 weight = 1;
                                string protego_pattern = 2;
                            }
                        }

                        message ClientCombatPlayerAutoAdvance {
                        }

                        message ClientCombatPlayerAttack {
                            string enemy_bone_name = 1;
                            float ui_target_radius = 2;
                            float reticle_time_to_fill = 3;
                        }
                    }
                }

                message ClientCombatEnemyTrait {
                    string id = 1;
                    string name = 2;
                    string icon = 3;
                    string description = 4;
                }
            }
        }
    }

    message ClientDailyRewardMonthlySchedule {
        string id = 1;
        map<uint32, ClientDailyReward> daily_rewards = 2;

        message ClientDailyReward {
            bool hide_as_crate = 1;
            bool make_sparkly = 2;
        }
    }

    message ClientCollectionPage {
        string id = 1;
        string name = 2;
        string page_prefab = 3;
        string icon_bg = 4;
        bool show_in_ui = 5;
        .WUProtos.Data.Requirements visibility_requirements = 6;
    }

    message ClientCollectionItem {
        string id = 1;
        string name = 2;
        string return_location = 3;
        string description = 4;
        string icon_returned = 5;
        bool show_in_ui = 6;
        repeated MysteryItemInfo mystery_data = 7;
        string sticker_placed_storyboard_id = 8;

        message MysteryItemInfo {
            string name = 1;
            string description = 2;
            string icon = 3;
            string placed_storyboard_id = 4;
        }
    }

    message ClientChamberTemplate {
        string id = 1;
        string name = 2;
        float challenge_leaving_warning_radius = 3;
        string arena_scene = 4;
        int32 base_difficulty = 5;
        map<int32, int32> runestone_difficulties = 6;
        map<string, string> parkmode_bgs = 7;
    }

    message ClientChallengeBonus {
        string id = 1;
        string display_text = 2;
        string icon = 3;
    }

    message ClientBuff {
        string id = 1;
        string reward_bonus_loc_key = 3;
        string reward_bonus_icon = 4;
        string status_icon = 5;
        string display_name = 6;
        repeated ClientConditionalModifiers conditional_modifiers = 7;

        message ClientConditionalModifiers {
            string desc = 1;
            map<string, ClientConditionalModifier> modifiers = 2;

            message ClientConditionalModifier {
                string desc = 1;
            }
        }
    }

    message ClientStoreSubcategory {
        string id = 1;
        int32 priority = 2;
    }

    message ClientVaultCategory {
        string id = 1;
        string name = 2;
        string description = 3;
        string icon = 4;
        bool show_in_vault = 5;
        float warning_threshold = 6;
        int32 category_display_order = 7;
        string increase_capacity_store_pack_proto_id = 8;
        repeated string increase_capacity_store_pack_proto_ids = 9;
        string store_item_name = 10;
        string store_item_icon = 11;
    }

    message ClientWalkboxTemplate {
        string id = 1;
        string name = 2;
        string icon = 3;
        string unlocked_icon = 4;
    }

    message ClientMasterNote {
        string id = 1;
        string name = 2;
        string description = 3;
    }

    message ClientBonusCategory {
        string id = 1;
        .WUProtos.Data.Color color = 2;
        string name_loc_key = 3;
        string background_image = 4;
    }
}
